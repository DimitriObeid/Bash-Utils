#!/usr/bin/env bash

# /////////////////////////////////////////////////////////////////////////////////////////////// #

#### FIRST STEP : DEFINING VARIABLES

## BASH-UTILS PATHS VARIABLES

# Bash-Utils root directory path.
__BASH_UTILS_ROOT="/usr/local/lib/Bash-utils"

# Bash-Utils sub-folders paths.
__BASH_UTILS="$__BASH_UTILS_ROOT/lib/"
__BASH_UTILS_BIN="$__BASH_UTILS_ROOT/bin"
__BASH_UTILS_CONF="$__BASH_UTILS_ROOT/config"
__BASH_UTILS_TMP="$__BASH_UTILS_ROOT/tmp"

# "config" folder's content.
__BASH_UTILS_CONF_PROJECT_STATUS="$__BASH_UTILS_CONF/ProjectStatus.conf"

# Bash-utils dev-tools paths.
# shellcheck disable=SC2034
__BASH_UTILS_DEVTOOLS_ROOT="$__BASH_UTILS_ROOT/projects/dev-tools"

# shellcheck disable=SC2034
__BASH_UTILS_DEVTOOLS_BIN="$__BASH_UTILS_DEVTOOLS_ROOT/dev-bin"

# shellcheck disable=SC2034
__BASH_UTILS_DEVTOOLS_IMG="$__BASH_UTILS_DEVTOOLS_ROOT/dev-img"

# shellcheck disable=SC2034
__BASH_UTILS_DEVTOOLS_SRC="$__BASH_UTILS_DEVTOOLS_ROOT/dev-src"

# shellcheck disable=SC2034
__BASH_UTILS_DEVTOOLS_TRANSL="$__BASH_UTILS_DEVTOOLS_ROOT/dev-translations"

# "lib" folder's content.
__BASH_UTILS_FUNCTS="$__BASH_UTILS/functions"
__BASH_UTILS_FUNCTS_BASIS="$__BASH_UTILS_FUNCTS/basis"
__BASH_UTILS_FUNCTS_MAIN="$__BASH_UTILS_FUNCTS/main"
__BASH_UTILS_LANG="$__BASH_UTILS/lang"
__BASH_UTILS_VARS="$__BASH_UTILS/variables"

__FUNCTIONS_FILES_PATH=(
	"$__BASH_UTILS_FUNCTS_BASIS/Arguments.lib"     \
	"$__BASH_UTILS_FUNCTS_BASIS/CheckSTAT.lib"     \
	"$__BASH_UTILS_FUNCTS_BASIS/Colors.lib"        \
	"$__BASH_UTILS_FUNCTS_BASIS/Echo.lib"          \
	"$__BASH_UTILS_FUNCTS_BASIS/Handles.lib"       \
	"$__BASH_UTILS_FUNCTS_BASIS/Headers.lib"       \
	"$__BASH_UTILS_FUNCTS_BASIS/Inputs.lib"        \
	"$__BASH_UTILS_FUNCTS_BASIS/Pipelining.lib"    \
	"$__BASH_UTILS_FUNCTS_MAIN/Directories.lib"    \
	"$__BASH_UTILS_FUNCTS_MAIN/Files.lib"          \
	"$__BASH_UTILS_FUNCTS_MAIN/Permissions.lib"    \
	"$__BASH_UTILS_FUNCTS_MAIN/Time.lib" )

__VARIABLES_FILES_PATH=(
	"$__BASH_UTILS_VARS/colors.var"        \
	"$__BASH_UTILS_VARS/directories.var"   \
	"$__BASH_UTILS_VARS/files.var"         \
	"$__BASH_UTILS_VARS/text.var"          \
	"$__BASH_UTILS_VARS/time.var")

# -----------------------------------------------

## PROJECT'S PATH VARIABLES

# Script file's informations
__PROJECT_FILE=$(basename "$0")                           # Project file's name.
__PROJECT_NAME=$(basename "$0" | cut -f 1 -d '.')         # Name of the project (project file's name without its file extension).

# Checking first if the effective user identifiant (EUID) is equal to super-user's EUID or not.
# The folders names have to be different according to the EUID, as files and folders created by the root user belong to this user,
# which means that a regular user won't have any write permission on these files, so nothing can be written on a log file, for example.

# To remove these folders, please run the "rm -rf $folder" command with sudo if you're not logged as super-user.
if [ "$EUID" -eq 0 ]; then
    __PROJECT_TMP_DIR="$__BASH_UTILS_TMP/$__PROJECT_NAME - ROOT"

else
    __PROJECT_TMP_DIR="$__BASH_UTILS_TMP/$__PROJECT_NAME"
fi

# Defining project's log file's path.
__PROJECT_LOG_DIR_NAME="logs"
__PROJECT_LOG_DIR_PATH="$__PROJECT_TMP_DIR/$__PROJECT_LOG_DIR_NAME"
__PROJECT_LOG_FILE_NAME="$__PROJECT_NAME.log"
__PROJECT_LOG_FILE_PATH="$__PROJECT_LOG_DIR_PATH/$__PROJECT_LOG_FILE_NAME"

# -----------------------------------------------

## INITIALIZATION PATHS VARIABLES

# Bash-utils paths list variables (to check if every directories and files were successfully sourced). 
__INIT_FILE_LIST_NAME="Sourced.list"
__INIT_LIST_FILE_PATH="$__PROJECT_TMP_DIR/$__INIT_FILE_LIST_NAME"

# -----------------------------------------------

## PROJECT'S NAMED PIPES

# Defining project's FIFOs directory.
__PROJECT_FIFO_DIR_NAME="FIFO"
__PROJECT_FIFO_DIR_PATH="$__PROJECT_TMP_DIR/$__PROJECT_FIFO_DIR_NAME"

# Defining project's FIFOs
__PROJECT_FIFO_COLORS="$__PROJECT_FIFO_DIR_PATH/Colors"

# -----------------------------------------------
