#!/usr/bin/env bash

## VARIABLE DECLARATION

# These status variables can be changed anywhere in the main script, except for the following variables :
#   - PROJECT_STATUS_DEBUG      -> This variable is used as (...).

# Project's debug variable --> This variable only accepts "true" or "false" as values.
# Default value : "false"
# shellcheck disable=SC2034
STAT_DEBUG="false"

# Project's error handling --> This variable accepts "fatal" or nothing as value.
# Default value : "" (no value)
# shellcheck disable=SC2034
STAT_ERROR=""

# Project's main log file informations --> This variable only accepts "true" or "false" as values.
# Default value : "true"
# shellcheck disable=SC2034
STAT_LOG="true"

# Project's main log file redirections status --> This variables accepts "log", "tee" or nothing as value.
# Default value : "" (no value)
# shellcheck disable=SC2034
STAT_LOG_REDIRECT=""

# Project's whole headers display time --> This variable accepts any integer of floating number.
# Default value : "1.5"
# shellcheck disable=SC2034
STAT_TIME_HEADER="1.5"

# Project's headers line display time --> This variable accepts any integer or floating number.
# Default value : "1"
# shellcheck disable=SC2034
STAT_TIME_LINE="1"

# Project's messages display time --> This variable accepts any integer of floating number.
# Default value : ".5"
# shellcheck disable=SC2034
STAT_TIME_TXT=".5"

# User's operating system (getting user's OS is important for OS-dependent processings, like package management)
# --> This variable will be completed with the "CheckSupportedOSType" function.
# Default value : "" (no value)
# shellcheck disable=SC2034
STAT_USER_OS=""


# -----------------------------------------------

## VARIABLES VALUES CHECKING

# Checking the "$STAT_DEBUG" variable's value.
function CheckSTAT_DEBUG
{
    if [ "$STAT_DEBUG" != "true" ] && [ "$STAT_DEBUG" != "false" ]; then
        echo "$TXT_RED_TAB Error : the STAT_LOG variable's value is incorrect.$COL_RESET"; echo; exit 1
    fi
}

# Checking the "$STAT_ERROR" variable's value.
function CheckSTAT_ERROR
{
    if [ -n "$STAT_ERROR" ] && [ "$STAT_ERROR" != "fatal" ]; then
        echo "$TXT_RED_TAB Error : the STAT_ERROR variable's value is incorrect.$COL_RESET"; echo; exit 1
    fi
}

# Checking the "$STAT_LOG" variable's value.
function CheckSTAT_LOG
{
    if [ "$STAT_LOG" != "true" ] && [ "$STAT_LOG" != "false" ]; then
        echo "$TXT_RED_TAB Error : the STAT_LOG_REDIRECT variable's value is incorrect.$COL_RESET"; echo; exit 1
    fi
}

# Checking the "$STAT_LOG_REDIRECT" variable's value.
function CheckSTAT_LOG_REDIRECT
{
    if [ -n "$STAT_LOG_REDIRECT" ] && [ "$STAT_LOG_REDIRECT" != "log" ] && [ "$STAT_LOG_REDIRECT" -ne 1 ] \
        && [ "$STAT_LOG_REDIRECT" != "tee" ] && [ "$STAT_LOG_REDIRECT" -ne 2 ]; then
        # On définit quand même la variable PROJECT_STATUS_LOG_REDIRECT à "tee"
        # pour afficher sans problèmes le contenu de la chaîne de caractères en rouge.
        echo "$TXT_RED_TAB Error : the STAT_DEBUG variable's value is incorrect.$COL_RESET"; echo; exit 1
    fi
}

# Checking the "$STAT_TIME_HEADER" variable's value.
function CheckSTAT_TIME_HEADER
{
    # If the status variable's value is not a float or an integer.
    if [[ ! "$STAT_TIME_HEADER" =~ ^([0-9]+\.?|[0-9]*\.[0-9]+)$ ]]; then
        echo "$TXT_RED_TAB Error : the STAT_TIME_HEADER variable's value is not a number.$COL_RESET"; echo; exit 1
    fi
}

# Checking the "$STAT_TIME_LINE" variable's value.
function CheckSTAT_TIME_LINE
{
    # If the status variable's value is not a float or an integer.
    if [[ ! "$STAT_TIME_LINE" =~ ^([0-9]+\.?|[0-9]*\.[0-9]+)$ ]]; then
        echo "$TXT_RED_TAB Error : the STAT_TIME_LINE variable's value is not a number.$COL_RESET"; echo; exit 1
    fi
}

# Checking the "$STAT_TIME_TXT" variable's value.
function CheckSTAT_TIME_TXT
{
    # If the status variable's value is not a float or an integer.
    if [[ ! "$STAT_TIME_TXT" =~ ^([0-9]+\.?|[0-9]*\.[0-9]+)$ ]]; then
        echo "$TXT_RED_TAB Error : the STAT_TIME_TXT variable's value is not a number.$COL_RESET"; echo; exit 1
    
    fi
}

# Checking the "$STAT_USER_OS" variable's value.
# This function is empty now, as the OS handling is still in work.
function CheckSTAT_USER_OS
{
    return
}


# Checking all the project's status variables values if multiple values had been modified.
function CheckProjectStatusVars
{
    # Processing first the "STAT_LOG_REDIRECT" variable, to make sure the following error messages will be correctly displayed if another error happened.
    CheckSTAT_LOG_REDIRECT
    CheckSTAT_DEBUG
    CheckSTAT_ERROR
    CheckSTAT_LOG
    CheckSTAT_TIME_HEADER
    CheckSTAT_TIME_LINE
    CheckSTAT_TIME_TXT
}

CheckProjectStatusVars
