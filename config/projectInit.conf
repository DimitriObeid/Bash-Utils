#!/usr/bin/env bash

# /////////////////////////////////////////////////////////////////////////////////////////////// #

#### PROJECT'S VARIABLES

## PROJECT'S PATH VARIABLES

# Script file's informations
__BU_PROJECT_FILE_NAME=$(basename "$0")                     # Project file's name.
__BU_PROJECT_NAME=$(basename "$0" | cut -f 1 -d '.')        # Name of the project (project file's name without its file extension).

function GetProjectFilePath()
{
    local v_project_file="$0"
    local v_cut="${v_project_file##*./}"
    local find_path="$(find "$(cd ..; pwd)" -name "$v_cut")"

    echo "$find_path"
}

__BU_PROJECT_TMP_DIR_PARENT_NAME="tmp"
__BU_PROJECT_TMP_DIR_PARENT_PATH="$__BASH_UTILS_ROOT/$__BU_PROJECT_TMP_DIR_PARENT_NAME"

if [ ! -d "$__BU_PROJECT_TMP_DIR_PARENT_PATH" ]; then
    mkdir -p "$__BU_PROJECT_TMP_DIR_PARENT_PATH" || { echo >&2; echo "UNABLE TO CREATE THE PROJECT'S TEMPORARY FOLDER'S PARENT DIRECTORY !" >&2; echo >&2; exit 1; }
fi

# Checking first if the effective user identifiant (EUID) is equal to super-user's EUID or not.
# The folders names have to be different according to the EUID, as files and folders created by the root user belong to this user,
# which means that a regular user won't have any write permission on these files, so nothing can be written on a log file, for example.

# To remove these folders, please run the "rm -rf $folder" command with sudo if you're not logged as super-user.
if [ "$EUID" -eq 0 ]; then
    __BU_PROJECT_TMP_DIR_PATH="$__BU_PROJECT_TMP_DIR_PARENT_PATH/$__BU_PROJECT_NAME - ROOT" # Default --> "$__BU_PROJECT_TMP_DIR_PARENT_PATH/$__BU_PROJECT_NAME - ROOT"
else
    __BU_PROJECT_TMP_DIR_PATH="$__BU_PROJECT_TMP_DIR_PARENT_PATH/$__BU_PROJECT_NAME"        # Default --> "$__BU_PROJECT_TMP_DIR_PARENT_PATH/$__BU_PROJECT_NAME"
fi

# 
__BU_PROJECT_FILE_PATH="$(GetProjectFilePath)"

# Defining the project's log file's path.
__BU_PROJECT_LOG_DIR_PARENT="$__BU_PROJECT_TMP_DIR_PATH"
__BU_PROJECT_LOG_DIR_NAME="logs"												    # Default --> "logs"
__BU_PROJECT_LOG_DIR_PATH="$__BU_PROJECT_LOG_DIR_PARENT/$__BU_PROJECT_LOG_DIR_NAME" # Default --> "$__BU_PROJECT_TMP_DIR_PATH/$__BU_PROJECT_LOG_DIR_NAME"

__BU_PROJECT_LOG_FILE_PARENT="$__BU_PROJECT_LOG_DIR_PATH"
__BU_PROJECT_LOG_FILE_NAME="$__BU_PROJECT_NAME.log"                                     # Default --> "$__BU_PROJECT_NAME.log"
__BU_PROJECT_LOG_FILE_PATH="$__BU_PROJECT_LOG_FILE_PARENT/$__BU_PROJECT_LOG_FILE_NAME"  # Default --> "$__BU_PROJECT_LOG_DIR_PATH/$__BU_PROJECT_LOG_FILE_NAME"

# Defining the project's "Echo<...>()" functions debug output (to have a better view during a "bash - x" debug).
__BU_PROJECT_ECHO_OUTPUT_FILE_PARENT="$__BU_PROJECT_LOG_DIR_PATH"
__BU_PROJECT_ECHO_OUTPUT_FILE_NAME="echo_output.log"
__BU_PROJECT_ECHO_OUTPUT_FILE_PATH="$__BU_PROJECT_ECHO_OUTPUT_FILE_PARENT/$__BU_PROJECT_ECHO_OUTPUT_FILE_NAME"

# Defining the project's text formatting building's output file.
__BU_PROJECT_TR_FILE_PARENT="$__BU_PROJECT_TMP_DIR_PATH"
__BU_PROJECT_TR_FILE_NAME="tr.tmp"                                                  # Default --> "tr.tmp"
__BU_PROJECT_TR_FILE_PATH="$__BU_PROJECT_TR_FILE_PARENT/$__BU_PROJECT_TR_FILE_NAME" # Default --> "$__BU_PROJECT_TMP_DIR_PATH/$__BU_PROJECT_TR_FILE_NAME"

# Defining the project's color code storage file.
__BU_PROJECT_COLOR_CODE_FILE_PARENT="$__BU_PROJECT_TMP_DIR_PATH"
__BU_PROJECT_COLOR_CODE_FILE_NAME="colors.tmp"
__BU_PROJECT_COLOR_CODE_FILE_PATH="$__BU_PROJECT_COLOR_CODE_FILE_PARENT/$__BU_PROJECT_COLOR_CODE_FILE_NAME"

# -----------------------------------------------
