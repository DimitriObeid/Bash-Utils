#!/usr/bin/env bash

# ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; #

#################################### DEFINING LIBRARY FUNCTIONS ###################################

#### ENCODING

# Color encoding
function EncodingColor
{
    #***** Parameters *****
    p_colorCode=$1; shift

    #***** Variables *****
    v_currentColor="$__COL_CODE" 

    #***** Variables *****
    # Checking if the color's FIFO path exists. If not, then the function stops and no text is colored.
    if [ ! -p "$__PROJECT_FIFO_COLORS" ]; then
        return
    else
        if [ "$p_colorCode" = "sgr0" ]; then
            WriteIntoFIFOColor
            tput sgr0;  __COL_CODE=""
            echo "$__COL_CODE"

        elif IsInt "$p_colorCode"; then
            tput setaf "$p_colorCode"; __COL_CODE="$p_colorCode"

        else
            # It's impossible to call the "HandleErrors" function here, as the current function is called by this function.
            # Instead, we just call the "echo" command.
            echo >&2; echo "In   $(basename "${BASH_SOURCE[0]}")   file, function   ${FUNCNAME[0]}, line   $LINENO   --> Error : unable to set a color !" >&2
            echo >&2; exit 1
        fi
    fi
}

# -----------------------------------------------



# /////////////////////////////////////////////////////////////////////////////////////////////// #

#### READ AND WRITE

## READING FUNCTIONS

# Reading from a named pipe.
function ReadFromFIFOColor
{
    #***** Parameters *****
    p_colorCode=$1

    #***** Code *****
    ReadFromFIFO "$__PROJECT_FIFO_COLORS" "__PROJECT_FIFO_COLORS" "$p_colorCode"
}

# -----------------------------------------------

## WRITING FUNCTIONS

# Write in a named pipe.
function WriteIntoFIFOColor
{
    WriteIntoFIFO "" "" "" ""
}
