#!/usr/bin/env bash

# -----------------------
# SCRIPT'S INFORMATIONS :

# Name          : Frameworks.lib
# Module        : Software
# Author(s)     : Dimitri OBEID
# Version       : beta


# ----------------------
# SCRIPT'S DESCRIPTION :

# Frameworks installation functions for each supported operating systems.


# ----------------------------
# SHELLCHECK GLOBAL DISABLER :

# Add a coma after each warning code to disable multiple warnings at one go.

# Do not uncomment the "shellcheck disable" line, or else the "$(shellcheck)" command will be executed during the script's execution, and will not detect any coding mistake during a debugging process.

# DO NOT ADD A COMA AFTER A SHELLCHECK CODE IF THERE'S NO OTHER SHELLCHECK CODE FOLLOWING IT, OR ELSE THE "$(shellcheck)" COMMAND WILL RETURN ERRORS DURING THE DEBUGGING PROCESS !!!

# IF YOU WANT TO ADD ANOTHER SHELLCHECK CODE, WRITE THIS CODE DIRECTLY AFTER THE COMMA, WITHOUT ADDING A BLANK SPACE AFTER IT !!!

# shellcheck disable=SC2154,SC1090


# ------------------------
# NOTES ABOUT SHELLCHECK :

# To display the content of a variable in a translated string, the use of the printf command is mandatory in order to interpret each "%s" pattern as the value of a variable.

# This means that the Shellcheck warning code SC2059 will be triggered anyway, since we have no choice but to store the entirety of every translated strings into global variables, many of which contain the above-mentioned pattern.

# If you add new messages to translate, you must call the directive "shellcheck disable=SC2059" before the line where you call the
# command "printf" to display the translated message, otherwise Shellcheck will display many warnings during the debugging procedure.

# If the message is displayed inside a function, you can write the "# shellcheck disable=SC2059" directive on the line above the declaration of the said function.

# You can also write this directive at the beginning of a Bash script, but I would not recommand you to do so, since you may use the "$(printf)" command in another context, without the same purpose.


# --------------------------------------------------------------------------------------
# DO NOT EXECUTE THIS SCRIPT DIRECTLY, instead, just source it in your main script file.

# /////////////////////////////////////////////////////////////////////////////////////////////// #

# Preventing the direct execution of this file, as it is not meant to be directly executed, but sourced.
if [ "${0##*/}" == "${BASH_SOURCE[0]##*/}" ]; then if [[ "${LANG}" == de_* ]]; then
    echo -e "ACHTUNG !" >&2; echo >&2;
    echo -e "Dieses Shell-Skript (${BASH_SOURCE[0]}) ist nicht dazu gedacht, direkt ausgeführt zu werden !" >&2; echo >&2;
    echo -e "Verwenden Sie nur dieses Skript, indem Sie es in Ihr Projekt aufnehmen." >&2;

elif [[ "${LANG}" == es_* ]]; then
    echo -e "ATENCIÓN !" >&2; echo >&2;
    echo -e "Este script de shell (${BASH_SOURCE[0]}) no debe ejecutarse directamente !" >&2; echo >&2;
    echo -e "Utilice sólo este script incluyéndolo en el script de su proyecto." >&2;

elif [[ "${LANG}" == fr_* ]]; then
    echo -e "ATTENTION !" >&2; echo >&2;
    echo -e "Ce script shell (${BASH_SOURCE[0]}) n'est pas conçu pour être directement exécuté !" >&2; echo >&2;
    echo -e "Utilisez seulement ce script en l'incluant dans votre projet." >&2;

elif [[ "${LANG}" == id_* ]]; then
    echo -e "PERINGATAN !" >&2; echo >&2;
    echo -e "Skrip shell ini (${BASH_SOURCE[0]}) tidak dimaksudkan untuk dieksekusi secara langsung !" >&2; echo >&2;
    echo -e "Gunakan skrip ini hanya dengan memasukkannya ke dalam skrip proyek Anda." >&2;

elif [[ "${LANG}" == pt_* ]]; then
    echo -e "ATENÇÃO !" >&2; echo >&2;
    echo -e "Este script de shell (${BASH_SOURCE[0]}) não é para ser executado directamente !" >&2; echo >&2;
    echo -e "Utilize este guião apenas incluindo-o no seu projecto." >&2;

elif [[ "${LANG}" == ru_* ]]; then
    echo -e "ВНИМАНИЕ !" >&2; echo >&2;
    echo -e "Этот сценарий оболочки (${BASH_SOURCE[0]}) не предназначен для непосредственного выполнения !" >&2; echo >&2;
    echo -e "Используйте только этот скрипт, включив его в свой проект." >&2;

elif [[ "${LANG}" == uk_* ]]; then
    echo -e "УВАГА !" >&2; echo >&2;
    echo -e "Цей скрипт оболонки (${BASH_SOURCE[0]}) не призначений для безпосереднього виконання !" >&2; echo >&2;
    echo -e "Використовуйте тільки цей скрипт, включивши його в скрипт вашого проекту." >&2;

else
    echo -e "WARNING !" >&2; echo >&2;
    echo -e "This shell script (${BASH_SOURCE[0]}) is not meant to be executed directly !" >&2; echo >&2;
    echo -e "Use only this script by including it in your project script." >&2;

fi; echo >&2; exit 1; fi

# ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; #

#################################### DEFINING LIBRARY FUNCTIONS ###################################

#### HTML / CSS FRAMEWORKS
#### DEBUG ID : "bu::software::frameworks::html-css-frameworks"

declare -r __BU_SOFTWARE_FRAMEWORKS_LIB__CAT_DEBUG_ID__HTML_CSS_FRAMEWORKS="bu::software::frameworks::html-css-frameworks";

## BOOTSTRAP
## DEBUG ID : "boostrap"

declare -r __BU_SOFTWARE_FRAMEWORKS_LIB__SUBCAT_DEBUG_ID__HTML_CSS_FRAMEWORKS__BOOTSTRAP="${__BU_SOFTWARE_FRAMEWORKS_LIB__CAT_DEBUG_ID__HTML_CSS_FRAMEWORKS}::bootstrap";

# ·······················································
# Installing Bootstrap on any supported operating system.

# Featured function(s) and file(s) by module(s) and from the "functions" folder :
#   -

# shellcheck disable=
function BU.Software.Frameworks.Bootstrap.Install()
{
    return 0;
}

# ·····················································
# Updating Bootstrap on any supported operating system.

# Featured function(s) and file(s) by module(s) and from the "functions" folder :
#   -

# shellcheck disable=
function BU.Software.Frameworks.Bootstrap.Update()
{
    return 0;
}

# ·························································
# Uninstalling Bootstrap on any supported operating system.

# Featured function(s) and file(s) by module(s) and from the "functions" folder :
#   -

# shellcheck disable=
function BU.Software.Frameworks.Bootstrap.Uninstall()
{
    return 0;
}

## ==============================================



# /////////////////////////////////////////////////////////////////////////////////////////////// #

#### JAVA FRAMEWORKS
#### DEBUG ID : "bu::software::frameworks::java-frameworks"

declare -r __BU_SOFTWARE_FRAMEWORKS_LIB__CAT_DEBUG_ID__JAVA_FRAMEWORKS="bu::software::frameworks::java-frameworks";

## SPRING
## DEBUG ID : "spring"

declare -r __BU_SOFTWARE_FRAMEWORKS_LIB__SUBCAT_DEBUG_ID__JAVA_FRAMEWORKS__SPRING="${__BU_SOFTWARE_FRAMEWORKS_LIB__CAT_DEBUG_ID__JAVA_FRAMEWORKS}::spring";

# ····················································
# Installing Spring on any supported operating system.

# Featured function(s) and file(s) by module(s) and from the "functions" folder :
#   -

# shellcheck disable=
function BU.Software.Frameworks.Spring.Install()
{
    return 0;
}

# ··················································
# Updating Spring on any supported operating system.

# Featured function(s) and file(s) by module(s) and from the "functions" folder :
#   -

# shellcheck disable=
function BU.Software.Frameworks.Spring.Update()
{
    return 0;
}

# ······················································
# Uninstalling Spring on any supported operating system.

# Featured function(s) and file(s) by module(s) and from the "functions" folder :
#   -

# shellcheck disable=
function BU.Software.Frameworks.Spring.Uninstall()
{
    return 0;
}

## ==============================================



# /////////////////////////////////////////////////////////////////////////////////////////////// #

#### JAVASCRIPT FRAMEWORKS
#### DEBUG ID : "bu::software::frameworks::javascript-frameworks"

declare -r __BU_SOFTWARE_FRAMEWORKS_LIB__CAT_DEBUG_ID__JAVASCRIPT_FRAMEWORKS="bu::software::frameworks::javascript-frameworks";

## ANGULAR
## DEBUG ID : "angularjs"

declare -r __BU_SOFTWARE_FRAMEWORKS_LIB__SUBCAT_DEBUG_ID__JAVASCRIPT_FRAMEWORKS__ANGULARJS="${__BU_SOFTWARE_FRAMEWORKS_LIB__CAT_DEBUG_ID__JAVASCRIPT_FRAMEWORKS}::angularjs";

# ·······················································
# Installing AngularJS on any supported operating system.

# Featured function(s) and file(s) by module(s) and from the "functions" folder :
#   -

# shellcheck disable=
function BU.Software.Frameworks.AngularJS.Install()
{
    return 0;
}

# ·····················································
# Updating AngularJS on any supported operating system.

# Featured function(s) and file(s) by module(s) and from the "functions" folder :
#   -

# shellcheck disable=
function BU.Software.Frameworks.AngularJS.Update()
{
    return 0;
}

# ·························································
# Uninstalling AngularJS on any supported operating system.

# Featured function(s) and file(s) by module(s) and from the "functions" folder :
#   -

# shellcheck disable=
function BU.Software.Frameworks.AngularJS.Uninstall()
{
    return 0;
}

## ==============================================

## REACT JS
## DEBUG ID : "reactjs"

declare -r __BU_SOFTWARE_FRAMEWORKS_LIB__SUBCAT_DEBUG_ID__JAVASCRIPT_FRAMEWORKS__REACTJS="${__BU_SOFTWARE_FRAMEWORKS_LIB__CAT_DEBUG_ID__JAVASCRIPT_FRAMEWORKS}::reactjs";

# ······················································
# Installing React JS on any supported operating system.

# Featured function(s) and file(s) by module(s) and from the "functions" folder :
#   -

# shellcheck disable=
function BU.Software.Frameworks.ReactJS.Install()
{
    return 0;
}

# ····················································
# Updating React JS on any supported operating system.

# Featured function(s) and file(s) by module(s) and from the "functions" folder :
#   -

# shellcheck disable=
function BU.Software.Frameworks.ReactJS.Update()
{
    return 0;
}

# ························································
# Uninstalling React JS on any supported operating system.

# Featured function(s) and file(s) by module(s) and from the "functions" folder :
#   -

# shellcheck disable=
function BU.Software.Frameworks.ReactJS.Uninstall()
{
    return 0;
}

## ==============================================

## VUE.JS
## DEBUG ID : "vuejs"

declare -r __BU_SOFTWARE_FRAMEWORKS_LIB__SUBCAT_DEBUG_ID__JAVASCRIPT_FRAMEWORKS__VUEJS="${__BU_SOFTWARE_FRAMEWORKS_LIB__CAT_DEBUG_ID__JAVASCRIPT_FRAMEWORKS}::vuejs";

# ····················································
# Installing Vue.JS on any supported operating system.

# Featured function(s) and file(s) by module(s) and from the "functions" folder :
#   -

# shellcheck disable=
function BU.Software.Frameworks.VueJS.Install()
{
    return 0;
}

# ··················································
# Updating Vue.JS on any supported operating system.

# Featured function(s) and file(s) by module(s) and from the "functions" folder :
#   -

# shellcheck disable=
function BU.Software.Frameworks.VueJS.Update()
{
    return 0;
}

# ······················································
# Uninstalling Vue.JS on any supported operating system.

# Featured function(s) and file(s) by module(s) and from the "functions" folder :
#   -

# shellcheck disable=
function BU.Software.Frameworks.VueJS.Uninstall()
{
    return 0;
}

## ==============================================



# /////////////////////////////////////////////////////////////////////////////////////////////// #

#### PHP FRAMEWORKS
#### DEBUG ID : "bu::software::frameworks::php-frameworks"

declare -r __BU_SOFTWARE_FRAMEWORKS_LIB__CAT_DEBUG_ID__PHP_FRAMEWORKS="bu::software::frameworks::php-frameworks";

## CAKE PHP
## DEBUG ID : "cake-php"

declare -r __BU_SOFTWARE_FRAMEWORKS_LIB__SUBCAT_DEBUG_ID__PHP_FRAMEWORKS__CAKE_PHP="${__BU_SOFTWARE_FRAMEWORKS_LIB__CAT_DEBUG_ID__PHP_FRAMEWORKS}::cake-php";

# ·····················································
# Installing CakePHP on any supported operating system.

# Featured function(s) and file(s) by module(s) and from the "functions" folder :
#   -

# shellcheck disable=
function BU.Software.Frameworks.CakePHP.Install()
{
    return 0;
}

# ···················································
# Updating CakePHP on any supported operating system.

# Featured function(s) and file(s) by module(s) and from the "functions" folder :
#   -

# shellcheck disable=
function BU.Software.Frameworks.CakePHP.Update()
{
    return 0;
}

# ·······················································
# Uninstalling CakePHP on any supported operating system.

# Featured function(s) and file(s) by module(s) and from the "functions" folder :
#   -

# shellcheck disable=
function BU.Software.Frameworks.CakePHP.Uninstall()
{
    return 0;
}

## ==============================================

## LARAVEL
## DEBUG ID : "laravel"

declare -r __BU_SOFTWARE_FRAMEWORKS_LIB__SUBCAT_DEBUG_ID__PHP_FRAMEWORKS__LARAVEL="${__BU_SOFTWARE_FRAMEWORKS_LIB__CAT_DEBUG_ID__PHP_FRAMEWORKS}::laravel";

# ·····················································
# Installing Laravel on any supported operating system.

# Featured function(s) and file(s) by module(s) and from the "functions" folder :
#   -

# shellcheck disable=
function BU.Software.Frameworks.Laravel.Install()
{
    return 0;
}

# ···················································
# Updating Laravel on any supported operating system.

# Featured function(s) and file(s) by module(s) and from the "functions" folder :
#   -

# shellcheck disable=
function BU.Software.Frameworks.Laravel.Update()
{
    return 0;
}

# ··························································
# Uninstalling of Laravel on any supported operating system.

# Featured function(s) and file(s) by module(s) and from the "functions" folder :
#   -

# shellcheck disable=
function BU.Software.Frameworks.Laravel.Uninstall()
{
    return 0;
}

## ==============================================

## SYMFONY
## DEBUG ID : "symfony"

declare -r __BU_SOFTWARE_FRAMEWORKS_LIB__SUBCAT_DEBUG_ID__PHP_FRAMEWORKS__="${__BU_SOFTWARE_FRAMEWORKS_LIB__CAT_DEBUG_ID__PHP_FRAMEWORKS}::symfony";

# ·······················································
# Installation Symfony on any supported operating system.

# Featured function(s) and file(s) by module(s) and from the "functions" folder :
#   -

# shellcheck disable=
function BU.Software.Frameworks.Symfony.Install()
{
    return 0;
}

# ···················································
# Updating Symfony on any supported operating system.

# Featured function(s) and file(s) by module(s) and from the "functions" folder :
#   -

# shellcheck disable=
function BU.Software.Frameworks.Symfony.Update()
{
    return 0;
}

# ·······················································
# Uninstalling Symfony on any supported operating system.

# Featured function(s) and file(s) by module(s) and from the "functions" folder :
#   -

# shellcheck disable=
function BU.Software.Frameworks.Symfony.Uninstall()
{
    return 0;
}

## ==============================================



# /////////////////////////////////////////////////////////////////////////////////////////////// #

#### PYTHON FRAMEWORKS
#### DEBUG ID : "bu::software::frameworks::python-frameworks"

declare -r __BU_SOFTWARE_FRAMEWORKS_LIB__CAT_DEBUG_ID__PYTHON_FRAMEWORKS="bu::software::frameworks::python-frameworks";

## DJANGO
## DEBUG ID : "django"

declare -r __BU_SOFTWARE_FRAMEWORKS_LIB__SUBCAT_DEBUG_ID__PYTHON_FRAMEWORKS__DJANGO="${__BU_SOFTWARE_FRAMEWORKS_LIB__CAT_DEBUG_ID__PYTHON_FRAMEWORKS}::django";

# ···························
# Installing Django on any supported operating system.

# Featured function(s) and file(s) by module(s) and from the "functions" folder :
#   -

# shellcheck disable=
function BU.Software.Frameworks.Django.Install()
{
    return 0;
}

# ··················································
# Updating Django on any supported operating system.

# Featured function(s) and file(s) by module(s) and from the "functions" folder :
#   -

# shellcheck disable=
function BU.Software.Frameworks.Django.Update()
{
    return 0;
}

# ······················································
# Uninstalling Django on any supported operating system.

# Featured function(s) and file(s) by module(s) and from the "functions" folder :
#   -

# shellcheck disable=
function BU.Software.Frameworks.Django.Uninstall()
{
    return 0;
}

## ==============================================

## FLASK
## DEBUG ID : "flask"

declare -r __BU_SOFTWARE_FRAMEWORKS_LIB__SUBCAT_DEBUG_ID__PYTHON_FRAMEWORKS__FLASK="${__BU_SOFTWARE_FRAMEWORKS_LIB__CAT_DEBUG_ID__PYTHON_FRAMEWORKS}::flask";

# ···················································
# Installing Flask on any supported operating system.

# Featured function(s) and file(s) by module(s) and from the "functions" folder :
#   -

# shellcheck disable=
function BU.Software.Frameworks.Flask.Install()
{
    return 0;
}

# ·················································
# Updating Flask on any supported operating system.

# Featured function(s) and file(s) by module(s) and from the "functions" folder :
#   -

# shellcheck disable=
function BU.Software.Frameworks.Flask.Update()
{
    return 0;
}

# ·····················································
# Uninstalling Flask on any supported operating system.

# Featured function(s) and file(s) by module(s) and from the "functions" folder :
#   -

# shellcheck disable=
function BU.Software.Frameworks.Flask.Uninstall()
{
    return 0;
}

## ==============================================

## WEB2PY
## DEBUG ID : "web2py"

declare -r __BU_SOFTWARE_FRAMEWORKS_LIB__SUBCAT_DEBUG_ID__PYTHON_FRAMEWORKS__WEB2PY="${__BU_SOFTWARE_FRAMEWORKS_LIB__CAT_DEBUG_ID__PYTHON_FRAMEWORKS}::web2py";

# ····················································
# Installing Web2py on any supported operating system.

# Featured function(s) and file(s) by module(s) and from the "functions" folder :
#   -

# shellcheck disable=
function BU.Software.Frameworks.Web2py.Install()
{
    return 0;
}

# ··················································
# Updating Web2py on any supported operating system.

# Featured function(s) and file(s) by module(s) and from the "functions" folder :
#   -

# shellcheck disable=
function BU.Software.Frameworks.Web2py.Update()
{
    return 0;
}

# ······················································
# Uninstalling Web2py on any supported operating system.

# Featured function(s) and file(s) by module(s) and from the "functions" folder :
#   -

# shellcheck disable=
function BU.Software.Frameworks.Web2py.Uninstall()
{
    return 0;
}

## ==============================================



# /////////////////////////////////////////////////////////////////////////////////////////////// #

#### RUBY FRAMEWORKS
#### DEBUG ID : "bu::software::frameworks::ruby-frameworks"

declare -r __BU_SOFTWARE_FRAMEWORKS_LIB__CAT_DEBUG_ID__RUBY_FRAMEWORKS="bu::software::frameworks::ruby-frameworks";

## RUBY ON RAILS
## DEBUG ID : "ruby-on-rails"

declare -r __BU_SOFTWARE_FRAMEWORKS_LIB__SUBCAT_DEBUG_ID__RUBY_FRAMEWORKS__RUBY_ON_RAILS="${__BU_SOFTWARE_FRAMEWORKS_LIB__CAT_DEBUG_ID__RUBY_FRAMEWORKS}::ruby-on-rails";

# ···························································
# Installing Ruby on Rails on any supported operating system.

# Featured function(s) and file(s) by module(s) and from the "functions" folder :
#   -

# shellcheck disable=
function BU.Software.Frameworks.RubyOnRails.Install()
{
    return 0;
}

# ·························································
# Updating Ruby on Rails on any supported operating system.

# Featured function(s) and file(s) by module(s) and from the "functions" folder :
#   -

# shellcheck disable=
function BU.Software.Frameworks.RubyOnRails.Update()
{
    return 0;
}

# ·····························································
# Uninstalling Ruby on Rails on any supported operating system.

# Featured function(s) and file(s) by module(s) and from the "functions" folder :
#   -

# shellcheck disable=
function BU.Software.Frameworks.RubyOnRails.Uninstall()
{
    return 0;
}

## ==============================================



# /////////////////////////////////////////////////////////////////////////////////////////////// #
