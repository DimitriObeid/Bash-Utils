#!/usr/bin/env bash

# ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; #

#################################### DEFINING LIBRARY FUNCTIONS ###################################

#### TEXT WRITING AND DECORATION

## COLOR A PART OF A TEXT WITH ANOTHER COLOR.
## Pun between "deco(ration)" and "echo", followed by the first letter of the message type name (header (H), moving to a new sub-step (N), error (E) or success (S)).

function Decho { string=$1; echo "$(ColorChar "setaf" "$COL_CYAN")$string$(ColorChar "setaf" "$COL_RESET")"; }    # Colouring a part of a simple message written via the "echo" command.
function DechoE { string=$1; echo "$(ColorChar "setaf" "$COL_CYAN")$string$(ColorChar "setaf" "$COL_RED")"; }     # Error message

# Header text
function DechoH
{
    #***** Parameters *****
    string=$1
    
    #***** Variables *****
    new_color="$COL_YELLOW"
    
    #***** Code *****
    if [ "$STAT_COLOR_TXT" = "$COL_CYAN" ]; then
        echo "$new_color$string$STAT_COLOR_TXT"
    else
        echo "$COL_CYAN$string$STAT_COLOR_TXT"
    fi
}

function DechoN { string=$1; echo "$(ColorChar "setaf" "$COL_CYAN")$string$(ColorCode "setaf" "$COL_YELLOW")"; }  # New sub-step message
function DechoS { string=$1; echo "$(ColorCHar "setaf" "$COL_CYAN")$string$(ColorCode "setaf" "$COL_GREEN")"; }   # Success message

# -----------------------------------------------

## DISPLAYING A MESSAGE ACCORDING TO THE CONTEXT AND THE "$MAIN_SCRIPT_LOG" VARIABLE VALUE.

# Error message

# Featured functions and files from the "functions" folder :
#   - CheckProjectLogStatus     -> Checkings.lib
function EchoError
{
    #***** Parameters *****
    string=$1

    #***** Code *****
#     set -x
    CheckProjectLogStatus "$(ColorChar "setaf" "$COL_RED")$TXT_TAB$TXT_TAB $string$COL_RESET"
#     set +x
    sleep "$STAT_TIME_TXT"
}

# Normal message (without any extra color), with redirection checking.

# Featured functions and files from the "functions" folder :
#   - CheckProjectLogStatus     -> Checkings.lib
function EchoMsg
{
    #***** Parameters *****
    string=$1

    #***** Code *****
    CheckProjectLogStatus "$string"

    sleep "$STAT_TIME_TXT"
}

# New sub-step message

# Featured functions and files from the "functions" folder :
#   - CheckProjectLogStatus     -> Checkings.lib
function EchoNewstep
{
    #***** Parameters *****
    string=$1

    #***** Code *****
    CheckProjectLogStatus "$(ColorChar "setaf" "$COL_YELLOW")$TXT_TAB$TXT_TAB $string$COL_RESET"

    sleep "$STAT_TIME_TXT"
}

# Success message

# Featured functions and files from the "functions" folder :
#   - CheckProjectLogStatus     -> Checkings.lib
function EchoSuccess
{
    #***** Parameters *****
    string=$1

    #***** Code *****
    CheckProjectLogStatus "$(ColorChar "setaf" "$COL_GREEN")$TXT_TAB$TXT_TAB $string$COL_RESET"

    sleep "$STAT_TIME_TXT"
}


# /////////////////////////////////////////////////////////////////////////////////////////////// #

#### LINE BREAKS

## LINE BREAKS ACCORDING TO THE "$MAIN_SCRIPT_LOG" VARIABLE VALUE.

# Redirecting the output of the "echo" command

# Featured functions and files from the "functions" folder :
#   - CheckProjectLogStatus     -> Checkings.lib
function Newline
{
    CheckProjectLogStatus
}
