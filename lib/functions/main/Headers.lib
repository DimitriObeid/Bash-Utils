#!/usr/bin/env bash

# Preventing the direct execution of this file, as this script is not meant to be directly executed, but sourced.
if [ "${0##*/}" == "${BASH_SOURCE[0]##*/}" ]; then
    echo "WARNING !" >&2; echo >&2
    echo "This shell script (${BASH_SOURCE[0]}) is not meant to be executed directly !" >&2
    echo "Use this script only by sourcing it in your project script." >&2; echo >&2

    exit 1
fi

# ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; #

#################################### DEFINING LIBRARY FUNCTIONS ###################################

#### FUNCTIONS WITHOUT REDIRECTIONS TOWARDS A LOG FILE

## DÉFINITION DES FONCTIONS DE CRÉATION DE HEADERS

# Fonction de création et d'affichage de lignes selon le nombre de colonnes de la zone de texte du terminal.
function DrawLine
{
	#***** Parameters *****
	local p_lineColor=$1	# Deuxième paramètre servant à définir la couleur souhaitée du caractère lors de l'appel de la fonction.
	local p_lineChar=$2	# Premier paramètre servant à définir le caractère souhaité lors de l'appel de la fonction.
	
	#***** Code *****
    # Defining the color of the wished character for the whole line before displaying the first character.
    # If the value of the "$p_lineColor" parameter (which stores the text's color encoding) is not empty,
    # then we write the color's encoding into the terminal, which displays the color, and not its encoding in text.
    
    # The color's encoding can be written via the "tput setaf $value" command. The line is empty before the first
    # ASCII characters if the first parameter "$p_lineColor" is passed as an empty string, which means that no
    # "tput setaf $value" command was executed.

    # Since we want to write the characters composing the header line after the color encoding string, we use the options
	# '-n' (no line breaks) and '-e' (interpret backslashes) of the "echo" command to avoid making a line break after the
	# end of the string, to write the next string directly after the line.
    
	# Since all the columns in the row are used, the following characters will be written in the row, as if a line break has been made.
	if test "$p_lineColor" != ""; then
		echo -ne "$p_lineColor"
	fi

    # Displaying the desired character on the whole line. To do this, using a "for" loop, we start reading it from
	# the first column (1), then we read the entire line to the end of the terminal's text box. At each call
	# of the "echo" command, a character is displayed and colored according to the encoding defined and written above.

	# The 'i' variable in the "for i in" loop has been replaced by an underscore '_' to stop Shellcheck from sending a warning
	# message due to the non-declaration of the variable 'i', although this does not change anything when the script is executed.
	for _ in $(eval echo "{1..$__TXT_COLS}"); do
		echo -n "$p_lineChar"
	done

    # Definition (here, reinitialization) of the color of the characters following the last character of the header line
	# using the same code snippet as the first condition, to write the terminal's base color encoding (it is recommended 
	# to call the "tput sgr0" command to reset the color according to the profile options of the terminal).
	# As with any color encoding, this plain text will not be displayed on the terminal.

	# En pratique, La couleur des caractères suivants est déjà encodée quand ils sont appelés via une des fonctions d'affichage.
	# Cette réinitialisation de la couleur du texte n'est qu'une mini-sécurité permettant d'éviter d'avoir la couleur de l'invite de
	# commandes encodée avec la couleur des headers si l'exécution du script est interrompue de force avec la combinaison "CTRL + C"
	# ou mise en pause avec la combinaison "CTRL + Z", par exemple.
	if test "$p_lineColor" != ""; then
        echo -ne "$__BU_COLOR_RESET"
	fi

	# Étant donné que l'on a utilisé l'option '-n' de la commande "echo", on effectue un saut de ligne pour éviter d'avoir à le répéter après chaque appel de la commande pour laisser un espace vide entre la ligne et le prochain caractère.
	echo

	return
}

# Fonction de création de base d'un header (Couleur et caractère de ligne, couleur et chaîne de caractères).
function HeaderBase
{
	#***** Parameters *****
	local p_lineColor=$1      # Deuxième paramètre servant à définir la couleur souhaitée du caractère lors de l'appel de la fonction.
	local p_lineChar=$2       # Premier paramètre servant à définir le caractère souhaité lors de l'appel de la fonction.
	local p_stringColor=$3	  # Définition de la couleur de la chaîne de caractères du header.
	local p_stringTxt=$4      # Chaîne de caractères affichée dans chaque header.

	#***** Variables *****	
# 	HEADERBASE_COLOR_LINE="$p_lineColor"
# 	HEADERBASE_COLOR_TEXT="$p_stringColor"

	#***** Code *****    
	Newline

	EchoMsg "$(DrawLine "$p_lineColor" "$p_lineChar")" "" "nodate"
	EchoMsg "$p_stringColor##> $p_stringTxt${__BU_COLOR_RESET}"
	EchoMsg "$(DrawLine "$p_lineColor" "$p_lineChar")" "" "nodate"
	Newline

	return
}

# Header display function when changing step.
function HeaderStep     { HeaderBase "$__BU_COLOR_CYAN"     "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_CYAN"   "$1"; }

# Header display function when switching to a new package category during package installation.
function HeaderInstall  { HeaderBase "$__BU_COLOR_YELLOW"   "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_GREEN"  "$1"; }

# -----------------------------------------------

## UNICOLOR HEADERS

# Copy-paste this function to avoid losing time while creating unicolor headers :
# function Header<col> { HeaderBase "$__BU_COLOR_<COLOR>" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_<COLOR>" "$1"; }

function HeaderBlack        { HeaderBase "$__BU_COLOR_BLACK"        "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_BLACK"      "$1"; }
function HeaderBlue         { HeaderBase "$__BU_COLOR_BLUE"         "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_BLUE"       "$1"; }
function HeaderCyan         { HeaderBase "$__BU_COLOR_CYAN"         "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_CYAN"       "$1"; }
function HeaderGray         { HeaderBase "$__BU_COLOR_GRAY"         "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_GRAY"       "$1"; }
function HeaderGreen        { HeaderBase "$__BU_COLOR_GREEN"        "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_GREEN"      "$1"; }
function HeaderOrange       { HeaderBase "$__BU_COLOR_ORANGE"       "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_ORANGE"     "$1"; }
function HeaderPink         { HeaderBase "$__BU_COLOR_PINK"         "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_PINK"       "$1"; }
function HeaderPurple       { HeaderBase "$__BU_COLOR_PURPLE"       "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_PURPLE"     "$1"; }
function HeaderRed          { HeaderBase "$__BU_COLOR_RED"          "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_RED"        "$1"; }
function HeaderTurquoise    { HeaderBase "$__BU_COLOR_TURQUOISE"    "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_TURQUOISE"  "$1"; }
function HeaderWhite        { HeaderBase "$__BU_COLOR_WHITE"        "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_WHITE"      "$1"; }
function HeaderYellow       { HeaderBase "$__BU_COLOR_YELLOW"       "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_YELLOW"     "$1"; }

# -----------------------------------------------

## BICOLOR HEADERS

# Copy-paste this function to avoid losing time while creating multicolor headers :
# function Header<col1><col2> { HeaderBase "$__BU_COLOR_<COLOR>" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_<COLOR>" "$1"; }

# Black line, differently colored text.
function HeaderBlue             { HeaderBase "$__BU_COLOR_BLACK" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_BLUE"      "$1"; }
function HeaderBlackCyan        { HeaderBase "$__BU_COLOR_BLACK" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_CYAN"      "$1"; }
function HeaderBlackGray        { HeaderBase "$__BU_COLOR_BLACK" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_GRAY"      "$1"; }
function HeaderBlackGreen       { HeaderBase "$__BU_COLOR_BLACK" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_GREEN"     "$1"; }
function HeaderBlackOrange      { HeaderBase "$__BU_COLOR_BLACK" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_ORANGE"    "$1"; }
function HeaderBlackPink        { HeaderBase "$__BU_COLOR_BLACK" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_PINK"      "$1"; }
function HeaderBlackPurple      { HeaderBase "$__BU_COLOR_BLACK" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_PURPLE"    "$1"; }
function HeaderBlackRed         { HeaderBase "$__BU_COLOR_BLACK" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_RED"       "$1"; }
function HeaderBlackTurquoise   { HeaderBase "$__BU_COLOR_BLACK" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_TURQUOISE" "$1"; }
function HeaderBlackWhite       { HeaderBase "$__BU_COLOR_BLACK" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_WHITE"     "$1"; }
function HeaderBlackYellow      { HeaderBase "$__BU_COLOR_BLACK" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_YELLOW"    "$1"; }

# Blue lines, differently colored text.
function HeaderBlueBlack        { HeaderBase "$__BU_COLOR_BLUE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_BLACK"      "$1"; }
function HeaderBlueCyan         { HeaderBase "$__BU_COLOR_BLUE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_CYAN"       "$1"; }
function HeaderBlueGray         { HeaderBase "$__BU_COLOR_BLUE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_GRAY"       "$1"; }
function HeaderBlueGreen        { HeaderBase "$__BU_COLOR_BLUE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_GREEN"      "$1"; }
function HeaderBlueOrange       { HeaderBase "$__BU_COLOR_BLUE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_ORANGE"     "$1"; }
function HeaderBluePink         { HeaderBase "$__BU_COLOR_BLUE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_PINK"       "$1"; }
function HeaderBluePurple       { HeaderBase "$__BU_COLOR_BLUE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_PURPLE"     "$1"; }
function HeaderBlueRed          { HeaderBase "$__BU_COLOR_BLUE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_RED"        "$1"; }
function HeaderBlueTurquoise    { HeaderBase "$__BU_COLOR_BLUE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_TURQUOISE"  "$1"; }
function HeaderBlueWhite        { HeaderBase "$__BU_COLOR_BLUE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_WHITE"      "$1"; }
function HeaderBlueYellow       { HeaderBase "$__BU_COLOR_BLUE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_YELLOW"     "$1"; }

# Cyan lines, differently colored text.
function HeaderCyanBlack        { HeaderBase "$__BU_COLOR_CYAN" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_BLACK"      "$1"; }
function HeaderCyanBlue         { HeaderBase "$__BU_COLOR_CYAN" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_BLUE"       "$1"; }
function HeaderCyanGray         { HeaderBase "$__BU_COLOR_CYAN" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_GRAY"       "$1"; }
function HeaderCyanGreen        { HeaderBase "$__BU_COLOR_CYAN" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_GREEN"      "$1"; }
function HeaderCyanOrange       { HeaderBase "$__BU_COLOR_CYAN" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_ORANGE"     "$1"; }
function HeaderCyanPink         { HeaderBase "$__BU_COLOR_CYAN" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_PINK"       "$1"; }
function HeaderCyanPurple       { HeaderBase "$__BU_COLOR_CYAN" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_PURPLE"     "$1"; }
function HeaderCyanRed          { HeaderBase "$__BU_COLOR_CYAN" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_RED"        "$1"; }
function HeaderCyanTurquoise    { HeaderBase "$__BU_COLOR_CYAN" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_TURQUOISE"  "$1"; }
function HeaderCyanWhite        { HeaderBase "$__BU_COLOR_CYAN" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_WHITE"      "$1"; }
function HeaderCyanYellow       { HeaderBase "$__BU_COLOR_CYAN" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_YELLOW"     "$1"; }

# Gray lines, differently colored text.
function HeaderGrayBlack        { HeaderBase "$__BU_COLOR_GRAY" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_BLACK"      "$1"; }
function HeaderGrayBlue         { HeaderBase "$__BU_COLOR_GRAY" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_BLUE"       "$1"; }
function HeaderGrayCyan         { HeaderBase "$__BU_COLOR_GRAY" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_CYAN"       "$1"; }
function HeaderGrayGreen        { HeaderBase "$__BU_COLOR_GRAY" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_GREEN"      "$1"; }
function HeaderGrayOrange       { HeaderBase "$__BU_COLOR_GRAY" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_ORANGE"     "$1"; }
function HeaderGrayPink         { HeaderBase "$__BU_COLOR_GRAY" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_PINK"       "$1"; }
function HeaderGrayPurple       { HeaderBase "$__BU_COLOR_GRAY" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_PURPLE"     "$1"; }
function HeaderGrayRed          { HeaderBase "$__BU_COLOR_GRAY" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_RED"        "$1"; }
function HeaderGrayTurquoise    { HeaderBase "$__BU_COLOR_GRAY" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_TURQUOISE"  "$1"; }
function HeaderGrayWhite        { HeaderBase "$__BU_COLOR_GRAY" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_WHITE"      "$1"; }
function HeaderGrayYellow       { HeaderBase "$__BU_COLOR_GRAY" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_YELLOW"     "$1"; }

# Green lines, differently colored text.
function HeaderGreenBlack       { HeaderBase "$__BU_COLOR_GREEN" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_BLACK"     "$1"; }
function HeaderGreenBlue        { HeaderBase "$__BU_COLOR_GREEN" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_BLUE"      "$1"; }
function HeaderGreenCyan        { HeaderBase "$__BU_COLOR_GREEN" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_CYAN" 	    "$1"; }
function HeaderGreenGray        { HeaderBase "$__BU_COLOR_GREEN" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_GRAY" 	    "$1"; }
function HeaderGreenOrange      { HeaderBase "$__BU_COLOR_GREEN" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_ORANGE"	"$1"; }
function HeaderGreenPink        { HeaderBase "$__BU_COLOR_GREEN" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_PINK"      "$1"; }
function HeaderGreenPurple      { HeaderBase "$__BU_COLOR_GREEN" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_PURPLE"	"$1"; }
function HeaderGreenRed         { HeaderBase "$__BU_COLOR_GREEN" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_RED"       "$1"; }
function HeaderGreenTurquoise   { HeaderBase "$__BU_COLOR_GREEN" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_TURQUOISE" "$1"; }
function HeaderGreenWhite       { HeaderBase "$__BU_COLOR_GREEN" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_WHITE"     "$1"; }
function HeaderGreenYellow      { HeaderBase "$__BU_COLOR_GREEN" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_YELLOW" 	"$1"; }

# Orange lines, differently colored text.
function HeaderOrangeBlack      { HeaderBase "$__BU_COLOR_ORANGE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_BLACK"        "$1"; }
function HeaderOrangeBlue       { HeaderBase "$__BU_COLOR_ORANGE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_BLUE"         "$1"; }
function HeaderOrangeCyan       { HeaderBase "$__BU_COLOR_ORANGE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_CYAN"         "$1"; }
function HeaderOrangeGray       { HeaderBase "$__BU_COLOR_ORANGE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_GRAY"         "$1"; }
function HeaderOrangeGreen      { HeaderBase "$__BU_COLOR_ORANGE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_GREEN"        "$1"; }
function HeaderOrangePink       { HeaderBase "$__BU_COLOR_ORANGE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_PINK"         "$1"; }
function HeaderOrangePurple     { HeaderBase "$__BU_COLOR_ORANGE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_PURPLE"       "$1"; }
function HeaderOrangeRed        { HeaderBase "$__BU_COLOR_ORANGE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_RED"          "$1"; }
function HeaderOrangeTurquoise  { HeaderBase "$__BU_COLOR_ORANGE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_TURQUOISE"    "$1"; }
function HeaderOrangeWhite      { HeaderBase "$__BU_COLOR_ORANGE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_WHITE"        "$1"; }
function HeaderOrangeYellow     { HeaderBase "$__BU_COLOR_ORANGE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_YELLOW"       "$1"; }

# Pink lines, differently colored text.
function HeaderPinkBlack        { HeaderBase "$__BU_COLOR_PINK" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_BLACK"      "$1"; }
function HeaderPinkBlue         { HeaderBase "$__BU_COLOR_PINK" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_BLUE"       "$1"; }
function HeaderPinkCyan         { HeaderBase "$__BU_COLOR_PINK" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_CYAN"       "$1"; }
function HeaderPinkGray         { HeaderBase "$__BU_COLOR_PINK" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_GRAY"       "$1"; }
function HeaderPinkGreen        { HeaderBase "$__BU_COLOR_PINK" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_GREEN"      "$1"; }
function HeaderPinkOrange       { HeaderBase "$__BU_COLOR_PINK" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_ORANGE"     "$1"; }
function HeaderPinkPurple       { HeaderBase "$__BU_COLOR_PINK" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_PURPLE"     "$1"; }
function HeaderPinkRed          { HeaderBase "$__BU_COLOR_PINK" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_RED"        "$1"; }
function HeaderPinkTurquoise    { HeaderBase "$__BU_COLOR_PINK" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_TURQUOISE"  "$1"; }
function HeaderPinkWhite        { HeaderBase "$__BU_COLOR_PINK" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_WHITE"      "$1"; }
function HeaderPinkYellow       { HeaderBase "$__BU_COLOR_PINK" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_YELLOW"     "$1"; }

# Purple lines, differently colored text.
function HeaderPurpleBlack      { HeaderBase "$__BU_COLOR_PURPLE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_BLACK"        "$1"; }
function HeaderPurpleBlue       { HeaderBase "$__BU_COLOR_PURPLE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_BLUE"         "$1"; }
function HeaderPurpleCyan       { HeaderBase "$__BU_COLOR_PURPLE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_CYAN"         "$1"; }
function HeaderPurpleGray       { HeaderBase "$__BU_COLOR_PURPLE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_GRAY"         "$1"; }
function HeaderPurpleGreen      { HeaderBase "$__BU_COLOR_PURPLE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_GREEN"        "$1"; }
function HeaderPurpleOrange     { HeaderBase "$__BU_COLOR_PURPLE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_ORANGE"       "$1"; }
function HeaderPurplePink       { HeaderBase "$__BU_COLOR_PURPLE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_PINK"         "$1"; }
function HeaderPurpleRed        { HeaderBase "$__BU_COLOR_PURPLE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_RED"          "$1"; }
function HeaderPurpleTurquoise  { HeaderBase "$__BU_COLOR_PURPLE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_TURQUOISE"    "$1"; }
function HeaderPurpleWhite      { HeaderBase "$__BU_COLOR_PURPLE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_WHITE"        "$1"; }
function HeaderPurpleYellow     { HeaderBase "$__BU_COLOR_PURPLE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_YELLOW"       "$1"; }

# Red lines, differently colored text.
function HeaderRedBlack     { HeaderBase "$__BU_COLOR_RED" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_BLACK"       "$1"; }
function HeaderRedBlue      { HeaderBase "$__BU_COLOR_RED" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_BLUE"        "$1"; }
function HeaderRedCyan      { HeaderBase "$__BU_COLOR_RED" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_CYAN"        "$1"; }
function HeaderRedGray      { HeaderBase "$__BU_COLOR_RED" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_GRAY"        "$1"; }
function HeaderRedGreen     { HeaderBase "$__BU_COLOR_RED" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_GREEN"       "$1"; }
function HeaderRedOrange    { HeaderBase "$__BU_COLOR_RED" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_ORANGE"      "$1"; }
function HeaderRedPink      { HeaderBase "$__BU_COLOR_RED" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_PINK"        "$1"; }
function HeaderRedPurple    { HeaderBase "$__BU_COLOR_RED" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_PURPLE"      "$1"; }
function HeaderRedTurquoise { HeaderBase "$__BU_COLOR_RED" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_TURQUOISE"   "$1"; }
function HeaderRedWhite     { HeaderBase "$__BU_COLOR_RED" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_WHITE"       "$1"; }
function HeaderRedYellow    { HeaderBase "$__BU_COLOR_RED" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_YELLOW"      "$1"; }

# Turquoise lines, differently colored text.
function HeaderTurquoiseBlack   { HeaderBase "$__BU_COLOR_TURQUOISE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_BLACK"     "$1"; }
function HeaderTurquoiseBlue    { HeaderBase "$__BU_COLOR_TURQUOISE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_BLUE"      "$1"; }
function HeaderTurquoiseCyan    { HeaderBase "$__BU_COLOR_TURQUOISE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_CYAN"      "$1"; }
function HeaderTurquoiseGray    { HeaderBase "$__BU_COLOR_TURQUOISE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_GRAY"      "$1"; }
function HeaderTurquoiseGreen   { HeaderBase "$__BU_COLOR_TURQUOISE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_GREEN"     "$1"; }
function HeaderTurquoiseOrange  { HeaderBase "$__BU_COLOR_TURQUOISE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_ORANGE"    "$1"; }
function HeaderTurquoisePink    { HeaderBase "$__BU_COLOR_TURQUOISE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_PINK"      "$1"; }
function HeaderTurquoisePurple  { HeaderBase "$__BU_COLOR_TURQUOISE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_PURPLE"    "$1"; }
function HeaderTurquoiseRed     { HeaderBase "$__BU_COLOR_TURQUOISE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_TURQUOISE" "$1"; }
function HeaderTurquoiseWhite   { HeaderBase "$__BU_COLOR_BLACK" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_WHITE" "$1"; }
function HeaderTurquoiseYellow  { HeaderBase "$__BU_COLOR_TURQUOISE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_YELLOW"    "$1"; }

# White lines, differently colored text.
function HeaderWhiteBlack       { HeaderBase "$__BU_COLOR_WHITE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_BLACK"     "$1"; }
function HeaderWhiteBlue        { HeaderBase "$__BU_COLOR_WHITE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_BLUE"      "$1"; }
function HeaderWhiteCyan        { HeaderBase "$__BU_COLOR_WHITE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_CYAN"      "$1"; }
function HeaderWhiteGray        { HeaderBase "$__BU_COLOR_WHITE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_GRAY"      "$1"; }
function HeaderWhiteGreen       { HeaderBase "$__BU_COLOR_WHITE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_GREEN"     "$1"; }
function HeaderWhiteOrange      { HeaderBase "$__BU_COLOR_WHITE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_ORANGE"    "$1"; }
function HeaderWhitePink        { HeaderBase "$__BU_COLOR_WHITE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_PINK"      "$1"; }
function HeaderWhitePurple      { HeaderBase "$__BU_COLOR_WHITE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_PURPLE"    "$1"; }
function HeaderWhiteRed         { HeaderBase "$__BU_COLOR_WHITE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_RED"       "$1"; }
function HeaderWhiteTurquoise   { HeaderBase "$__BU_COLOR_WHITE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_TURQUOISE" "$1"; }
function HeaderWhiteYellow      { HeaderBase "$__BU_COLOR_WHITE" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_YELLOW"    "$1"; }

# Yellow lines, differently colored text.
function HeaderYellowBlack      { HeaderBase "$__BU_COLOR_YELLOW" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_BLACK"        "$1"; }
function HeaderYellowBlue       { HeaderBase "$__BU_COLOR_YELLOW" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_BLUE"         "$1"; }
function HeaderYellowCyan       { HeaderBase "$__BU_COLOR_YELLOW" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_CYAN"         "$1"; }
function HeaderYellowGray       { HeaderBase "$__BU_COLOR_YELLOW" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_GRAY"         "$1"; }
function HeaderYellowGreen      { HeaderBase "$__BU_COLOR_YELLOW" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_GREEN"        "$1"; }
function HeaderYellowOrange     { HeaderBase "$__BU_COLOR_YELLOW" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_ORANGE"       "$1"; }
function HeaderYellowPink       { HeaderBase "$__BU_COLOR_YELLOW" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_PINK"         "$1"; }
function HeaderYellowPurple     { HeaderBase "$__BU_COLOR_YELLOW" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_PURPLE"       "$1"; }
function HeaderYellowRed        { HeaderBase "$__BU_COLOR_YELLOW" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_RED"          "$1"; }
function HeaderYellowWhite      { HeaderBase "$__BU_COLOR_YELLOW" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_WHITE"        "$1"; }
function HeaderYellowTurquoise  { HeaderBase "$__BU_COLOR_YELLOW" "$__BU_TXT_PRINT_HEADER_LINE_CHAR" "$__BU_COLOR_TURQUOISE"    "$1"; }
