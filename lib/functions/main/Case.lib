#!/usr/bin/env bash

# ---------------------
# SCRIPT'S INFORMATIONS

# Name          : Case.lib
# Module        : Main
# Description   :
# Author(s)     : Dimitri Obeid
# Version       :

# ----------------------------
# SHELLCHECK GLOBAL DISABLER :

# Add a coma after each warning code to disable multiple warnings at one go.

# Do not uncomment the "shellcheck disable" line, or else the shellcheck command will be executed during the script's execution, and will not detect any coding mistake during a debugging process.

# DO NOT PUT A COMA AFTER A SHELLCHECK CODE IF THERE'S NO OTHER SHELLCHECK CODE FOLLOWING IT, OR ELSE SHELLCHECK WILL RETURN ERRORS DURING THE DEBUGGING PROCESS !!!

# IF YOU WANT TO ADD ANOTHER SHELLCHECK CODE, WRITE THIS CODE DIRECTLY AFTER THE COMMA, WITHOUT ADDING A BLANK SPACE AFTER IT !!!

# shellcheck disable=SC2154

# --------------------------------------------------------------------------------------------------------------------------------------------
# DO NOT EXECUTE THIS SCRIPT DIRECTLY, instead, just source it by calling the "$__BU_MAIN_FUNCTIONS_FILES_PATH" array in the initializer file.

# /////////////////////////////////////////////////////////////////////////////////////////////// #

# Preventing the direct execution of this file, as this script is not meant to be directly executed, but sourced.
if [ "${0##*/}" == "${BASH_SOURCE[0]##*/}" ]; then
    echo -e "WARNING !" >&2; echo >&2;
    echo -e "This shell script (${BASH_SOURCE[0]}) is not meant to be executed directly !" >&2;
    echo -e "Use this script only by sourcing it in your project script." >&2; echo >&2;

    exit 1;
fi

# ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; #

#################################### DEFINING LIBRARY FUNCTIONS ###################################

#### LIBRARY RESOURCES

## VARIABLES

__BU_MAIN_CASE_INVALID_ANSWER="Please enter a valid answer ($(BU::DechoHighlight 'yes') or ($(BU::DechoHighlight 'no')) !";

__BU_MAIN_CASE_ASK_CONTINUE_EXEC="Do you want to continue the script's execution ? (yes / no)";

__BU_MAIN_CASE_ANSWER_PROMPT="Enter your answer : ";

__BU_MAIN_CASE_RESUME_EXEC="Resuming the execution of the $(BU::DechoHighlight "$__BU_MAIN_PROJECT_NAME") script.";

__BU_MAIN_CASE_CANCEL_EXEC="Aborting the $(BU::DechoHighlight "$__BU_MAIN_PROJECT_NAME")'s execution.";

# -----------------------------------------------



# /////////////////////////////////////////////////////////////////////////////////////////////// #

#### READING CASE STATEMENTS BY FUNCTIONS

## "Checkings.lib" FILE

# "BU::Main::Directories::TriggerRootDirWarning" function.
function BU::Main::Case::Read_Directories::TriggerRootDirWarning()
{
    BU::EchoNewstep "$__BU_MAIN_CASE_ASK_CONTINUE_EXEC";

	read -rp "$__BU_MAIN_CASE_ANSWER_PROMPT" __read_TriggerRootDirWarning;
	BU::EchoRead "$__read_TriggerRootDirWarning";
	BU::Newline;

	# shellcheck disable=SC2154
	case "${__read_TriggerRootDirWarning,,}" in
		"yes")
            BU::EchoNewstep "$__BU_MAIN_CASE_RESUME_EXEC";

			BU::SetLastReturnValue 0;

			return 0;
			;;
		"no")
            BU::EchoError "$__BU_MAIN_CASE_CANCEL_EXEC";

			BU::SetLastReturnValue "$__BU_MAIN_EXIT_PERMISSION_DENIED";

			return "$__BU_MAIN_EXIT_PERMISSION_DENIED";
			;;
		*)
			BU::EchoError "$__BU_MAIN_CASE_INVALID_ANSWER";
			BU::Main::Case::Read_Directories::TriggerRootDirWarning;
			;;
	esac
}

# "BU::Main::Errors::HandleErrors" function, with the "$__BU_MAIN_STAT_ECHO" variable set to "false".
function BU::Main::Case::Read_Errors::HandleErrors()
{
	BU::EchoNewstep "$__BU_MAIN_CASE_ASK_CONTINUE_EXEC";

	read -rp "$__BU_MAIN_CASE_ANSWER_PROMPT" __read_HandleErrors;
	BU::EchoRead "$__read_HandleErrors";
    BU::Newline;

	# shellcheck disable=SC2154
	case "${__read_BU::Main::Errors::HandleErrors,,}" in
		"yes")
			BU::EchoNewstep "$__BU_MAIN_CASE_RESUME_EXEC";
			
			BU::SetLastReturnValue 0;

			return 0;
			;;
		"no")
			BU::EchoError "$__BU_MAIN_CASE_CANCEL_EXEC";

			BU::SetLastReturnValue "$__BU_MAIN_EXIT_PERMISSION_DENIED";

			BU::Exit "$__BU_MAIN_EXIT_PERMISSION_DENIED";
			;;
		*)
			BU::EchoError "$__BU_MAIN_CASE_INVALID_ANSWER";
			BU::Main::Case::Read_Errors::HandleErrors;
			;;
	esac
}
