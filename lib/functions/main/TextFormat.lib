#!/usr/bin/env bash

# Preventing the direct execution of this file, as this script is not meant to be directly executed, but sourced.
if [ "${0##*/}" == "${BASH_SOURCE[0]##*/}" ]; then
    echo -e "WARNING !"; echo
    echo -e "This shell script (${BASH_SOURCE[0]}) is not meant to be executed directly !"
    echo -e "Use this script only by sourcing it in your project script."; echo

    exit 1
fi

# ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; #

#################################### DEFINING LIBRARY FUNCTIONS ###################################

#### TEXT WRITING AND DECORATION (FORMATTING)

## WRITING DIFFERENTLY COLORED/FORMATTED TEXT BETWEEN TEXT

# Quick multi commands execution for the below "Decho()" function.
function __Decho { local v_oldColor=$1; tput setaf "$v_oldColor" && IsInt "$v_oldColor" && echo -e "$v_oldColor" > "$__BASH_UTILS_FILE_COLOR_CODE_PATH"; }

# Text's inside decoration/formatting procssing.

# Featured functions and files from the "functions" folder :
#   - CheckDecho                        --> This file.
#       - 
function Decho()
{
    #***** Parameters *****
    local p_string=$1
    local p_newColor=$2
    local p_formatting=$3

    #***** Variables *****
    local v_oldColor

    #***** Code *****
    CheckDecho

    if [ "$?" -ne 0 ]; then
        echo -e " ' $p_string ' "
    else
        local v_oldColor
            v_oldColor="$__BU_PROJECT_COLOR_CODE"
    fi

    if [ -n "$p_newColor" ] && [ "$p_newColor" = "$v_oldColor" ]; then

        # TODO : Développer un meilleur système de changement de couleur (P-Ê en appelant une fonction à créer, ou en utilisant une formule mathématique). Se renseigner sur la commande "tput setaf".
		p_newColor="$(( p_newColor+38 ))"
		tput setaf "$p_newColor"
	fi

	case "${p_formatting^^}" in
        'Blink')
            # Formatting : blink.
            echo -e "${__BU_TXT_FMT_BLINK}${__BU_TXT_FMT_BLINK_RESET}"
            ;;
        'BlinkBold')
            # Formatting : blink + bold.
            echo -e "${__BU_TXT_FMT_BLINK}${__BU_TXT_FMT_BOLD}${__BU_TXT_FMT_BLINK_RESET}"
            ;;
        'BlinkBoldD')
            # Formatting : blink + bold + dim.
            echo -e "${__BU_TXT_FMT_BLINK}${}"
            ;;
        'BlinkBoldDI')
            # Formatting : blink + bold + dim + italic.
            echo -e "${__BU_TXT_FMT_BLINK}"
            ;;
        'BlinkBoldDIU')
            # Formatting : blink + bold + dim + italic + underline.
            echo -e "${__BU_TXT_FMT_BLINK}"
            ;;
        'BlinkBoldDU')
            # Formatting : blink + bold + dim + underline.
            echo -e "${__BU_TXT_FMT_BLINK}"
            ;;
        'BlinkBoldI')
            # Formatting : blink + bold + italic.
            echo -e "${__BU_TXT_FMT_BLINK}"
            ;;
        'BlinkBoldIU')
            # Formatting : blink + bold + italic + underline.
            echo -e "${__BU_TXT_FMT_BLINK}"
            ;;
        'BlinkBoldU')
            # Formatting : blink + bold + underline.
            echo -e "${__BU_TXT_FMT_BLINK}"
            ;;
        'BlinkIU')
            # Formatting : blink + italic + underline.
            echo -e "${__BU_TXT_FMT_BLINK}"
            ;;
        'BlinkU')
            # Formatting : blink + underline.
            echo -e "${__BU_TXT_FMT_BLINK}"
            ;;
        'Bold')
            # Formatting : bold.
            echo -e "${__BU_TXT_FMT_BOLD}$p_string${__BU_TXT_FMT_RESET}"
            ;;
        'BoldC')
            # Formatting : bold + color.
            echo -e "${__BU_TXT_FMT_BOLD}$(tput setaf "$p_newColor")$p_string${__BU_TXT_FMT_RESET}" && __Decho -e "$v_oldColor"
            ;;
        'BoldCI')
            # Formatting : bold + color + italic.
            echo -e "${__BU_TXT_FMT_BOLD}$(tput setaf "$p_newColor")${__BU_TXT_FMT_ITALIC}$p_string${__BU_TXT_FMT_RESET}" && __Decho -e "$v_oldColor"
            ;;
        'BoldCIU')
            # Formatting : bold + color + italic + underline
            echo -e "${__BU_TXT_FMT_BOLD}$(tput setaf "$p_newColor")${__BU_TXT_FMT_ITALIC}${__BU_TXT_UNDERLINE}$p_string${__BU_TXT_FMT_RESET}" && __Decho -e "$v_oldColor"
            ;;
        'C')
            # Formatting : color.
            echo -e "$(tput setaf "$p_newColor")$p_string${__BU_TXT_FMT_RESET}" && __Decho -e "$v_oldColor"
            ;;

        'CI')
            # Formatting : color + italic.
            echo -e "$(tput setaf "$p_newColor")${__BU_TXT_FMT_ITALIC}$p_string${__BU_TXT_FMT_RESET}" && __Decho -e "$v_oldColor"
            ;;
        'CIU')
            # Formatting : color + italic + underline.
            echo -e "$(tput setaf "$p_newColor")${__BU_TXT_FMT_ITALIC}${__BU_TXT_UNDERLINE}$p_string${__BU_TXT_FMT_RESET}" && __Decho -e "$v_oldColor"
            ;;
        'CU')
            # Formatting : color + underline.
            echo -e "$(tput setaf "$p_newColor")${__BU_TXT_UNDERLINE}$p_string${__BU_TXT_FMT_RESET}" && __Decho -e "$v_oldColor"
            ;;
        'I')
            # Formatting : italic.
            echo -e "${__BU_TXT_FMT_ITALIC}$p_string${__BU_TXT_FMT_RESET}"
            ;;
        'IU')
            # Formatting : italic + underline.
            echo -e "${__BU_TXT_FMT_ITALIC}${__BU_TXT_UNDERLINE}$p_string${__BU_TXT_FMT_RESET}"
            ;;
        'U')
            # Formatting : underline.
            echo -e "${__BU_TXT_UNDERLINE}$p_string${__BU_TXT_FMT_RESET}"
            ;;
        *)
            HandleErrors "1" "THE $(DechoHighlight "case condition") TEXT FORMATTING VALUE IS INCORRECT" \
                "Please specify a valid text formatting. The list and the descriptions are available into the aforementionned condition." \
                "$p_formatting" "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-1 ))"
            ;;
    esac
}

# Bold formatting.
function Decho_FMT_Bold     { Decho -e "$1" "" 'Bold';    }
function Decho_FMT_BoldI    { Decho -e "$1" "" 'BoldI';   }
function Decho_FMT_BoldIU   { Decho -e "$1" "" 'BoldIU';  }
function Decho_FMT_BoldU    { Decho -e "$1" "" 'BoldU';   }

# Italic formatting.
function Decho_FMT_I     { Decho -e "$1" "" 'I';    }
function Decho_FMT_IU    { Decho -e "$1" "" 'IU';   }

# Underline formatting.
function Decho_FMT_U     { Decho -e "$1" "" 'U';    }

# Easy "Decho()" function calls.
function DechoHighlight { Decho -e "$1" "$__BU_COLOR_HIGHLIGHT"    'C'; }
function DechoBlack     { Decho -e "$1" "$__BU_COLOR_BLACK"        'C'; }
function DechoBlue      { Decho -e "$1" "$__BU_COLOR_BLUE"         'C'; }
function DechoCyan      { Decho -e "$1" "$__BU_COLOR_CYAN"         'C'; }
function DechoGray      { Decho -e "$1" "$__BU_COLOR_GRAY"         'C'; }
function DechoGreen     { Decho -e "$1" "$__BU_COLOR_GREEN"        'C'; }
function DechoOrange    { Decho -e "$1" "$__BU_COLOR_ORANGE"       'C'; }
function DechoPink      { Decho -e "$1" "$__BU_COLOR_PINK"         'C'; }
function DechoPurple    { Decho -e "$1" "$__BU_COLOR_PURPLE"       'C'; }
function DechoRed       { Decho -e "$1" "$__BU_COLOR_RED"          'C'; }
function DechoTurquoise { Decho -e "$1" "$__BU_COLOR_TURQUOISE"    'C'; }
function DechoWhite     { Decho -e "$1" "$__BU_COLOR_WHITE"        'C'; }
function DechoYellow    { Decho -e "$1" "$__BU_COLOR_YELLOW"       'C'; }

# Easy "Decho_FMT_Bold()" function calls with colors.
function Decho_FMT_BoldC_Highlight { Decho -e "$1" "$__BU_COLOR_HIGHLIGHT"    'BoldC'; }
function Decho_FMT_BoldC_Black     { Decho -e "$1" "$__BU_COLOR_BLACK"        'BoldC'; }
function Decho_FMT_BoldC_Blue      { Decho -e "$1" "$__BU_COLOR_BLUE"         'BoldC'; }
function Decho_FMT_BoldC_Cyan      { Decho -e "$1" "$__BU_COLOR_CYAN"         'BoldC'; }
function Decho_FMT_BoldC_Gray      { Decho -e "$1" "$__BU_COLOR_GRAY"         'BoldC'; }
function Decho_FMT_BoldC_Green     { Decho -e "$1" "$__BU_COLOR_GREEN"        'BoldC'; }
function Decho_FMT_BoldC_Orange    { Decho -e "$1" "$__BU_COLOR_ORANGE"       'BoldC'; }
function Decho_FMT_BoldC_Pink      { Decho -e "$1" "$__BU_COLOR_PINK"         'BoldC'; }
function Decho_FMT_BoldC_Purple    { Decho -e "$1" "$__BU_COLOR_PURPLE"       'BoldC'; }
function Decho_FMT_BoldC_Red       { Decho -e "$1" "$__BU_COLOR_RED"          'BoldC'; }
function Decho_FMT_BoldC_Turquoise { Decho -e "$1" "$__BU_COLOR_TURQUOISE"    'BoldC'; }
function Decho_FMT_BoldC_White     { Decho -e "$1" "$__BU_COLOR_WHITE"        'BoldC'; }
function Decho_FMT_BoldC_Yellow    { Decho -e "$1" "$__BU_COLOR_YELLOW"       'BoldC'; }

# Easy "Decho_FMT_BoldI()" function calls with colors.
function Decho_FMT_BoldCI_Highlight { Decho -e "$1" "$__BU_COLOR_HIGHLIGHT"    'BoldCI'; }
function Decho_FMT_BoldCI_Black     { Decho -e "$1" "$__BU_COLOR_BLACK"        'BoldCI'; }
function Decho_FMT_BoldCI_Blue      { Decho -e "$1" "$__BU_COLOR_BLUE"         'BoldCI'; }
function Decho_FMT_BoldCI_Cyan      { Decho -e "$1" "$__BU_COLOR_CYAN"         'BoldCI'; }
function Decho_FMT_BoldCI_Gray      { Decho -e "$1" "$__BU_COLOR_GRAY"         'BoldCI'; }
function Decho_FMT_BoldCI_Green     { Decho -e "$1" "$__BU_COLOR_GREEN"        'BoldCI'; }
function Decho_FMT_BoldCI_Orange    { Decho -e "$1" "$__BU_COLOR_ORANGE"       'BoldCI'; }
function Decho_FMT_BoldCI_Pink      { Decho -e "$1" "$__BU_COLOR_PINK"         'BoldCI'; }
function Decho_FMT_BoldCI_Purple    { Decho -e "$1" "$__BU_COLOR_PURPLE"       'BoldCI'; }
function Decho_FMT_BoldCI_Red       { Decho -e "$1" "$__BU_COLOR_RED"          'BoldCI'; }
function Decho_FMT_BoldCI_Turquoise { Decho -e "$1" "$__BU_COLOR_TURQUOISE"    'BoldCI'; }
function Decho_FMT_BoldCI_White     { Decho -e "$1" "$__BU_COLOR_WHITE"        'BoldCI'; }
function Decho_FMT_BoldCI_Yellow    { Decho -e "$1" "$__BU_COLOR_YELLOW"       'BoldCI'; }

# Easy "Decho_FMT_BoldIU()" function calls with color.
function Decho_FMT_BoldCIU_Highlight   { Decho -e "$1" "$__BU_COLOR_HIGHLIGHT"    'BoldCIU'; }
function Decho_FMT_BoldCIU_Black       { Decho -e "$1" "$__BU_COLOR_BLACK"        'BoldCIU'; }
function Decho_FMT_BoldCIU_Blue        { Decho -e "$1" "$__BU_COLOR_BLUE"         'BoldCIU'; }
function Decho_FMT_BoldCIU_Cyan        { Decho -e "$1" "$__BU_COLOR_CYAN"         'BoldCIU'; }
function Decho_FMT_BoldCIU_Gray        { Decho -e "$1" "$__BU_COLOR_GRAY"         'BoldCIU'; }
function Decho_FMT_BoldCIU_Green       { Decho -e "$1" "$__BU_COLOR_GREEN"        'BoldCIU'; }
function Decho_FMT_BoldCIU_Orange      { Decho -e "$1" "$__BU_COLOR_ORANGE"       'BoldCIU'; }
function Decho_FMT_BoldCIU_Pink        { Decho -e "$1" "$__BU_COLOR_PINK"         'BoldCIU'; }
function Decho_FMT_BoldCIU_Purple      { Decho -e "$1" "$__BU_COLOR_PURPLE"       'BoldCIU'; }
function Decho_FMT_BoldCIU_Red         { Decho -e "$1" "$__BU_COLOR_RED"          'BoldCIU'; }
function Decho_FMT_BoldCIU_Turquoise   { Decho -e "$1" "$__BU_COLOR_TURQUOISE"    'BoldCIU'; }
function Decho_FMT_BoldCIU_Yellow      { Decho -e "$1" "$__BU_COLOR_YELLOW"       'BoldCIU'; }

# Easy "Decho_FMT_I()" function calls with colors.
function Decho_FMT_CI_Highlight { Decho -e "$1" "$__BU_COLOR_HIGHLIGHT"    'CI'; }
function Decho_FMT_CI_Black     { Decho -e "$1" "$__BU_COLOR_BLACK"        'CI'; }
function Decho_FMT_CI_Blue      { Decho -e "$1" "$__BU_COLOR_BLUE"         'CI'; }
function Decho_FMT_CI_Cyan      { Decho -e "$1" "$__BU_COLOR_CYAN"         'CI'; }
function Decho_FMT_CI_Gray      { Decho -e "$1" "$__BU_COLOR_GRAY"         'CI'; }
function Decho_FMT_CI_Green     { Decho -e "$1" "$__BU_COLOR_GREEN"        'CI'; }
function Decho_FMT_CI_Orange    { Decho -e "$1" "$__BU_COLOR_ORANGE"       'CI'; }
function Decho_FMT_CI_Pink      { Decho -e "$1" "$__BU_COLOR_PINK"         'CI'; }
function Decho_FMT_CI_Purple    { Decho -e "$1" "$__BU_COLOR_PURPLE"       'CI'; }
function Decho_FMT_CI_Red       { Decho -e "$1" "$__BU_COLOR_RED"          'CI'; }
function Decho_FMT_CI_Turquoise { Decho -e "$1" "$__BU_COLOR_TURQUOISE"    'CI'; }
function Decho_FMT_CI_White     { Decho -e "$1" "$__BU_COLOR_WHITE"        'CI'; }
function Decho_FMT_CI_Yellow    { Decho -e "$1" "$__BU_COLOR_YELLOW"       'CI'; }

# Easy "Decho_FMT_IU()" function calls with colors.
function Decho_FMT_CIU_Highlight    { Decho -e "$1" "$__BU_COLOR_HIGHLIGHT"    'CIU'; }
function Decho_FMT_CIU_Black        { Decho -e "$1" "$__BU_COLOR_BLACK"        'CIU'; }
function Decho_FMT_CIU_Blue         { Decho -e "$1" "$__BU_COLOR_BLUE"         'CIU'; }
function Decho_FMT_CIU_Cyan         { Decho -e "$1" "$__BU_COLOR_CYAN"         'CIU'; }
function Decho_FMT_CIU_Gray         { Decho -e "$1" "$__BU_COLOR_GRAY"         'CIU'; }
function Decho_FMT_CIU_Green        { Decho -e "$1" "$__BU_COLOR_GREEN"        'CIU'; }
function Decho_FMT_CIU_Orange       { Decho -e "$1" "$__BU_COLOR_ORANGE"       'CIU'; }
function Decho_FMT_CIU_Pink         { Decho -e "$1" "$__BU_COLOR_PINK"         'CIU'; }
function Decho_FMT_CIU_Purple       { Decho -e "$1" "$__BU_COLOR_PURPLE"       'CIU'; }
function Decho_FMT_CIU_Red          { Decho -e "$1" "$__BU_COLOR_RED"          'CIU'; }
function Decho_FMT_CIU_Turquoise    { Decho -e "$1" "$__BU_COLOR_TURQUOISE"    'CIU'; }
function Decho_FMT_CIU_White        { Decho -e "$1" "$__BU_COLOR_WHITE"        'CIU'; }
function Decho_FMT_CIU_Yellow       { Decho -e "$1" "$__BU_COLOR_YELLOW"       'CIU'; }

# Easy "Decho_FMT_U()" function calls with colors.
function Decho_FMT_CU_Highlight { Decho -e "$1" "$__BU_COLOR_HIGHLIGHT"    'CU'; }
function Decho_FMT_CU_Black     { Decho -e "$1" "$__BU_COLOR_BLACK"        'CU'; }
function Decho_FMT_CU_Blue      { Decho -e "$1" "$__BU_COLOR_BLUE"         'CU'; }
function Decho_FMT_CU_Cyan      { Decho -e "$1" "$__BU_COLOR_CYAN"         'CU'; }
function Decho_FMT_CU_Gray      { Decho -e "$1" "$__BU_COLOR_GRAY"         'CU'; }
function Decho_FMT_CU_Green     { Decho -e "$1" "$__BU_COLOR_GREEN"        'CU'; }
function Decho_FMT_CU_Orange    { Decho -e "$1" "$__BU_COLOR_ORANGE"       'CU'; }
function Decho_FMT_CU_Pink      { Decho -e "$1" "$__BU_COLOR_PINK"         'CU'; }
function Decho_FMT_CU_Purple    { Decho -e "$1" "$__BU_COLOR_PURPLE"       'CU'; }
function Decho_FMT_CU_Red       { Decho -e "$1" "$__BU_COLOR_RED"          'CU'; }
function Decho_FMT_CU_Turquoise { Decho -e "$1" "$__BU_COLOR_TURQUOISE"    'CU'; }
function Decho_FMT_CU_White     { Decho -e "$1" "$__BU_COLOR_WHITE"        'CU'; }
function Decho_FMT_CU_Yellow    { Decho -e "$1" "$__BU_COLOR_YELLOW"       'CU'; }

# -----------------------------------------------
