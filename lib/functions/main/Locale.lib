#!/usr/bin/env bash

# ---------------------
# SCRIPT'S INFORMATIONS

# Name          : Locale.lib
# Module        : Main
# Description   :
# Author(s)     : Dimitri Obeid
# Version       :

# ----------------------------
# SHELLCHECK GLOBAL DISABLER :

# Add a coma after each warning code to disable multiple warnings at one go.

# Do not uncomment the "shellcheck disable" line, or else the shellcheck command will be executed during the script's execution, and will not detect any coding mistake during a debugging process.

# DO NOT PUT A COMA AFTER A SHELLCHECK CODE IF THERE'S NO OTHER SHELLCHECK CODE FOLLOWING IT, OR ELSE SHELLCHECK WILL RETURN ERRORS DURING THE DEBUGGING PROCESS !!!

# IF YOU WANT TO ADD ANOTHER SHELLCHECK CODE, WRITE THIS CODE DIRECTLY AFTER THE COMMA, WITHOUT ADDING A BLANK SPACE AFTER IT !!!

# shellcheck disable=SC2154,SC2016

# --------------------------------------------------------------------------------------------------------------------------------------------
# DO NOT EXECUTE THIS SCRIPT DIRECTLY, instead, just source it by calling the "$__BU_MAIN_FUNCTIONS_FILES_PATH" array in the initializer file.

# /////////////////////////////////////////////////////////////////////////////////////////////// #

# Preventing the direct execution of this file, as this script is not meant to be directly executed, but sourced.
if [ "${0##*/}" == "${BASH_SOURCE[0]##*/}" ]; then if [[ "${LANG}" = en_* ]]; then
    echo -e "WARNING !" >&2; echo >&2;
    echo -e "This shell script (${BASH_SOURCE[0]}) is not meant to be executed directly !" >&2;
    echo -e "Use this script only by sourcing it in your project script." >&2; echo >&2;

elif [[ "${LANG}" == fr_* ]]; then
    echo -e "ATTENTION !" >&2; echo >&2;
    echo -e "Ce script shell (${BASH_SOURCE[0]}) n'est pas conçu pour être directement exécuté !" >&2;
    echo -e "Utilisez seulement ce script en l'incluant dans votre projet." >&2; echo >&2;

else
    echo -e "WARNING !" >&2; echo >&2;
    echo -e "This shell script (${BASH_SOURCE[0]}) is not meant to be executed directly !" >&2;
    echo -e "Use this script only by sourcing it in your project script." >&2; echo >&2;

fi; exit 1; fi

# ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; #

#################################### DEFINING LIBRARY FUNCTIONS ###################################

# Printing the language name in English and in its own language.
function BU.Main.Locale.PrintLanguageName()
{
	#**** Parameters ****
	local p_code=${1:-NULL};    # String    - Default : NULL    - Language in which the file must be translated.

	#**** Code ****
      if [ "${p_code,,}" == 'aa' ]; then echo -n "${p_code,,} : Afar | Afaraf"
    elif [ "${p_code,,}" == 'ab' ]; then echo -n "${p_code,,} : Abkhazian | Аҧсуа"
    elif [ "${p_code,,}" == 'ae' ]; then echo -n "${p_code,,} : Avestan | Avesta"
    elif [ "${p_code,,}" == 'af' ]; then echo -n "${p_code,,} : Afrikaans | Afrikaans"
    elif [ "${p_code,,}" == 'ak' ]; then echo -n "${p_code,,} : Akan | Akan"
    elif [ "${p_code,,}" == 'am' ]; then echo -n "${p_code,,} : Amharic | አማርኛ"
    elif [ "${p_code,,}" == 'an' ]; then echo -n "${p_code,,} : Aragonese | Aragonés"
    elif [ "${p_code,,}" == 'ar' ]; then echo -n "${p_code,,} : Arabic | العربية"
	elif [ "${p_code,,}" == 'as' ]; then echo -n "${p_code,,} : Assamese | অসমীয়া"
	elif [ "${p_code,,}" == 'av' ]; then echo -n "${p_code,,} : Avaric | авар мацӀ ; магӀарул мацӀ"
	elif [ "${p_code,,}" == 'ay' ]; then echo -n "${p_code,,} : Aymara | Aymar aru"
	elif [ "${p_code,,}" == 'az' ]; then echo -n "${p_code,,} : Azerbaijani | Azərbaycan dili"
	elif [ "${p_code,,}" == 'ba' ]; then echo -n "${p_code,,} : Bashkir | башҡорт теле"
	elif [ "${p_code,,}" == 'be' ]; then echo -n "${p_code,,} : Belarusian | Беларуская"
	elif [ "${p_code,,}" == 'bg' ]; then echo -n "${p_code,,} : Bulgarian | български език"
	elif [ "${p_code,,}" == 'bh' ]; then echo -n "${p_code,,} : Bihari | भोजपुरी"
	elif [ "${p_code,,}" == 'bi' ]; then echo -n "${p_code,,} : Bislama | Bislama"
	elif [ "${p_code,,}" == 'bm' ]; then echo -n "${p_code,,} : Bambara | Bamanankan"
	elif [ "${p_code,,}" == 'bn' ]; then echo -n "${p_code,,} : Bengali | বাংলা"
	elif [ "${p_code,,}" == 'bo' ]; then echo -n "${p_code,,} : Tibetan | བོད་ཡིག"
	elif [ "${p_code,,}" == 'br' ]; then echo -n "${p_code,,} : Breton | Brezhoneg"
	elif [ "${p_code,,}" == 'bs' ]; then echo -n "${p_code,,} : Bosnian | Bosanski jezik"
	elif [ "${p_code,,}" == 'ca' ]; then echo -n "${p_code,,} : Catalan | Català"
	elif [ "${p_code,,}" == 'ce' ]; then echo -n "${p_code,,} : Chechen | нохчийн мотт"
	elif [ "${p_code,,}" == 'ch' ]; then echo -n "${p_code,,} : Chamorro | Chamoru"
	elif [ "${p_code,,}" == 'co' ]; then echo -n "${p_code,,} : Corsican | Corsu ; lingua corsa"
	elif [ "${p_code,,}" == 'cr' ]; then echo -n "${p_code,,} : cree | ᓀᐦᐃᔭᐍᐏᐣ"
	elif [ "${p_code,,}" == 'cs' ]; then echo -n "${p_code,,} : Czech | Česky ; čeština"
	elif [ "${p_code,,}" == 'cu' ]; then echo -n "${p_code,,} : Old Church Slavonic | Словѣньскъ"
	elif [ "${p_code,,}" == 'cv' ]; then echo -n "${p_code,,} : Chuvash | чӑваш чӗлхи"
	elif [ "${p_code,,}" == 'cy' ]; then echo -n "${p_code,,} : Welsh | Cymraeg"
	elif [ "${p_code,,}" == 'da' ]; then echo -n "${p_code,,} : Danish | Dansk"
	elif [ "${p_code,,}" == 'de' ]; then echo -n "${p_code,,} : German | Deutsch"
	elif [ "${p_code,,}" == 'dv' ]; then echo -n "${p_code,,} : Divehi | ދިވެހި"
	elif [ "${p_code,,}" == 'dz' ]; then echo -n "${p_code,,} : Dzongkha | རྫོང་ཁ"
	elif [ "${p_code,,}" == 'ee' ]; then echo -n "${p_code,,} : Ewe | Ɛʋɛgbɛ"
	elif [ "${p_code,,}" == 'el' ]; then echo -n "${p_code,,} : Greek | Ελληνικά"
	elif [ "${p_code,,}" == 'en' ]; then echo -n "${p_code,,} : English | English"
	elif [ "${p_code,,}" == 'eo' ]; then echo -n "${p_code,,} : Esperanto | Esperanto"
	elif [ "${p_code,,}" == 'es' ]; then echo -n "${p_code,,} : Spanish | Español"
	elif [ "${p_code,,}" == 'et' ]; then echo -n "${p_code,,} : Estonian | Eesti keel"
	elif [ "${p_code,,}" == 'eu' ]; then echo -n "${p_code,,} : Basque | Euskara"
	elif [ "${p_code,,}" == 'fa' ]; then echo -n "${p_code,,} : Persian | فارسی"
	elif [ "${p_code,,}" == 'ff' ]; then echo -n "${p_code,,} : Fulah | Fulfulde"
	elif [ "${p_code,,}" == 'fi' ]; then echo -n "${p_code,,} : Finnish | Suomen kieli"
	elif [ "${p_code,,}" == 'fj' ]; then echo -n "${p_code,,} : Fijian | Vosa Vakaviti"
	elif [ "${p_code,,}" == 'fo' ]; then echo -n "${p_code,,} : Faroese | Føroyskt"
	elif [ "${p_code,,}" == 'fr' ]; then echo -n "${p_code,,} : French | Français"
	elif [ "${p_code,,}" == 'fy' ]; then echo -n "${p_code,,} : Western Frisian | Frysk"
	elif [ "${p_code,,}" == 'ga' ]; then echo -n "${p_code,,} : Irish | Gaeilge"
	elif [ "${p_code,,}" == 'gd' ]; then echo -n "${p_code,,} : Scottish Gaelic | Gàidhlig"
	elif [ "${p_code,,}" == 'gl' ]; then echo -n "${p_code,,} : Galician | Galego"
	elif [ "${p_code,,}" == 'gn' ]; then echo -n "${p_code,,} : Guarani | Avañe'ẽ"
	elif [ "${p_code,,}" == 'gu' ]; then echo -n "${p_code,,} : Gujarati | ગુજરાતી"
	elif [ "${p_code,,}" == 'gv' ]; then echo -n "${p_code,,} : Manx | Ghaelg"
	elif [ "${p_code,,}" == 'ha' ]; then echo -n "${p_code,,} : Hausa | هَوُسَ"
	elif [ "${p_code,,}" == 'he' ]; then echo -n "${p_code,,} : Hebrew | עברית"
	elif [ "${p_code,,}" == 'hi' ]; then echo -n "${p_code,,} : Hindi | हिन्दी ; हिंदी"
	elif [ "${p_code,,}" == 'ho' ]; then echo -n "${p_code,,} : Hiri Motu | Hiri Motu"
	elif [ "${p_code,,}" == 'hr' ]; then echo -n "${p_code,,} : Croatian | Hrvatski"
	elif [ "${p_code,,}" == 'ht' ]; then echo -n "${p_code,,} : Haitian | Kreyòl ayisyen"
	elif [ "${p_code,,}" == 'hu' ]; then echo -n "${p_code,,} : Hungarian | magyar "
	elif [ "${p_code,,}" == 'hy' ]; then echo -n "${p_code,,} : Armenian | Հայերեն"
	elif [ "${p_code,,}" == 'hz' ]; then echo -n "${p_code,,} : Herero | Otjiherero"
	elif [ "${p_code,,}" == 'ia' ]; then echo -n "${p_code,,} : Interlingue | Interlingua"
	elif [ "${p_code,,}" == 'id' ]; then echo -n "${p_code,,} : Indonesian | Bahasa Indonesia"
	elif [ "${p_code,,}" == 'ie' ]; then echo -n "${p_code,,} : Interlingue | Interlingue"
	elif [ "${p_code,,}" == 'ig' ]; then echo -n "${p_code,,} : Igbo | Igbo"
	elif [ "${p_code,,}" == 'ii' ]; then echo -n "${p_code,,} : Sichuan Yi | ꆇꉙ"
	elif [ "${p_code,,}" == 'ik' ]; then echo -n "${p_code,,} : Inupiaq | Iñupiaq ; Iñupiatun"
	elif [ "${p_code,,}" == 'io' ]; then echo -n "${p_code,,} : Ido | Ido"
	elif [ "${p_code,,}" == 'is' ]; then echo -n "${p_code,,} : Icelandic | Íslenska"
	elif [ "${p_code,,}" == 'it' ]; then echo -n "${p_code,,} : Italian | Italiano"
	elif [ "${p_code,,}" == 'iu' ]; then echo -n "${p_code,,} : Inuktitut | ᐃᓄᒃᑎᑐᑦ"
	elif [ "${p_code,,}" == 'ja' ]; then echo -n "${p_code,,} : Japanese | 日本語 (にほんご)"
	elif [ "${p_code,,}" == 'jv' ]; then echo -n "${p_code,,} : Javanese | Basa Jawa"
	elif [ "${p_code,,}" == 'ka' ]; then echo -n "${p_code,,} : Georgian | ქართული"
	elif [ "${p_code,,}" == 'kg' ]; then echo -n "${p_code,,} : Kongo | KiKongo"
	elif [ "${p_code,,}" == 'ki' ]; then echo -n "${p_code,,} : Kikuyu | Gĩkũyũ"
	elif [ "${p_code,,}" == 'kj' ]; then echo -n "${p_code,,} : Kwanyama | Kuanyama"
	elif [ "${p_code,,}" == 'kk' ]; then echo -n "${p_code,,} : Kazakh | Қазақ тілі"
	elif [ "${p_code,,}" == 'kl' ]; then echo -n "${p_code,,} : Greenlandic | Kalaallisut ; kalaallit oqaasii"
	elif [ "${p_code,,}" == 'km' ]; then echo -n "${p_code,,} : Khmer | ភាសាខ្មែរ"
	elif [ "${p_code,,}" == 'kn' ]; then echo -n "${p_code,,} : Kannada | ಕನ್ನಡ"
	elif [ "${p_code,,}" == 'ko' ]; then echo -n "${p_code,,} : Korean | 한국어 (韓國語) ; 조선말 (朝鮮語)"
	elif [ "${p_code,,}" == 'kr' ]; then echo -n "${p_code,,} : Kanuri | Kanuri"
	elif [ "${p_code,,}" == 'ks' ]; then echo -n "${p_code,,} : Kashmiri | कश्मीरी ; كشميري"
	elif [ "${p_code,,}" == 'ku' ]; then echo -n "${p_code,,} : Kurdish | Kurdî ; كوردی"
	elif [ "${p_code,,}" == 'kv' ]; then echo -n "${p_code,,} : Komi | коми кыв"
	elif [ "${p_code,,}" == 'kw' ]; then echo -n "${p_code,,} : Cornish | Kernewek"
	elif [ "${p_code,,}" == 'ky' ]; then echo -n "${p_code,,} : Kirghiz | кыргыз тили"
	elif [ "${p_code,,}" == 'la' ]; then echo -n "${p_code,,} : Latin | Latine ; lingua latina"
	elif [ "${p_code,,}" == 'lb' ]; then echo -n "${p_code,,} : Luxembourgish | Lëtzebuergesch"
	elif [ "${p_code,,}" == 'lg' ]; then echo -n "${p_code,,} : Ganda | Luganda"
	elif [ "${p_code,,}" == 'li' ]; then echo -n "${p_code,,} : Limburgish | Limburgs"
	elif [ "${p_code,,}" == 'ln' ]; then echo -n "${p_code,,} : Lingala | Lingála"
	elif [ "${p_code,,}" == 'lo' ]; then echo -n "${p_code,,} : Lao | ພາສາລາວ"
	elif [ "${p_code,,}" == 'lt' ]; then echo -n "${p_code,,} : Lithuanian | Lietuvių kalba"
	elif [ "${p_code,,}" == 'lu' ]; then echo -n "${p_code,,} : Luba | tshiluba"
	elif [ "${p_code,,}" == 'lv' ]; then echo -n "${p_code,,} : Latvian | Latviešu valoda"
	elif [ "${p_code,,}" == 'mg' ]; then echo -n "${p_code,,} : Malagasy | Fiteny malagasy"
	elif [ "${p_code,,}" == 'mh' ]; then echo -n "${p_code,,} : Marshallese | Kajin M̧ajeļ"
	elif [ "${p_code,,}" == 'mi' ]; then echo -n "${p_code,,} : Māori | Te reo Māori"
	elif [ "${p_code,,}" == 'mk' ]; then echo -n "${p_code,,} : Macedonian | македонски јазик"
	elif [ "${p_code,,}" == 'ml' ]; then echo -n "${p_code,,} : Malayalam | മലയാളം"
	elif [ "${p_code,,}" == 'mn' ]; then echo -n "${p_code,,} : Mongolian | Монгол"
	elif [ "${p_code,,}" == 'mo' ]; then echo -n "${p_code,,} : Moldavian | лимба молдовеняскэ"
	elif [ "${p_code,,}" == 'mr' ]; then echo -n "${p_code,,} : Marathi | मराठी"
	elif [ "${p_code,,}" == 'ms' ]; then echo -n "${p_code,,} : Malay | Bahasa Melayu ; بهاس ملايو"
	elif [ "${p_code,,}" == 'mt' ]; then echo -n "${p_code,,} : Maltese | Malti"
	elif [ "${p_code,,}" == 'my' ]; then echo -n "${p_code,,} : Burmese | ဗမာစာ"
	elif [ "${p_code,,}" == 'na' ]; then echo -n "${p_code,,} : Nauru | Ekakairũ Naoero"
	elif [ "${p_code,,}" == 'nb' ]; then echo -n "${p_code,,} : Norwegian Bokmål | Norsk bokmål"
	elif [ "${p_code,,}" == 'nd' ]; then echo -n "${p_code,,} : North Ndebele | isiNdebele"
	elif [ "${p_code,,}" == 'ne' ]; then echo -n "${p_code,,} : Nepali | नेपाली"
	elif [ "${p_code,,}" == 'ng' ]; then echo -n "${p_code,,} : Ndonga | Owambo"
	elif [ "${p_code,,}" == 'nl' ]; then echo -n "${p_code,,} : Dutch | Nederlands"
	elif [ "${p_code,,}" == 'nn' ]; then echo -n "${p_code,,} : Norwegian Nynorsk | Norsk nynorsk"
	elif [ "${p_code,,}" == 'no' ]; then echo -n "${p_code,,} : Norwegian | Norsk"
	elif [ "${p_code,,}" == 'nr' ]; then echo -n "${p_code,,} : South Ndebele | Ndébélé"
	elif [ "${p_code,,}" == 'nv' ]; then echo -n "${p_code,,} : Navajo | Diné bizaad ; Dinékʼehǰí"
	elif [ "${p_code,,}" == 'ny' ]; then echo -n "${p_code,,} : Chichewa | ChiCheŵa ; chinyanja"
	elif [ "${p_code,,}" == 'oc' ]; then echo -n "${p_code,,} : Occitan | Occitan"
	elif [ "${p_code,,}" == 'oj' ]; then echo -n "${p_code,,} : Ojibwa | ᐊᓂᔑᓈᐯᒧᐎᓐ"
	elif [ "${p_code,,}" == 'om' ]; then echo -n "${p_code,,} : Oromo | Afaan Oromoo"
	elif [ "${p_code,,}" == 'or' ]; then echo -n "${p_code,,} : Oriya | ଓଡ଼ିଆ"
	elif [ "${p_code,,}" == 'os' ]; then echo -n "${p_code,,} : Ossetian | Ирон ӕвзаг"
	elif [ "${p_code,,}" == 'pa' ]; then echo -n "${p_code,,} : Panjabi | ਪੰਜਾਬੀ ; پنجابی"
	elif [ "${p_code,,}" == 'pi' ]; then echo -n "${p_code,,} : Pāli | पािऴ"
	elif [ "${p_code,,}" == 'pl' ]; then echo -n "${p_code,,} : Polish | Polski"
	elif [ "${p_code,,}" == 'ps' ]; then echo -n "${p_code,,} : Pashto | پښتو"
	elif [ "${p_code,,}" == 'pt' ]; then echo -n "${p_code,,} : Portuguese | Português"
	elif [ "${p_code,,}" == 'qu' ]; then echo -n "${p_code,,} : Quechua | Runa Simi ; Kichwa"
	elif [ "${p_code,,}" == 'rc' ]; then echo -n "${p_code,,} : Reunionese | Kréol Rénioné"
	elif [ "${p_code,,}" == 'rm' ]; then echo -n "${p_code,,} : Romansh | Rumantsch grischun"
	elif [ "${p_code,,}" == 'rn' ]; then echo -n "${p_code,,} : Kirundi | kiRundi"
	elif [ "${p_code,,}" == 'ro' ]; then echo -n "${p_code,,} : Romanian | Română"
	elif [ "${p_code,,}" == 'ru' ]; then echo -n "${p_code,,} : Russian | русский язык"
	elif [ "${p_code,,}" == 'rw' ]; then echo -n "${p_code,,} : Kinyarwanda | Kinyarwanda"
	elif [ "${p_code,,}" == 'sa' ]; then echo -n "${p_code,,} : Sanskrit | संस्कृतम्"
	elif [ "${p_code,,}" == 'sc' ]; then echo -n "${p_code,,} : Sardinian | sardu"
	elif [ "${p_code,,}" == 'sd' ]; then echo -n "${p_code,,} : Sindhi | सिन्धी ; سنڌي، سندھی"
	elif [ "${p_code,,}" == 'se' ]; then echo -n "${p_code,,} : Northern Sami | Davvisámegiella"
	elif [ "${p_code,,}" == 'sg' ]; then echo -n "${p_code,,} : Sango | Yângâ tî sängö"
	elif [ "${p_code,,}" == 'sh' ]; then echo -n "${p_code,,} : Serbo-Croatian | srpskohrvatski jezik ; српскохрватски језик"
	elif [ "${p_code,,}" == 'si' ]; then echo -n "${p_code,,} : Sinhalese| සිංහල"
	elif [ "${p_code,,}" == 'sk' ]; then echo -n "${p_code,,} : Slovak | Slovenčina"
	elif [ "${p_code,,}" == 'sl' ]; then echo -n "${p_code,,} : Slovenian | Slovenščina"
	elif [ "${p_code,,}" == 'sm' ]; then echo -n "${p_code,,} : Samoan | Gagana fa'a Samoa"
	elif [ "${p_code,,}" == 'sn' ]; then echo -n "${p_code,,} : Shona | chiShona"
	elif [ "${p_code,,}" == 'so' ]; then echo -n "${p_code,,} : Somali | Soomaaliga ; af Soomaali"
	elif [ "${p_code,,}" == 'sq' ]; then echo -n "${p_code,,} : Albanian | Shqip "
	elif [ "${p_code,,}" == 'sr' ]; then echo -n "${p_code,,} : Serbian | српски језик"
	elif [ "${p_code,,}" == 'ss' ]; then echo -n "${p_code,,} : Swati| SiSwati"
	elif [ "${p_code,,}" == 'st' ]; then echo -n "${p_code,,} : Sotho | seSotho"
	elif [ "${p_code,,}" == 'su' ]; then echo -n "${p_code,,} : Sundanese | Basa Sunda"
	elif [ "${p_code,,}" == 'sv' ]; then echo -n "${p_code,,} : Swedish | Svenska"
	elif [ "${p_code,,}" == 'sw' ]; then echo -n "${p_code,,} : Swahili | Kiswahili"
	elif [ "${p_code,,}" == 'ta' ]; then echo -n "${p_code,,} : Tamil | தமிழ்"
	elif [ "${p_code,,}" == 'te' ]; then echo -n "${p_code,,} : Telugu | తెలుగు"
	elif [ "${p_code,,}" == 'tg' ]; then echo -n "${p_code,,} : Tajik | тоҷикӣ ; toğikī ; تاجیکی"
	elif [ "${p_code,,}" == 'th' ]; then echo -n "${p_code,,} : Thai | ไทย"
	elif [ "${p_code,,}" == 'ti' ]; then echo -n "${p_code,,} : Tigrinya | ትግርኛ"
	elif [ "${p_code,,}" == 'tk' ]; then echo -n "${p_code,,} : Turkmen | Türkmen ; Түркмен"
	elif [ "${p_code,,}" == 'tl' ]; then echo -n "${p_code,,} : Tagalog | Tagalog"
	elif [ "${p_code,,}" == 'tn' ]; then echo -n "${p_code,,} : Tswana | seTswana"
	elif [ "${p_code,,}" == 'to' ]; then echo -n "${p_code,,} : Tonga | faka Tonga"
	elif [ "${p_code,,}" == 'tr' ]; then echo -n "${p_code,,} : Turkish | Türkçe"
	elif [ "${p_code,,}" == 'ts' ]; then echo -n "${p_code,,} : Tsonga | xiTsonga"
	elif [ "${p_code,,}" == 'tt' ]; then echo -n "${p_code,,} : Tatar | татарча ; tatarça ; تاتارچا"
	elif [ "${p_code,,}" == 'tw' ]; then echo -n "${p_code,,} : Twi | Twi"
	elif [ "${p_code,,}" == 'ty' ]; then echo -n "${p_code,,} : Tahitian | Reo Mā\`ohi"
	elif [ "${p_code,,}" == 'ug' ]; then echo -n "${p_code,,} : Uighur | Uyƣurqə ; ئۇيغۇرچ"
	elif [ "${p_code,,}" == 'uk' ]; then echo -n "${p_code,,} : Ukrainian | українська мова"
	elif [ "${p_code,,}" == 'ur' ]; then echo -n "${p_code,,} : Urdu | اردو"
	elif [ "${p_code,,}" == 'uz' ]; then echo -n "${p_code,,} : Uzbek | O'zbek ; Ўзбек ; أۇزبېك"
	elif [ "${p_code,,}" == 've' ]; then echo -n "${p_code,,} : Venda | tshiVenḓa"
	elif [ "${p_code,,}" == 'vi' ]; then echo -n "${p_code,,} : Vietnamese | Tiếng Việt"
	elif [ "${p_code,,}" == 'vo' ]; then echo -n "${p_code,,} : Volapük | Volapük"
	elif [ "${p_code,,}" == 'wa' ]; then echo -n "${p_code,,} : Walon | Walloon"
	elif [ "${p_code,,}" == 'wo' ]; then echo -n "${p_code,,} : Wolof | Wollof"
	elif [ "${p_code,,}" == 'xh' ]; then echo -n "${p_code,,} : Xhosa | isiXhosa"
	elif [ "${p_code,,}" == 'yi' ]; then echo -n "${p_code,,} : Yiddish | ייִדיש"
	elif [ "${p_code,,}" == 'yo' ]; then echo -n "${p_code,,} : Yoruba | Yorùbá"
	elif [ "${p_code,,}" == 'za' ]; then echo -n "${p_code,,} : Zhuang | Saɯ cueŋƅ ; Saw cuengh"
	elif [ "${p_code,,}" == 'zh' ]; then echo -n "${p_code,,} : Chinese | 中文, 汉语, 漢語"
	elif [ "${p_code,,}" == 'zu' ]; then echo -n "${p_code,,} : Zulu | isiZulu"
	  fi;

	return 0;
}
