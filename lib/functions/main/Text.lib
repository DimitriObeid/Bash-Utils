#!/usr/bin/env bash

# ----------------------
# SCRIPT'S INFORMATIONS

# Name          : Text.lib
# Description   : Functions specially made for text processing (cutting fields / characters, ).
# Author(s)     : Dimitri Obeid
# Version       : 

# Preventing the direct execution of this file, as this script is not meant to be directly executed, but sourced.
if [ "${0##*/}" == "${BASH_SOURCE[0]##*/}" ]; then
    echo -e "WARNING !" >&2; echo >&2
    echo -e "This shell script (${BASH_SOURCE[0]}) is not meant to be executed directly !" >&2
    echo -e "Use this script only by sourcing it in your project script." >&2; echo >&2

    exit 1
fi

# ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; #

#################################### DEFINING LIBRARY FUNCTIONS ###################################

#### 

## 

# Cut the date displayed before a string.
function CutDateFromString()
{
    #***** Parameters *****
    local p_string=$1

    #***** Code *****
    p_string="${p_string##*] }"
    
    echo -e "$p_string"
}

# Cut the dash written before a command option call (to be improved).
function CutDashFromOption()
{
    #***** Parameters *****
    local p_string=$1

    #***** Code *****
    p_string="${p_string##*-}"
    
    echo -e "$p_string"
}

# Cut the last field of a path.
function CutLastFieldFromPath()
{
    #***** Parameters *****
    local p_path=$1

    #***** Code *****
    CheckArgsMain_CutLastFieldFromPath "$p_path"

    p_path=${p_path##*/)}

    echo -e "$p_path"
}

# Reverse a string.
function ReverseStringWordsOrder()
{
    #***** Parameters *****
    p_str=$1
    p_delim=$2

    #***** Code *****
    echo "$p_str" | tr "$p_delim" '\n' | tac | tr '\n' "$p_delim"

}
