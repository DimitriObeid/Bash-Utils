# ////////////////////////////// USER'S .bash_profile configuration ///////////////////////////// #

#### FUNCTIONS

## PATH PROCESSING FUNCTIONS

# Getting the path returned by the "find" command, to make the file searching case insensitive.
function BP_FindPath
{
    # $1 = Parent directory.
    # $2 = Targeted directory or file.
    local path
        path="$(find "$1" -maxdepth 1 -iname "$2")" && echo "$path"
}

# -----------------------------------------------



# /////////////////////////////////////////////////////////////////////////////////////////////// #

#### BASH-UTILS VARIABLES

## BASH-UTILS DIRECTORIES PATHS

# Bash Utils root directory.

# For a better environment integration, it is highly advised to store the path in a file
# in the user's home directory, and to call the "cat" command to display its value.

__BASH_UTILS_ROOT="$(cat $HOME/Bash-utils-root-val.path)"

# Bash Utils sub-folders paths.
__BASH_UTILS_BIN="$(BP_FindPath "$__BASH_UTILS_ROOT" "bin")"			# Bash Utils binary files folder						|	Default parent folder --> "$__BASH_UTILS_ROOT/"
__BASH_UTILS_CONF="$(BP_FindPath "$__BASH_UTILS_ROOT" "config")"		# Bash Utils configuration files folder					|	Default parent folder --> "$__BASH_UTILS_ROOT/"
__BASH_UTILS_DOCS="$(BP_FindPath "$__BASH_UTILS_ROOT" "docs")"			# Bash Utils documentation folder						|	Default parent folder --> "$__BASH_UTILS_ROOT/"
__BASH_UTILS_LIB="$(BP_FindPath "$__BASH_UTILS_ROOT" "lib")"			# Bash Utils library root directory						|	Default parent folder --> "$__BASH_UTILS_ROOT/"
__BASH_UTILS_RES="$(BP_FindPath "$__BASH_UTILS_ROOT" "res")"            # Bash Utils resources directory                        |   Default parent folder --> "$__BASH_UTILS_ROOT/"

# Bash Utils dev-tools paths.
__BASH_UTILS_DEVTOOLS_ROOT="$(BP_FindPath "$__BASH_UTILS_RES" "dev-tools")"                        # Bash Utils development tools root directory			|	Default parent folder --> "$__BASH_UTILS_RES/"
__BASH_UTILS_DEVTOOLS_BIN="$(BP_FindPath "$__BASH_UTILS_DEVTOOLS_ROOT" "dev-bin")"                 # Bash Utils development tools binary files folder		|	Default parent folder --> "$__BASH_UTILS_DEVTOOLS_ROOT/"
__BASH_UTILS_DEVTOOLS_DSK="$(BP_FindPath "$__BASH_UTILS_DEVTOOLS_ROOT" "dev-desktop")"             # Bash Utils development tools desktop files folder		|	Default parent folder --> "$__BASH_UTILS_DEVTOOLS_ROOT/"
__BASH_UTILS_DEVTOOLS_IMG="$(BP_FindPath "$__BASH_UTILS_DEVTOOLS_ROOT" "dev-img")"                 # Bash Utils development tools desktop icons folder		|	Default parent folder --> "$__BASH_UTILS_DEVTOOLS_ROOT/"
__BASH_UTILS_DEVTOOLS_SRC="$(BP_FindPath "$__BASH_UTILS_DEVTOOLS_ROOT" "dev-src")"                 # Bash Utils development tools source files				|	Default parent folder --> "$__BASH_UTILS_DEVTOOLS_ROOT/"
__BASH_UTILS_DEVTOOLS_TRANSL="$(BP_FindPath "$__BASH_UTILS_DEVTOOLS_ROOT" "dev-translations")"     # Bash Utils development tools translation files folder	|	Default parent folder --> "$__BASH_UTILS_DEVTOOLS_ROOT/"

# "lib" folder's content.
__BASH_UTILS_LIB_FUNCTS="$(BP_FindPath "$__BASH_UTILS_LIB" "functions")"                # Bash Utils functions root directory                       |   Default parent folder --> "$__BASH_UTILS_LIB/"
__BASH_UTILS_LIB_FUNCTS_MAIN="$(BP_FindPath "$__BASH_UTILS_LIB_FUNCTS" "main")"         # Bash Utils main functions files directory                 |   Default parent folder --> "$__BASH_UTILS_LIB_FUNCTS/"
__BASH_UTILS_LIB_FUNCTS_OS="$(BP_FindPath "$__BASH_UTILS_LIB_FUNCTS" "os-specific")"    # Bash Utils operating system specific functions directory  |   Default parent folder --> "$__BASH_UTILS_LIB_FUNCTS/"
__BASH_UTILS_LIB_LANG="$(BP_FindPath "$__BASH_UTILS_LIB" "lang")"                       # Bash Utils translations files directory                   |   Default parent folder --> "$__BASH_UTILS_LIB/"

# -----------------------------------------------

## BASH UTIILS FILES PATHS

# "config" folder's content.
__BASH_UTILS_CONF_FILE_COLORS="$(BP_FindPath "$__BASH_UTILS_CONF" "Colors.conf")"                   # Bash Utils color encoding CheckTxtFmts configuration file.
__BASH_UTILS_CONF_FILE_PROJECT_INIT="$(BP_FindPath "$__BASH_UTILS_CONF" "projectInit.conf")"        # Project's initialization CheckTxtFmts.
__BASH_UTILS_CONF_FILE_PROJECT_STATUS="$(BP_FindPath "$__BASH_UTILS_CONF" "ProjectStatus.conf")"    # Bash Utils status CheckTxtFmts configuration file.
__BASH_UTILS_CONF_FILE_TEXT="$(BP_FindPath "$__BASH_UTILS_CONF" "Text.conf")"                       # Bash Utils text CheckTxtFmts configuration file.
__BASH_UTILS_CONF_FILE_TIME="$(BP_FindPath "$__BASH_UTILS_CONF" "Time.conf")"                       # Bash Utils time CheckTxtFmts configuration file.

# Bash Utils initializer path.
__BASH_UTILS_LIB_FILE_INITIALIZER="$(BP_FindPath "$__BASH_UTILS_LIB" "Initializer.sh")"             # Bash Utils initializer file.

# Bash Utils translations path.
__BASH_UTILS_TRANSLATION_FILE="$__BASH_UTILS_LIB_LANG/lang.csv"                                         # Bash Utils translations file.

# "functions" folder's sub-folders content.
# TODO : add the "os-specific" folder when the main library will be stable and when this extension will be done and stable.
__BASH_UTILS_FUNCTIONS_FILES_PATH=("$__BASH_UTILS_LIB_FUNCTS_MAIN/"*.lib )

# -----------------------------------------------



# /////////////////////////////////////////////////////////////////////////////////////////////// #

#### INITALIZATION VARIABLES

## INITIALIZATION VARIABLES DECLARATIONS

# Initialization status.
__INIT_IS_INITALIZING="true"

# Array of strings, to display in the log file with the date.
__INIT_STR_ARRAY_LOG_DATE=()
__INIT_STR_ARRAY_LOG_NODATE="$(for val in "${__INIT_STR_ARRAY_LOG_DATE[@]}"; do v_cutstr="${val##*] }" && echo "$v_cutstr"; done)"

# -----------------------------------------------

## LIBRARY INITALIZATION VARIABLES DECLARATIONS

# Defining an associative array to store each sourced library file's path.
__INIT_LIB_FILES_PATH_ARRAY=()

# -----------------------------------------------

## CONFIGURATION FILES INITALIZATION VARIABLES DECLARATIONS

# Defining an associative array to store each sourced configuration file's path.
__INIT_CONFIG_FILES_PATH_ARRAY=()

# Storing the configuration files path CheckTxtFmts values into an array to source, print and add easier into the "a_config_files_path" associative array.
# Those files are, respectly, the :
#   - Project's and initialization process global CheckTxtFmts
#   - Project's status CheckTxtFmts
#   - Text color
#   - Text decoration, formatting and printing CheckTxtFmts
#   - Time CheckTxtFmts

# The "ProjectInit.conf" file MUST be sourced first, then the "ProjectStatus.conf" file MUST be sourced in the second.
# Unless otherwise stated, the other configuration files may be sourced in any order.

__INIT_LIST_CONFIG_FILES_PATH_ARRAY=("$__BASH_UTILS_CONF_FILE_PROJECT_INIT" \
    "$__BASH_UTILS_CONF_FILE_PROJECT_STATUS" \
    "$__BASH_UTILS_CONF_FILE_COLORS" \
    "$__BASH_UTILS_CONF_FILE_TEXT" \
    "$__BASH_UTILS_CONF_FILE_TIME")

# -----------------------------------------------

## END OF Bash-utils GLOBAL VARIABLES DEFINITION
