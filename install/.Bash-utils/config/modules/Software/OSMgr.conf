#!/usr/bin/env bash

# Disabling the SC2034 warning from Shellcheck (SC2034: <Variable name> appears unused. Verify use (or export if used externally)), because of the huge number of global variables declared in the configuration files, but only used in the library files.
# shellcheck disable=SC2034

# This configuration file stores every global variables storing informations related about the user's current operating system.

# ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; #

################################## DEFINING RESOURCES - FUNCTIONS #################################

####

##

# Getting the user's current operating system, and storing the information in the "${__BU_SOFTWARE_CURRENT_OS}" global variable.
function BU.Software.ModConfig.OSMgr.GetCurrentOS()
{
    # CASE MATTERS, DO NOT MODIFY ANY VALUES, AS THE THE FUNCTIONS NAMES ARE CASE SENSITIVE (OPERATING SYSTEMS NAMES WRITTEN IN THE FUNCTIONS NAMES) !!!!!

    # The "${__BU_SOFTWARE_CURRENT_OS}" variable is declared as constants, as its value must not be changed during the script's execution.
    BU.Main.OS.IsBSD        && declare -r __BU_SOFTWARE_CURRENT_OS="BSD";
    BU.Main.OS.IsHaiku      && declare -r __BU_SOFTWARE_CURRENT_OS="Haiku";
    BU.Main.OS.
    BU.Main.OS.
    BU.Main.OS.
}

# -----------------------------------------------



# /////////////////////////////////////////////////////////////////////////////////////////////// #

# ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; #

######################################## DEFINING VARIABLES #######################################

####

##

BU.Software.ModConfig.OSMgr.GetCurrentOS;