#!/usr/bin/env bash

# Disabling the SC2034 warning from Shellcheck (SC2034: <Variable name> appears unused. Verify use (or export if used externally)), because of the huge number of global variables declared in the configuration files, but only used in the library files.
# shellcheck disable=SC2034

# This configuration file stores every background color-related global variables.

# ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; #

################################## DEFINING RESOURCES - FUNCTIONS #################################

#### ENCODING WITH THE "$(tput)" COMMAND AND PRINTED AND REDIRECTED WITH THE "BU.Main.TextFormat.SetBGColor()" FUNCTION

## BACKGROUND ENCODING

# Writing the command substitution text for the background coloration

# Don't call the "BU.Main.Decho.Decho.Function()" function to color the function name, it must stay perfectly visible on every colors, and the default,
# and the "$[__BU_MAIN_STAT_DECHO]" function's value is still set as its default value (in order to avoid bugs during the main module's initialization) : forbid

# shellcheck disable=SC2059,SC2154
function BU.Main.ModConfig.Colors.BG.PrintColorVarNameCmdSub()
{
    case "${2^^}" in
        'A')        printf "${__BU_MODULE_INIT_MSG__BU_MAIN_MODCONFIG__COLORS_BG__PrintColorVarNameCmdSub_FNCT_A}" "${1}";;
        'C' | *)    printf "${__BU_MODULE_INIT_MSG__BU_MAIN_MODCONFIG__COLORS_BG__PrintColorVarNameCmdSub_FNCT_C}" "${1}";;
    esac
}

## ----------------------------------------------



# /////////////////////////////////////////////////////////////////////////////////////////////// #

#### ENCODING WITH THE "tput" COMMAND AND PRINTED AND REDIRECTED WITH THE "BU.Main.TextFormat.SetBGColor" FUNCTIONS

## BACKGROUND ENCODING

declare -i ____BU_MAIN_MOD_BG_COLOR_DEF_LINENO;

# -----------------------------
# Aqua blue colored background.
# -----------------------------

____BU_MAIN_MOD_BG_COLOR_DEF_LINENO="$(( LINENO + 2 ))";

__BU_MAIN_COLOR_BG_AQUA="$(BU.Main.TextFormat.SetBGColor "${__BU_MAIN_COLOR_CODE_AQUA}" '--no-function')" || {
    printf "%s\n" "${__BU_MAIN_COLOR_CODE_RESET}";

    BU.Main.ModConfig.Colors.PrintVariableNameFailedToInitialize '__BU_MAIN_COLOR_BG_AQUA' "$(basename "${BASH_SOURCE[0]}")" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}" 'C';

    BU.ModuleInit.MsgAbort;

    BU.ModuleInit.AskPrintLog >&2 || { if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi };

    if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi

}; [ "${__BU_MODULE_INIT_MSG_ARRAY_MODE}" == '--mode-log-full' ] && {
    printf "%s" "${__BU_MAIN_COLOR_BG_AQUA}";
    printf "%s" "${__BU_MAIN_COLOR_TXT_BLACK}";

    BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_AQUA'  "${__BU_MAIN_COLOR_BG_AQUA}" 'CMD' \
        "$(BU.Main.ModConfig.Colors.BG.PrintColorVarNameCmdSub          "${__BU_MODULE_INIT_MSG__BU_MAIN_MODCONFIG__COLORS__COL_AQUA}" 'C')" \
        "${__BU_MODULE_INIT_MSG__DISP_INIT_GLOB_VARS_INFO__IS_VAR_DEF_IN_INITIALIZER__MAIN_MODULE_CONF}" "${BASH_SOURCE[0]}" \
        "${FUNCNAME[0]}" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}";
};


# -------------------------
# Black colored background.
# -------------------------

____BU_MAIN_MOD_BG_COLOR_DEF_LINENO="$(( LINENO + 2 ))";

__BU_MAIN_COLOR_BG_BLACK="$(BU.Main.TextFormat.SetBGColor "${__BU_MAIN_COLOR_CODE_BLACK}" '--no-function')" || {
    printf "%s\n" "${__BU_MAIN_COLOR_CODE_RESET}";

    BU.Main.ModConfig.Colors.PrintVariableNameFailedToInitialize '__BU_MAIN_COLOR_BG_BLACK' "$(basename "${BASH_SOURCE[0]}")" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}" 'C';

    BU.ModuleInit.MsgAbort;

    BU.ModuleInit.AskPrintLog >&2 || { if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi };

    if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi

}; [ "${__BU_MODULE_INIT_MSG_ARRAY_MODE}" == '--mode-log-full' ] && {
    printf "%s" "${__BU_MAIN_COLOR_BG_BLACK}";
    printf "%s" "${__BU_MAIN_COLOR_TXT_WHITE}";

    BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_BLACK' "${__BU_MAIN_COLOR_BG_BLACK}" 'CMD' \
        "$(BU.Main.ModConfig.Colors.BG.PrintColorVarNameCmdSub          "${__BU_MODULE_INIT_MSG__BU_MAIN_MODCONFIG__COLORS__COL_BLACK}" 'C')" \
        "${__BU_MODULE_INIT_MSG__DISP_INIT_GLOB_VARS_INFO__IS_VAR_DEF_IN_INITIALIZER__MAIN_MODULE_CONF}" "${BASH_SOURCE[0]}" \
        "${FUNCNAME[0]}" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}";
};


# -----------------------------
# Deep blue colored background.
# -----------------------------

____BU_MAIN_MOD_BG_COLOR_DEF_LINENO="$(( LINENO + 2 ))";

__BU_MAIN_COLOR_BG_BLUE="$(BU.Main.TextFormat.SetBGColor "${__BU_MAIN_COLOR_CODE_BLUE}" '--no-function')" || {
    printf "%s\n" "${__BU_MAIN_COLOR_CODE_RESET}";

    BU.Main.ModConfig.Colors.PrintVariableNameFailedToInitialize '__BU_MAIN_COLOR_BG_BLUE' "$(basename "${BASH_SOURCE[0]}")" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}" 'C';

    BU.ModuleInit.MsgAbort;

     BU.ModuleInit.AskPrintLog >&2 || { if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi };

    if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi
}; [ "${__BU_MODULE_INIT_MSG_ARRAY_MODE}" == '--mode-log-full' ] && {
    printf "%s" "${__BU_MAIN_COLOR_BG_BLUE}";

    BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_BLUE'  "${__BU_MAIN_COLOR_BG_BLUE}" 'CMD' \
        "$(BU.Main.ModConfig.Colors.BG.PrintColorVarNameCmdSub          "${__BU_MODULE_INIT_MSG__BU_MAIN_MODCONFIG__COLORS__COL_BLUE}" 'C')" \
        "${__BU_MODULE_INIT_MSG__DISP_INIT_GLOB_VARS_INFO__IS_VAR_DEF_IN_INITIALIZER__MAIN_MODULE_CONF}" "${BASH_SOURCE[0]}" \
        "${FUNCNAME[0]}" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}";
};


# -------

# -----------------------------
# Cyan blue colored background.
# -----------------------------

____BU_MAIN_MOD_BG_COLOR_DEF_LINENO="$(( LINENO + 2 ))";

__BU_MAIN_COLOR_BG_CYAN="$(BU.Main.TextFormat.SetBGColor "${__BU_MAIN_COLOR_CODE_CYAN}" '--no-function')" || {
    printf "%s\n" "${__BU_MAIN_COLOR_CODE_RESET}";

    BU.Main.ModConfig.Colors.PrintVariableNameFailedToInitialize '__BU_MAIN_COLOR_BG_CYAN' "$(basename "${BASH_SOURCE[0]}")" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}" 'C';

    BU.ModuleInit.MsgAbort;

    BU.ModuleInit.AskPrintLog >&2 || { if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi };

    if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi

}; [ "${__BU_MODULE_INIT_MSG_ARRAY_MODE}" == '--mode-log-full' ] && {
    printf "%s" "${__BU_MAIN_COLOR_BG_CYAN}";
    printf "%s" "${__BU_MAIN_COLOR_TXT_BLACK}";

    BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_CYAN'  "${__BU_MAIN_COLOR_BG_CYAN}" 'CMD' \
        "$(BU.Main.ModConfig.Colors.BG.PrintColorVarNameCmdSub          "${__BU_MODULE_INIT_MSG__BU_MAIN_MODCONFIG__COLORS__COL_CYAN}" 'C')" \
        "${__BU_MODULE_INIT_MSG__DISP_INIT_GLOB_VARS_INFO__IS_VAR_DEF_IN_INITIALIZER__MAIN_MODULE_CONF}" "${BASH_SOURCE[0]}" \
        "${FUNCNAME[0]}" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}";
};


# ---------------------------
# Fuchsia colored background.
# ---------------------------

____BU_MAIN_MOD_BG_COLOR_DEF_LINENO="$(( LINENO + 2 ))";

__BU_MAIN_COLOR_BG_FUCHSIA="$(BU.Main.TextFormat.SetBGColor "${__BU_MAIN_COLOR_CODE_FUCHSIA}" '--no-function')" || {
    printf "%s\n" "${__BU_MAIN_COLOR_CODE_RESET}";

    BU.Main.ModConfig.Colors.PrintVariableNameFailedToInitialize '__BU_MAIN_COLOR_BG_FUCHSIA' "$(basename "${BASH_SOURCE[0]}")" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}" 'C';

    BU.ModuleInit.MsgAbort;

    BU.ModuleInit.AskPrintLog >&2 || { if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi };

    if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi

}; [ "${__BU_MODULE_INIT_MSG_ARRAY_MODE}" == '--mode-log-full' ] && {
    printf "%s" "${__BU_MAIN_COLOR_BG_FUCHSIA}";

    BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_FUCHSIA'   "${__BU_MAIN_COLOR_BG_FUCHSIA}" 'CMD' \
        "$(BU.Main.ModConfig.Colors.BG.PrintColorVarNameCmdSub              "${__BU_MODULE_INIT_MSG__BU_MAIN_MODCONFIG__COLORS__COL_FUCHSIA}" 'C')" \
        "${__BU_MODULE_INIT_MSG__DISP_INIT_GLOB_VARS_INFO__IS_VAR_DEF_IN_INITIALIZER__MAIN_MODULE_CONF}" "${BASH_SOURCE[0]}" \
        "${FUNCNAME[0]}" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}";
};

# ------------------------
# Gray colored background.
# ------------------------

____BU_MAIN_MOD_BG_COLOR_DEF_LINENO="$(( LINENO + 2 ))";

__BU_MAIN_COLOR_BG_GRAY="$(BU.Main.TextFormat.SetBGColor "${__BU_MAIN_COLOR_CODE_GRAY}" '--no-function')" || {
    printf "%s\n" "${__BU_MAIN_COLOR_CODE_RESET}";

    BU.Main.ModConfig.Colors.PrintVariableNameFailedToInitialize '__BU_MAIN_COLOR_BG_GRAY' "$(basename "${BASH_SOURCE[0]}")" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}" 'C';

    BU.ModuleInit.MsgAbort;

    BU.ModuleInit.AskPrintLog >&2 || { if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi };

    if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi

}; [ "${__BU_MODULE_INIT_MSG_ARRAY_MODE}" == '--mode-log-full' ] && {
    printf "%s" "${__BU_MAIN_COLOR_BG_GRAY}";
    printf "%s" "${__BU_MAIN_COLOR_TXT_WHITE}";

    BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_GRAY'  "${__BU_MAIN_COLOR_BG_GRAY}" 'CMD' \
        "$(BU.Main.ModConfig.Colors.BG.PrintColorVarNameCmdSub          "${__BU_MODULE_INIT_MSG__BU_MAIN_MODCONFIG__COLORS__COL_GRAY}" 'C')" \
        "${__BU_MODULE_INIT_MSG__DISP_INIT_GLOB_VARS_INFO__IS_VAR_DEF_IN_INITIALIZER__MAIN_MODULE_CONF}" "${BASH_SOURCE[0]}" \
        "${FUNCNAME[0]}" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}";
};


# -------

# -------------------------------
# Light green colored background.
# -------------------------------

____BU_MAIN_MOD_BG_COLOR_DEF_LINENO="$(( LINENO + 2 ))";

__BU_MAIN_COLOR_BG_GREEN="$(BU.Main.TextFormat.SetBGColor "${__BU_MAIN_COLOR_CODE_GREEN}" '--no-function')" || {
    printf "%s\n" "${__BU_MAIN_COLOR_CODE_RESET}";

    BU.Main.ModConfig.Colors.PrintVariableNameFailedToInitialize '__BU_MAIN_COLOR_BG_GREEN' "$(basename "${BASH_SOURCE[0]}")" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}" 'C';

    BU.ModuleInit.MsgAbort;

    BU.ModuleInit.AskPrintLog >&2 || { if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi };

    if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi

}; [ "${__BU_MODULE_INIT_MSG_ARRAY_MODE}" == '--mode-log-full' ] && {
    printf "%s" "${__BU_MAIN_COLOR_BG_GREEN}";
    printf "%s" "${__BU_MAIN_COLOR_TXT_BLACK}";

    BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_GREEN' "${__BU_MAIN_COLOR_BG_GREEN}" 'CMD' \
        "$(BU.Main.ModConfig.Colors.BG.PrintColorVarNameCmdSub          "${__BU_MODULE_INIT_MSG__BU_MAIN_MODCONFIG__COLORS__COL_GREEN}" 'C')" \
        "${__BU_MODULE_INIT_MSG__DISP_INIT_GLOB_VARS_INFO__IS_VAR_DEF_IN_INITIALIZER__MAIN_MODULE_CONF}" "${BASH_SOURCE[0]}" \
        "${FUNCNAME[0]}" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}";
};


# ------------------------------
# Lime green colored background.
# ------------------------------

____BU_MAIN_MOD_BG_COLOR_DEF_LINENO="$(( LINENO + 2 ))";

__BU_MAIN_COLOR_BG_LIME="$(BU.Main.TextFormat.SetBGColor "${__BU_MAIN_COLOR_CODE_LIME}" '--no-function')" || {
    printf "%s\n" "${__BU_MAIN_COLOR_CODE_RESET}";

    BU.Main.ModConfig.Colors.PrintVariableNameFailedToInitialize '__BU_MAIN_COLOR_BG_LIME' "$(basename "${BASH_SOURCE[0]}")" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}" 'C';

    BU.ModuleInit.MsgAbort;

    BU.ModuleInit.AskPrintLog >&2 || { if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi };

    if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi

}; [ "${__BU_MODULE_INIT_MSG_ARRAY_MODE}" == '--mode-log-full' ] && {
    printf "%s" "${__BU_MAIN_COLOR_BG_LIME}";

    BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_LIME'  "${__BU_MAIN_COLOR_BG_LIME}" 'CMD' \
        "$(BU.Main.ModConfig.Colors.BG.PrintColorVarNameCmdSub          "${__BU_MODULE_INIT_MSG__BU_MAIN_MODCONFIG__COLORS__COL_LIME}" 'C')" \
        "${__BU_MODULE_INIT_MSG__DISP_INIT_GLOB_VARS_INFO__IS_VAR_DEF_IN_INITIALIZER__MAIN_MODULE_CONF}" "${BASH_SOURCE[0]}" \
        "${FUNCNAME[0]}" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}";
};


# --------------------------
# Marron colored background.
# --------------------------

____BU_MAIN_MOD_BG_COLOR_DEF_LINENO="$(( LINENO + 2 ))";

__BU_MAIN_COLOR_BG_MAROON="$(BU.Main.TextFormat.SetBGColor "${__BU_MAIN_COLOR_CODE_MAROON}" '--no-function')" || {
    printf "%s\n" "${__BU_MAIN_COLOR_CODE_RESET}";

    BU.Main.ModConfig.Colors.PrintVariableNameFailedToInitialize '__BU_MAIN_COLOR_BG_MAROON' "$(basename "${BASH_SOURCE[0]}")" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}" 'C';

    BU.ModuleInit.MsgAbort;

    BU.ModuleInit.AskPrintLog >&2 || { if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi };

    if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi

}; [ "${__BU_MODULE_INIT_MSG_ARRAY_MODE}" == '--mode-log-full' ] && {
    printf "%s" "${__BU_MAIN_COLOR_BG_MAROON}";
    printf "%s" "${__BU_MAIN_COLOR_TXT_WHITE}";

    BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_MAROON'    "${__BU_MAIN_COLOR_BG_MAROON}" 'CMD' \
        "$(BU.Main.ModConfig.Colors.BG.PrintColorVarNameCmdSub              "${__BU_MODULE_INIT_MSG__BU_MAIN_MODCONFIG__COLORS__COL_MAROON}" 'C')" \
        "${__BU_MODULE_INIT_MSG__DISP_INIT_GLOB_VARS_INFO__IS_VAR_DEF_IN_INITIALIZER__MAIN_MODULE_CONF}" "${BASH_SOURCE[0]}" \
        "${FUNCNAME[0]}" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}";
};


# -------

# -----------------------------
# Navy blue colored background.
# -----------------------------

____BU_MAIN_MOD_BG_COLOR_DEF_LINENO="$(( LINENO + 2 ))";

__BU_MAIN_COLOR_BG_NAVY="$(BU.Main.TextFormat.SetBGColor "${__BU_MAIN_COLOR_CODE_NAVY}" '--no-function')" || {
    printf "%s\n" "${__BU_MAIN_COLOR_CODE_RESET}";

    BU.Main.ModConfig.Colors.PrintVariableNameFailedToInitialize '__BU_MAIN_COLOR_BG_NAVY' "$(basename "${BASH_SOURCE[0]}")" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}" 'C';

    BU.ModuleInit.MsgAbort;

    BU.ModuleInit.AskPrintLog >&2 || { if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi };

    if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi

}; [ "${__BU_MODULE_INIT_MSG_ARRAY_MODE}" == '--mode-log-full' ] && {
    printf "%s" "${__BU_MAIN_COLOR_BG_NAVY}";
    printf "%s" "${__BU_MAIN_COLOR_TXT_WHITE}";

    BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_NAVY' "${__BU_MAIN_COLOR_BG_NAVY}" 'CMD' \
        "$(BU.Main.ModConfig.Colors.BG.PrintColorVarNameCmdSub          "${__BU_MODULE_INIT_MSG__BU_MAIN_MODCONFIG__COLORS__COL_NAVY}" 'C')" \
        "${__BU_MODULE_INIT_MSG__DISP_INIT_GLOB_VARS_INFO__IS_VAR_DEF_IN_INITIALIZER__MAIN_MODULE_CONF}" "${BASH_SOURCE[0]}" \
        "${FUNCNAME[0]}" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}";
};


# -------------------------------
# Green olive colored background.
# -------------------------------

____BU_MAIN_MOD_BG_COLOR_DEF_LINENO="$(( LINENO + 2 ))";

__BU_MAIN_COLOR_BG_OLIVE="$(BU.Main.TextFormat.SetBGColor "${__BU_MAIN_COLOR_CODE_OLIVE}" '--no-function')" || {
    printf "%s\n" "${__BU_MAIN_COLOR_CODE_RESET}";

    BU.Main.ModConfig.Colors.PrintVariableNameFailedToInitialize '__BU_MAIN_COLOR_BG_OLIVE' "$(basename "${BASH_SOURCE[0]}")" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}" 'C';

    BU.ModuleInit.MsgAbort;

    BU.ModuleInit.AskPrintLog >&2 || { if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi };

    if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi

}; [ "${__BU_MODULE_INIT_MSG_ARRAY_MODE}" == '--mode-log-full' ] && {
    printf "%s" "${__BU_MAIN_COLOR_BG_OLIVE}";

    BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_OLIVE' "${__BU_MAIN_COLOR_BG_OLIVE}" 'CMD' \
        "$(BU.Main.ModConfig.Colors.BG.PrintColorVarNameCmdSub          "${__BU_MODULE_INIT_MSG__BU_MAIN_MODCONFIG__COLORS__COL_OLIVE}" 'C')" \
        "${__BU_MODULE_INIT_MSG__DISP_INIT_GLOB_VARS_INFO__IS_VAR_DEF_IN_INITIALIZER__MAIN_MODULE_CONF}" "${BASH_SOURCE[0]}" \
        "${FUNCNAME[0]}" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}";
};

# --------------------------
# Orange colored background.
# --------------------------

____BU_MAIN_MOD_BG_COLOR_DEF_LINENO="$(( LINENO + 2 ))";

__BU_MAIN_COLOR_BG_ORANGE="$(BU.Main.TextFormat.SetBGColor "${__BU_MAIN_COLOR_CODE_ORANGE}" '--no-function')" || {
    printf "%s\n" "${__BU_MAIN_COLOR_CODE_RESET}";

    BU.Main.ModConfig.Colors.PrintVariableNameFailedToInitialize '__BU_MAIN_COLOR_BG_ORANGE' "$(basename "${BASH_SOURCE[0]}")" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}" 'C';

    BU.ModuleInit.MsgAbort;

    BU.ModuleInit.AskPrintLog >&2 || { if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi };

    if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi

}; [ "${__BU_MODULE_INIT_MSG_ARRAY_MODE}" == '--mode-log-full' ] && {
    printf "%s" "${__BU_MAIN_COLOR_BG_ORANGE}";

    BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_ORANGE'    "${__BU_MAIN_COLOR_BG_ORANGE}" 'CMD' \
        "$(BU.Main.ModConfig.Colors.BG.PrintColorVarNameCmdSub              "${__BU_MODULE_INIT_MSG__BU_MAIN_MODCONFIG__COLORS__COL_ORANGE}" 'C')" \
        "${__BU_MODULE_INIT_MSG__DISP_INIT_GLOB_VARS_INFO__IS_VAR_DEF_IN_INITIALIZER__MAIN_MODULE_CONF}" "${BASH_SOURCE[0]}" \
        "${FUNCNAME[0]}" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}";
};


# -------

# ------------------------
# Pink colored background.
# ------------------------

____BU_MAIN_MOD_BG_COLOR_DEF_LINENO="$(( LINENO + 2 ))";

__BU_MAIN_COLOR_BG_PINK="$(BU.Main.TextFormat.SetBGColor "${__BU_MAIN_COLOR_CODE_PINK}" '--no-function')" || {
    printf "%s\n" "${__BU_MAIN_COLOR_CODE_RESET}";

    BU.Main.ModConfig.Colors.PrintVariableNameFailedToInitialize '__BU_MAIN_COLOR_BG_PINK' "$(basename "${BASH_SOURCE[0]}")" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}" 'C';

    BU.ModuleInit.MsgAbort;

    BU.ModuleInit.AskPrintLog >&2 || { if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi };

    if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi

}; [ "${__BU_MODULE_INIT_MSG_ARRAY_MODE}" == '--mode-log-full' ] && {
    printf "%s" "${__BU_MAIN_COLOR_BG_PINK}";
    printf "%s" "${__BU_MAIN_COLOR_TXT_BLACK}";

    BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_PINK'  "${__BU_MAIN_COLOR_BG_PINK}" 'CMD' \
        "$(BU.Main.ModConfig.Colors.BG.PrintColorVarNameCmdSub          "${__BU_MODULE_INIT_MSG__BU_MAIN_MODCONFIG__COLORS__COL_PINK}" 'C')" \
        "${__BU_MODULE_INIT_MSG__DISP_INIT_GLOB_VARS_INFO__IS_VAR_DEF_IN_INITIALIZER__MAIN_MODULE_CONF}" "${BASH_SOURCE[0]}" \
        "${FUNCNAME[0]}" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}";
};

# --------------------------
# Purple colored background.
# --------------------------

____BU_MAIN_MOD_BG_COLOR_DEF_LINENO="$(( LINENO + 2 ))";

__BU_MAIN_COLOR_BG_PURPLE="$(BU.Main.TextFormat.SetBGColor "${__BU_MAIN_COLOR_CODE_PURPLE}" '--no-function')" || {
    printf "%s\n" "${__BU_MAIN_COLOR_CODE_RESET}";

    BU.Main.ModConfig.Colors.PrintVariableNameFailedToInitialize '__BU_MAIN_COLOR_BG_PURPLE' "$(basename "${BASH_SOURCE[0]}")" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}" 'C';

    BU.ModuleInit.MsgAbort;

    BU.ModuleInit.AskPrintLog >&2 || { if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi };

    if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi

}; [ "${__BU_MODULE_INIT_MSG_ARRAY_MODE}" == '--mode-log-full' ] && {
    printf "%s" "${__BU_MAIN_COLOR_BG_PURPLE}";

    BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_PURPLE'    "${__BU_MAIN_COLOR_BG_PURPLE}" 'CMD' \
        "$(BU.Main.ModConfig.Colors.BG.PrintColorVarNameCmdSub              "${__BU_MODULE_INIT_MSG__BU_MAIN_MODCONFIG__COLORS__COL_PURPLE}" 'C')" \
        "${__BU_MODULE_INIT_MSG__DISP_INIT_GLOB_VARS_INFO__IS_VAR_DEF_IN_INITIALIZER__MAIN_MODULE_CONF}" "${BASH_SOURCE[0]}" \
        "${FUNCNAME[0]}" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}";
};

# -----------------------------
# Light red colored background.
# -----------------------------

____BU_MAIN_MOD_BG_COLOR_DEF_LINENO="$(( LINENO + 2 ))";

__BU_MAIN_COLOR_BG_RED="$(BU.Main.TextFormat.SetBGColor "${__BU_MAIN_COLOR_CODE_RED}" '--no-function')" || {
    printf "%s\n" "${__BU_MAIN_COLOR_CODE_RESET}";

    BU.Main.ModConfig.Colors.PrintVariableNameFailedToInitialize '__BU_MAIN_COLOR_BG_RED' "$(basename "${BASH_SOURCE[0]}")" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}" 'C';

    BU.ModuleInit.MsgAbort;

    BU.ModuleInit.AskPrintLog >&2 || { if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi };

    if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi

}; [ "${__BU_MODULE_INIT_MSG_ARRAY_MODE}" == '--mode-log-full' ] && {
    printf "%s" "${__BU_MAIN_COLOR_BG_RED}";

    BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_RED'   "${__BU_MAIN_COLOR_BG_RED}" 'CMD' \
        "$(BU.Main.ModConfig.Colors.BG.PrintColorVarNameCmdSub          "${__BU_MODULE_INIT_MSG__BU_MAIN_MODCONFIG__COLORS__COL_RED}" 'C')" \
        "${__BU_MODULE_INIT_MSG__DISP_INIT_GLOB_VARS_INFO__IS_VAR_DEF_IN_INITIALIZER__MAIN_MODULE_CONF}" "${BASH_SOURCE[0]}" \
        "${FUNCNAME[0]}" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}";
};


# -------

# --------------------------
# Salmon colored background.
# --------------------------

____BU_MAIN_MOD_BG_COLOR_DEF_LINENO="$(( LINENO + 2 ))";

__BU_MAIN_COLOR_BG_SALMON="$(BU.Main.TextFormat.SetBGColor "${__BU_MAIN_COLOR_CODE_SALMON}" '--no-function')" || {
    printf "%s\n" "${__BU_MAIN_COLOR_CODE_RESET}";

    BU.Main.ModConfig.Colors.PrintVariableNameFailedToInitialize '__BU_MAIN_COLOR_BG_SALMON' "$(basename "${BASH_SOURCE[0]}")"   "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}" 'C';

    BU.ModuleInit.MsgAbort;  BU.ModuleInit.AskPrintLog >&2 || { if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi };

    if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi

}; [ "${__BU_MODULE_INIT_MSG_ARRAY_MODE}" == '--mode-log-full' ] && {
    printf "%s" "${__BU_MAIN_COLOR_BG_SALMON}";

    BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_SALMON'    "${__BU_MAIN_COLOR_BG_SALMON}" 'CMD' \
        "$(BU.Main.ModConfig.Colors.BG.PrintColorVarNameCmdSub              "${__BU_MODULE_INIT_MSG__BU_MAIN_MODCONFIG__COLORS__COL_SALMON}" 'C')" \
        "${__BU_MODULE_INIT_MSG__DISP_INIT_GLOB_VARS_INFO__IS_VAR_DEF_IN_INITIALIZER__MAIN_MODULE_CONF}" "${BASH_SOURCE[0]}" \
        "${FUNCNAME[0]}" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}";
};


# -------------------------------
# Silver gray colored background.
# -------------------------------

____BU_MAIN_MOD_BG_COLOR_DEF_LINENO="$(( LINENO + 2 ))";

__BU_MAIN_COLOR_BG_SILVER="$(BU.Main.TextFormat.SetBGColor "${__BU_MAIN_COLOR_CODE_SILVER}" '--no-function')" || {
    printf "%s\n" "${__BU_MAIN_COLOR_CODE_RESET}";

    BU.Main.ModConfig.Colors.PrintVariableNameFailedToInitialize '__BU_MAIN_COLOR_BG_SILVER' "$(basename "${BASH_SOURCE[0]}")" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}" 'C';

    BU.ModuleInit.MsgAbort;

    BU.ModuleInit.AskPrintLog >&2 || { if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi };

    if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi

}; [ "${__BU_MODULE_INIT_MSG_ARRAY_MODE}" == '--mode-log-full' ] && {
    printf "%s" "${__BU_MAIN_COLOR_BG_SILVER}";

    BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_SILVER'    "${__BU_MAIN_COLOR_BG_SILVER}" 'CMD' \
        "$(BU.Main.ModConfig.Colors.BG.PrintColorVarNameCmdSub              "${__BU_MODULE_INIT_MSG__BU_MAIN_MODCONFIG__COLORS__COL_GRAY}" 'C')" \
        "${__BU_MODULE_INIT_MSG__DISP_INIT_GLOB_VARS_INFO__IS_VAR_DEF_IN_INITIALIZER__MAIN_MODULE_CONF}" "${BASH_SOURCE[0]}" \
        "${FUNCNAME[0]}" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}";
};


# -----------------------------
# Brown tan colored background.
# -----------------------------

____BU_MAIN_MOD_BG_COLOR_DEF_LINENO="$(( LINENO + 2 ))";

__BU_MAIN_COLOR_BG_TAN="$(BU.Main.TextFormat.SetBGColor "${__BU_MAIN_COLOR_CODE_TAN}" '--no-function')" || {
    printf "%s\n" "${__BU_MAIN_COLOR_CODE_RESET}";

    BU.Main.ModConfig.Colors.PrintVariableNameFailedToInitialize '__BU_MAIN_COLOR_BG_TAN' "$(basename "${BASH_SOURCE[0]}")" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}" 'C';

    BU.ModuleInit.MsgAbort;

    BU.ModuleInit.AskPrintLog >&2 || { if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi };

    if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi

}; [ "${__BU_MODULE_INIT_MSG_ARRAY_MODE}" == '--mode-log-full' ] && {
    printf "%s" "${__BU_MAIN_COLOR_BG_TAN}";

    BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_TAN'   "${__BU_MAIN_COLOR_BG_TAN}" 'CMD' \
        "$(BU.Main.ModConfig.Colors.BG.PrintColorVarNameCmdSub          "${__BU_MODULE_INIT_MSG__BU_MAIN_MODCONFIG__COLORS__COL_TAN}" 'C')" \
        "${__BU_MODULE_INIT_MSG__DISP_INIT_GLOB_VARS_INFO__IS_VAR_DEF_IN_INITIALIZER__MAIN_MODULE_CONF}" "${BASH_SOURCE[0]}" \
        "${FUNCNAME[0]}" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}";
};


# -------

# ------------------------
# Teal colored background.
# ------------------------

____BU_MAIN_MOD_BG_COLOR_DEF_LINENO="$(( LINENO + 2 ))";

__BU_MAIN_COLOR_BG_TEAL="$(BU.Main.TextFormat.SetBGColor "${__BU_MAIN_COLOR_CODE_TEAL}" '--no-function')" || {
    printf "%s\n" "${__BU_MAIN_COLOR_CODE_RESET}";

    BU.Main.ModConfig.Colors.PrintVariableNameFailedToInitialize '__BU_MAIN_COLOR_BG_TEAL' "$(basename "${BASH_SOURCE[0]}")" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}" 'C';

    BU.ModuleInit.MsgAbort;  BU.ModuleInit.AskPrintLog >&2 || { if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi };

    if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi

}; [ "${__BU_MODULE_INIT_MSG_ARRAY_MODE}" == '--mode-log-full' ] && {
    printf "%s" "${__BU_MAIN_COLOR_BG_TEAL}";

    BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_TEAL'  "${__BU_MAIN_COLOR_BG_TEAL}" 'CMD' \
        "$(BU.Main.ModConfig.Colors.BG.PrintColorVarNameCmdSub          "${__BU_MODULE_INIT_MSG__BU_MAIN_MODCONFIG__COLORS__COL_TEAL}" 'C')" \
        "${__BU_MODULE_INIT_MSG__DISP_INIT_GLOB_VARS_INFO__IS_VAR_DEF_IN_INITIALIZER__MAIN_MODULE_CONF}" "${BASH_SOURCE[0]}" \
        "${FUNCNAME[0]}" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}";
};


# -----------------------------
# Turquoise colored background.
# -----------------------------

____BU_MAIN_MOD_BG_COLOR_DEF_LINENO="$(( LINENO + 2 ))";

__BU_MAIN_COLOR_BG_TURQUOISE="$(BU.Main.TextFormat.SetBGColor "${__BU_MAIN_COLOR_CODE_TURQUOISE}" '--no-function')" || {
    printf "%s\n" "${__BU_MAIN_COLOR_CODE_RESET}";

    BU.Main.ModConfig.Colors.PrintVariableNameFailedToInitialize '__BU_MAIN_COLOR_BG_TURQUOISE' "$(basename "${BASH_SOURCE[0]}")" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}" 'C';

    BU.ModuleInit.MsgAbort;

    BU.ModuleInit.AskPrintLog >&2 || { if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi };

    if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi

}; [ "${__BU_MODULE_INIT_MSG_ARRAY_MODE}" == '--mode-log-full' ] && {
    printf "%s" "${__BU_MAIN_COLOR_BG_TURQUOISE}";    printf "%s"     "${__BU_MAIN_COLOR_TXT_BLACK}";
     BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_TURQUOISE'    "${__BU_MAIN_COLOR_BG_TURQUOISE}" 'CMD' \
        "$(BU.Main.ModConfig.Colors.BG.PrintColorVarNameCmdSub                  "${__BU_MODULE_INIT_MSG__BU_MAIN_MODCONFIG__COLORS__COL_TURQUOISE}" 'C')" \
        "${__BU_MODULE_INIT_MSG__DISP_INIT_GLOB_VARS_INFO__IS_VAR_DEF_IN_INITIALIZER__MAIN_MODULE_CONF}" "${BASH_SOURCE[0]}" \
        "${FUNCNAME[0]}" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}";
};


# --------------------------
# Violet colored background.
# --------------------------

____BU_MAIN_MOD_BG_COLOR_DEF_LINENO="$(( LINENO + 2 ))";

__BU_MAIN_COLOR_BG_VIOLET="$(BU.Main.TextFormat.SetBGColor "${__BU_MAIN_COLOR_CODE_VIOLET}" '--no-function')" || {
    printf "%s\n" "${__BU_MAIN_COLOR_CODE_RESET}";

    BU.Main.ModConfig.Colors.PrintVariableNameFailedToInitialize '__BU_MAIN_COLOR_BG_VIOLET' "$(basename "${BASH_SOURCE[0]}")" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}" 'C';

    BU.ModuleInit.MsgAbort;

    BU.ModuleInit.AskPrintLog >&2 || { if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi };

    if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi

}; [ "${__BU_MODULE_INIT_MSG_ARRAY_MODE}" == '--mode-log-full' ] && {
    printf "%s" "${__BU_MAIN_COLOR_BG_VIOLET}";

    BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_VIOLET'    "${__BU_MAIN_COLOR_BG_VIOLET}" 'CMD' \
        "$(BU.Main.ModConfig.Colors.BG.PrintColorVarNameCmdSub              "${__BU_MODULE_INIT_MSG__BU_MAIN_MODCONFIG__COLORS__COL_VIOLET}" 'C')" \
        "${__BU_MODULE_INIT_MSG__DISP_INIT_GLOB_VARS_INFO__IS_VAR_DEF_IN_INITIALIZER__MAIN_MODULE_CONF}" "${BASH_SOURCE[0]}" \
        "${FUNCNAME[0]}" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}";
};


# -------

# -------------------------
# White colored background.
# -------------------------

____BU_MAIN_MOD_BG_COLOR_DEF_LINENO="$(( LINENO + 2 ))";

__BU_MAIN_COLOR_BG_WHITE="$(BU.Main.TextFormat.SetBGColor "${__BU_MAIN_COLOR_CODE_WHITE}" '--no-function')" || {
    printf "%s\n" "${__BU_MAIN_COLOR_CODE_RESET}";

    BU.Main.ModConfig.Colors.PrintVariableNameFailedToInitialize '__BU_MAIN_COLOR_BG_WHITE' "$(basename "${BASH_SOURCE[0]}")" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}" 'C';

    BU.ModuleInit.MsgAbort;

    BU.ModuleInit.AskPrintLog >&2 || { if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi };

    if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi

}; [ "${__BU_MODULE_INIT_MSG_ARRAY_MODE}" == '--mode-log-full' ] && {
    printf "%s" "${__BU_MAIN_COLOR_BG_WHITE}";
    printf "%s" "${__BU_MAIN_COLOR_TXT_BLACK}";

    BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_WHITE' "${__BU_MAIN_COLOR_BG_WHITE}" 'CMD' \
        "$(BU.Main.ModConfig.Colors.BG.PrintColorVarNameCmdSub          "${__BU_MODULE_INIT_MSG__BU_MAIN_MODCONFIG__COLORS__COL_WHITE}" 'C')" \
        "${__BU_MODULE_INIT_MSG__DISP_INIT_GLOB_VARS_INFO__IS_VAR_DEF_IN_INITIALIZER__MAIN_MODULE_CONF}" "${BASH_SOURCE[0]}" \
        "${FUNCNAME[0]}" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}";
};


# --------------------------------
# Light yellow colored background.
# --------------------------------

____BU_MAIN_MOD_BG_COLOR_DEF_LINENO="$(( LINENO + 2 ))";

__BU_MAIN_COLOR_BG_YELLOW="$(BU.Main.TextFormat.SetBGColor "${__BU_MAIN_COLOR_CODE_YELLOW}" '--no-function')" || {
    printf "%s\n" "${__BU_MAIN_COLOR_CODE_RESET}";

    BU.Main.ModConfig.Colors.PrintVariableNameFailedToInitialize '__BU_MAIN_COLOR_BG_YELLOW' "$(basename "${BASH_SOURCE[0]}")" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}" 'C';

    BU.ModuleInit.MsgAbort;

    BU.ModuleInit.AskPrintLog >&2 || { if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi };

    if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi

}; [ "${__BU_MODULE_INIT_MSG_ARRAY_MODE}" == '--mode-log-full' ] && {
    printf "%s" "${__BU_MAIN_COLOR_BG_YELLOW}";

    BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_YELLOW'    "${__BU_MAIN_COLOR_BG_YELLOW}" 'CMD' \
        "$(BU.Main.ModConfig.Colors.BG.PrintColorVarNameCmdSub              "${__BU_MODULE_INIT_MSG__BU_MAIN_MODCONFIG__COLORS__COL_YELLOW}" 'C')" \
        "${__BU_MODULE_INIT_MSG__DISP_INIT_GLOB_VARS_INFO__IS_VAR_DEF_IN_INITIALIZER__MAIN_MODULE_CONF}" "${BASH_SOURCE[0]}" \
        "${FUNCNAME[0]}" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}";
};

printf "%s" "${__BU_MAIN_COLOR_TXT_RESET}";

## ----------------------------------------------

## SPECIFIC BACKGROUND COLORS ENCODING

# Note : You can check their default color in the "Colors.conf" configuration file.

## ---------------------------------------------------------------------------
# Background color display context : highlighting the name of a system command
## ---------------------------------------------------------------------------

____BU_MAIN_MOD_BG_COLOR_DEF_LINENO="$(( LINENO + 2 ))";

__BU_MAIN_COLOR_BG_CMD="$(BU.Main.TextFormat.SetBGColor "${__BU_MAIN_COLOR_CODE_CMD}" '--no-function')" || {
    printf "%s\n" "${__BU_MAIN_COLOR_CODE_RESET}";

    BU.Main.ModConfig.Colors.PrintVariableNameFailedToInitialize '__BU_MAIN_COLOR_BG_CMD' "$(basename "${BASH_SOURCE[0]}")" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}" 'A';

    BU.ModuleInit.MsgAbort;

    BU.ModuleInit.AskPrintLog >&2 || { if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi };

    if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi

}; [ "${__BU_MODULE_INIT_MSG_ARRAY_MODE}" == '--mode-log-full' ] && {
    printf "%s" "${__BU_MAIN_COLOR_BG_CMD}";

    BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_CMD' "${__BU_MAIN_COLOR_BG_CMD}" 'CMD' \
    "$(BU.Main.ModConfig.Colors.BG.PrintColorVarNameCmdSub "${__BU_MODULE_INIT_MSG__BU_MAIN_MODCONFIG__COLORS__ACT_CMD}" 'A')" \
    "${__BU_MODULE_INIT_MSG__DISP_INIT_GLOB_VARS_INFO__IS_VAR_DEF_IN_INITIALIZER__MAIN_MODULE_CONF}" \
    "${BASH_SOURCE[0]}" "${FUNCNAME[0]}" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}";
}


## ---------------------------------------------------------------
# Background color display context : highlighting an error message
## ---------------------------------------------------------------

____BU_MAIN_MOD_BG_COLOR_DEF_LINENO="$(( LINENO + 2 ))";

__BU_MAIN_COLOR_BG_ERROR="$(BU.Main.TextFormat.SetBGColor "${__BU_MAIN_COLOR_CODE_ERROR}" '--no-function')" || {
    printf "%s\n" "${__BU_MAIN_COLOR_CODE_RESET}";

    BU.Main.ModConfig.Colors.PrintVariableNameFailedToInitialize '__BU_MAIN_COLOR_BG_ERROR' "$(basename "${BASH_SOURCE[0]}")" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}" 'A';

    BU.ModuleInit.MsgAbort;

    BU.ModuleInit.AskPrintLog >&2 || { if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi };

    if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi

}; [ "${__BU_MODULE_INIT_MSG_ARRAY_MODE}" == '--mode-log-full' ] && {
    printf "%s" "${__BU_MAIN_COLOR_BG_ERROR}";

    BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_ERROR' "${__BU_MAIN_COLOR_BG_ERROR}" 'CMD' \
    "$(BU.Main.ModConfig.Colors.BG.PrintColorVarNameCmdSub "${__BU_MODULE_INIT_MSG__BU_MAIN_MODCONFIG__COLORS__ACT_ERROR}" 'A')" \
    "${__BU_MODULE_INIT_MSG__DISP_INIT_GLOB_VARS_INFO__IS_VAR_DEF_IN_INITIALIZER__MAIN_MODULE_CONF}" \
    "${BASH_SOURCE[0]}" "${FUNCNAME[0]}" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}";
}


## --------------------------------------------------------------
# Background color display context : highlighting a function name
## --------------------------------------------------------------

____BU_MAIN_MOD_BG_COLOR_DEF_LINENO="$(( LINENO + 2 ))";

__BU_MAIN_COLOR_BG_FUNCTION="$(BU.Main.TextFormat.SetBGColor "${__BU_MAIN_COLOR_CODE_FUNCTION}" '--no-function')" || {
    printf "%s\n" "${__BU_MAIN_COLOR_CODE_RESET}";

    BU.Main.ModConfig.Colors.PrintVariableNameFailedToInitialize '__BU_MAIN_COLOR_BG_FUNCTION' "$(basename "${BASH_SOURCE[0]}")" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}" 'A';

    BU.ModuleInit.MsgAbort;

    BU.ModuleInit.AskPrintLog >&2 || { if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi };

    if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi

}; [ "${__BU_MODULE_INIT_MSG_ARRAY_MODE}" == '--mode-log-full' ] && {
    printf "%s" "${__BU_MAIN_COLOR_BG_FUNCTION}";

    BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_FUNCTION' "${__BU_MAIN_COLOR_BG_FUNCTION}" 'CMD' \
        "$(BU.Main.ModConfig.Colors.BG.PrintColorVarNameCmdSub "${__BU_MODULE_INIT_MSG__BU_MAIN_MODCONFIG__COLORS__ACT_FUNCTION}" 'A')" \
        "${__BU_MODULE_INIT_MSG__DISP_INIT_GLOB_VARS_INFO__IS_VAR_DEF_IN_INITIALIZER__MAIN_MODULE_CONF}" \
        "${BASH_SOURCE[0]}" "${FUNCNAME[0]}" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}";
}


## --------------------------------------------------------------------------
# Background color display context : highlighting important part(s) of a text
## --------------------------------------------------------------------------

# Setting a readable text color for this background color.
[ "${__BU_MODULE_INIT_MSG_ARRAY_MODE}" == '--mode-log-full' ] && printf "%s" "${__BU_MAIN_COLOR_TXT_BLACK}";

____BU_MAIN_MOD_BG_COLOR_DEF_LINENO="$(( LINENO + 2 ))";

__BU_MAIN_COLOR_BG_HIGHLIGHT="$(BU.Main.TextFormat.SetBGColor "${__BU_MAIN_COLOR_CODE_HIGHLIGHT}" '--no-function')" || {
    printf "%s\n" "${__BU_MAIN_COLOR_CODE_RESET}";

    BU.Main.ModConfig.Colors.PrintVariableNameFailedToInitialize '__BU_MAIN_COLOR_BG_HIGHLIGHT' "$(basename "${BASH_SOURCE[0]}")" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}" 'A';

    BU.ModuleInit.MsgAbort;

    BU.ModuleInit.AskPrintLog >&2 || { if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi };

    if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi

}; [ "${__BU_MODULE_INIT_MSG_ARRAY_MODE}" == '--mode-log-full' ] && {
    printf "%s" "${__BU_MAIN_COLOR_BG_HIGHLIGHT}";

    BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_HIGHLIGHT' "${__BU_MAIN_COLOR_BG_HIGHLIGHT}" 'CMD' \
        "$(BU.Main.ModConfig.Colors.BG.PrintColorVarNameCmdSub "${__BU_MODULE_INIT_MSG__BU_MAIN_MODCONFIG__COLORS__ACT_HIGHLIGHT}" 'A')" \
        "${__BU_MODULE_INIT_MSG__DISP_INIT_GLOB_VARS_INFO__IS_VAR_DEF_IN_INITIALIZER__MAIN_MODULE_CONF}" \
        "${BASH_SOURCE[0]}" "${FUNCNAME[0]}" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}";
}


## -----------------------------------------------------------------
# Background color display context : highlighting a new step message
## -----------------------------------------------------------------

# Setting a readable text color for this background color.
[ "${__BU_MODULE_INIT_MSG_ARRAY_MODE}" == '--mode-log-full' ] && printf "%s" "${__BU_MAIN_COLOR_TXT_WHITE}";

____BU_MAIN_MOD_BG_COLOR_DEF_LINENO="$(( LINENO + 2 ))";

__BU_MAIN_COLOR_BG_NEWSTEP="$(BU.Main.TextFormat.SetBGColor "${__BU_MAIN_COLOR_CODE_NEWSTEP}" '--no-function')" || {

    printf "%s\n" "${__BU_MAIN_COLOR_CODE_RESET}";

    BU.Main.ModConfig.Colors.PrintVariableNameFailedToInitialize '__BU_MAIN_COLOR_BG_NEWSTEP' "$(basename "${BASH_SOURCE[0]}")" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}" 'A';

    BU.ModuleInit.MsgAbort;

    BU.ModuleInit.AskPrintLog >&2 || { if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi };

    if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi

}; [ "${__BU_MODULE_INIT_MSG_ARRAY_MODE}" == '--mode-log-full' ] && {
    printf "%s" "${__BU_MAIN_COLOR_BG_NEWSTEP}";

    BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_NEWSTEP' "${__BU_MAIN_COLOR_BG_NEWSTEP}" 'CMD' \
        "$(BU.Main.ModConfig.Colors.BG.PrintColorVarNameCmdSub "${__BU_MODULE_INIT_MSG__BU_MAIN_MODCONFIG__COLORS__ACT_NEWSTEP}" 'A')" \
        "${__BU_MODULE_INIT_MSG__DISP_INIT_GLOB_VARS_INFO__IS_VAR_DEF_IN_INITIALIZER__MAIN_MODULE_CONF}" \
        "${BASH_SOURCE[0]}" "${FUNCNAME[0]}" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}";
}


## ---------------------------------------------------------------------------
# Background color display context : highlighting a path to a file or a folder
## ---------------------------------------------------------------------------

# Setting a readable text color for this background color.
[ "${__BU_MODULE_INIT_MSG_ARRAY_MODE}" == '--mode-log-full' ] && printf "%s" "${__BU_MAIN_COLOR_TXT_BLACK}";

____BU_MAIN_MOD_BG_COLOR_DEF_LINENO="$(( LINENO + 2 ))";

__BU_MAIN_COLOR_BG_PATH="$(BU.Main.TextFormat.SetBGColor "${__BU_MAIN_COLOR_CODE_PATH}" '--no-function')" || {

    printf "%s\n" "${__BU_MAIN_COLOR_CODE_RESET}";

    BU.Main.ModConfig.Colors.PrintVariableNameFailedToInitialize '__BU_MAIN_COLOR_BG_PATH' "$(basename "${BASH_SOURCE[0]}")" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}" 'A';

    BU.ModuleInit.MsgAbort; BU.ModuleInit.AskPrintLog >&2 || { if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi };

    if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi

}; [ "${__BU_MODULE_INIT_MSG_ARRAY_MODE}" == '--mode-log-full' ] && {
    printf "%s" "${__BU_MAIN_COLOR_BG_PATH}";

    BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_PATH' "${__BU_MAIN_COLOR_BG_PATH}" 'CMD' \
        "$(BU.Main.ModConfig.Colors.BG.PrintColorVarNameCmdSub "${__BU_MODULE_INIT_MSG__BU_MAIN_MODCONFIG__COLORS__ACT_PATH}" 'A')" \
        "${__BU_MODULE_INIT_MSG__DISP_INIT_GLOB_VARS_INFO__IS_VAR_DEF_IN_INITIALIZER__MAIN_MODULE_CONF}" \
        "${BASH_SOURCE[0]}" "${FUNCNAME[0]}" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}";
}


## ----------------------------------------------------------------
# Background color display context : highlighting a success message
## ----------------------------------------------------------------

____BU_MAIN_MOD_BG_COLOR_DEF_LINENO="$(( LINENO + 2 ))";

__BU_MAIN_COLOR_BG_SUCCESS="$(BU.Main.TextFormat.SetBGColor "${__BU_MAIN_COLOR_CODE_SUCCESS}" '--no-function')" || {
    printf "%s\n" "${__BU_MAIN_COLOR_CODE_RESET}";

    BU.Main.ModConfig.Colors.PrintVariableNameFailedToInitialize '__BU_MAIN_COLOR_BG_SUCCESS' "$(basename "${BASH_SOURCE[0]}")" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}" 'A';

    BU.ModuleInit.MsgAbort;

    BU.ModuleInit.AskPrintLog >&2 || { if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi };

    if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi

}; [ "${__BU_MODULE_INIT_MSG_ARRAY_MODE}" == '--mode-log-full' ] && {
    printf "%s" "${__BU_MAIN_COLOR_BG_SUCCESS}";

    BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_SUCCESS' "${__BU_MAIN_COLOR_BG_SUCCESS}" 'CMD' \
        "$(BU.Main.ModConfig.Colors.BG.PrintColorVarNameCmdSub "${__BU_MODULE_INIT_MSG__BU_MAIN_MODCONFIG__COLORS__ACT_SUCCESS}" 'A')" \
        "${__BU_MODULE_INIT_MSG__DISP_INIT_GLOB_VARS_INFO__IS_VAR_DEF_IN_INITIALIZER__MAIN_MODULE_CONF}" \
        "${BASH_SOURCE[0]}" "${FUNCNAME[0]}" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}";
}


## -------------------------------------------------------------------------------------------------
# Background color display context : highlighting the name of a variable, a parameter or an argument
## -------------------------------------------------------------------------------------------------

# Setting a readable text color for this background color.
[ "${__BU_MODULE_INIT_MSG_ARRAY_MODE}" == '--mode-log-full' ] && printf "%s" "${__BU_MAIN_COLOR_TXT_WHITE}";

____BU_MAIN_MOD_BG_COLOR_DEF_LINENO="$(( LINENO + 2 ))";

__BU_MAIN_COLOR_BG_VAR="$(BU.Main.TextFormat.SetBGColor "${__BU_MAIN_COLOR_CODE_VAR}" '--no-function')" || {
    printf "%s\n" "${__BU_MAIN_COLOR_CODE_RESET}";

    BU.Main.ModConfig.Colors.PrintVariableNameFailedToInitialize '__BU_MAIN_COLOR_BG_VAR' "$(basename "${BASH_SOURCE[0]}")" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}" 'A';

    BU.ModuleInit.MsgAbort;

    BU.ModuleInit.AskPrintLog >&2 || { if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi };

    if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi

}; [ "${__BU_MODULE_INIT_MSG_ARRAY_MODE}" == '--mode-log-full' ] && {
    printf "%s" "${__BU_MAIN_COLOR_BG_VAR}";

    BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_VAR' "${__BU_MAIN_COLOR_BG_VAR}" 'CMD' \
        "$(BU.Main.ModConfig.Colors.BG.PrintColorVarNameCmdSub "${__BU_MODULE_INIT_MSG__BU_MAIN_MODCONFIG__COLORS__ACT_VAR}" 'A')" \
        "${__BU_MODULE_INIT_MSG__DISP_INIT_GLOB_VARS_INFO__IS_VAR_DEF_IN_INITIALIZER__MAIN_MODULE_CONF}" \
        "${BASH_SOURCE[0]}" "${FUNCNAME[0]}" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}";
}


## ----------------------------------------------------------------
# Background color display context : highlighting a warning message
## ----------------------------------------------------------------

# Setting a readable text color for this background color.
[ "${__BU_MODULE_INIT_MSG_ARRAY_MODE}" == '--mode-log-full' ] && printf "%s" "${__BU_MAIN_COLOR_TXT_BLACK}";

____BU_MAIN_MOD_BG_COLOR_DEF_LINENO="$(( LINENO + 2 ))";

__BU_MAIN_COLOR_BG_WARNING="$(BU.Main.TextFormat.SetBGColor "${__BU_MAIN_COLOR_CODE_WARNING}" '--no-function')" || {
    printf "%s\n" "${__BU_MAIN_COLOR_CODE_RESET}";

    BU.Main.ModConfig.Colors.PrintVariableNameFailedToInitialize '__BU_MAIN_COLOR_BG_WARNING' "$(basename "${BASH_SOURCE[0]}")" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}" 'A';

    BU.ModuleInit.MsgAbort;

    BU.ModuleInit.AskPrintLog >&2 || { if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi };

    if BU.ModuleInit.IsInScript; then BU.ModuleInit.Exit 1; else return 1; fi

}; [ "${__BU_MODULE_INIT_MSG_ARRAY_MODE}" == '--mode-log-full' ] && {
    printf "%s" "${__BU_MAIN_COLOR_BG_WARNING}";

    BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_WARNING' "${__BU_MAIN_COLOR_BG_WARNING}" 'CMD' \
        "$(BU.Main.ModConfig.Colors.BG.PrintColorVarNameCmdSub "${__BU_MODULE_INIT_MSG__BU_MAIN_MODCONFIG__COLORS__ACT_WARNING}" 'A')" \
        "${__BU_MODULE_INIT_MSG__DISP_INIT_GLOB_VARS_INFO__IS_VAR_DEF_IN_INITIALIZER__MAIN_MODULE_CONF}" \
        "${BASH_SOURCE[0]}" "${FUNCNAME[0]}" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}";
}


## ----------------------------------------------------------------------
# Resetting the text's background color to terminal's default text color.
## ----------------------------------------------------------------------

____BU_MAIN_MOD_BG_COLOR_DEF_LINENO="$(( LINENO + 2 ))";

__BU_MAIN_COLOR_BG_RESET="${__BU_MAIN_COLOR_CODE_RESET}";

[ "${__BU_MODULE_INIT_MSG_ARRAY_MODE}" == '--mode-log-full' ] && {
    printf "%s" "${__BU_MAIN_COLOR_BG_RESET}";

    BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_RESET' "${__BU_MAIN_COLOR_BG_RESET}" 'CMD' \
        "${__BU_MODULE_INIT_MSG__BU_MAIN_MODCONFIG__COLORS__ACT_RESET}" "${__BU_MODULE_INIT_MSG__DISP_INIT_GLOB_VARS_INFO__IS_VAR_DEF_IN_INITIALIZER__MAIN_MODULE_CONF}" \
        "${BASH_SOURCE[0]}" "${FUNCNAME[0]}" "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}";
}


# Deleting the "${____BU_MAIN_MOD_BG_COLOR_DEF_LINENO}" variable, since its presence is not useful anymore.
unset ____BU_MAIN_MOD_BG_COLOR_DEF_LINENO;

## ----------------------------------------------