#!/usr/bin/env bash

# Disabling the SC2034 warning from Shellcheck (SC2034: <Variable name> appears unused. Verify use (or export if used externally)), because of the huge number of global variables declared in the configuration files, but only used in the library files.
# shellcheck disable=SC2034

# This configuration file stores color-related global variables.

# ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; #

######################################## DEFINING VARIABLES #######################################

#### DEFINING THE NEEDED RESOURCES

## FUNCTIONS

# Writing the text zone's background color into a file, to be processed by any function which needs to know what is the current color.
function BU::Main::ModConfig::Colors::SetBGColor()
{
	#**** Parameters ****
	# $1 --> Color code

	#**** Code ****
    # If the script is allowed to format text.
    if BU::Main::Status::CheckStatAllowFormatting; then
        if command -v tput &> /dev/null; then
            tput setab "$1" || { echo -ne "\e[" && return 0; }

            # Checking if the "bgcolors.tmp" (background color) file exists.
            if ! BU::Main::Checkings::CheckProjectRelatedFile "$__BU_MAIN_PROJECT_COLOR_BG_CODE_FILE_PARENT" "$__BU_MAIN_PROJECT_COLOR_BG_CODE_FILE_NAME" "f"; then
                BU::Main::Errors::HandleSmallErrors 'E' "Unable to create the $(BU::Decho "$__BU_MAIN_PROJECT_COLOR_TEXT_CODE_FILE_PATH") file" 'E' 'CPLS'
            fi

            # Redirecting the background's color code in its dedicated temporary file.
            echo "$1" > "$__BU_MAIN_PROJECT_COLOR_BG_CODE_FILE_PATH";

            [ "$?" -ne 0 ] && {
                echo -e >&2; echo -e "The $(BU::Main::Checkings::CheckFilePathExists "$__BU_MAIN_PROJECT_COLOR_BG_CODE_FILE_PATH") (bgcolors.tmp) file doesn't exists" >&2; echo -e >&2;

                exit 1;
            }
        else
            echo -ne "\e["; return 0;
        fi
    else
        return 1;
    fi
}

# Writing the text's color code into a file, to be processed by any function which needs to know what is the current text color.
function BU::Main::ModConfig::Colors::SetTextColor()
{
	#**** Parameters ****
	# $1 --> Color code

	#**** Code ****
    # If the script is allowed to format text.
	if BU::Main::Status::CheckStatAllowFormatting; then
        if command -v tput &> /dev/null; then
            tput setaf "$1" || { echo -ne "\e[38;5;$1m" && return 0; }

            # Checking if the "fgcolors.tmp" (foreground color) file exists.
            if ! BU::Main::Checkings::CheckProjectRelatedFile "$__BU_MAIN_PROJECT_COLOR_TEXT_CODE_FILE_PARENT" "$__BU_MAIN_PROJECT_COLOR_TEXT_CODE_FILE_NAME" "f"; then
                BU::Main::Errors::HandleSmallErrors 'E' "Unable to create the $(BU::Decho "$__BU_MAIN_PROJECT_COLOR_TEXT_CODE_FILE_PATH") file" 'E' 'CPLS'
            fi

            # Redirecting the text's color code in its dedicated temporary file.
            echo "$1" > "$__BU_MAIN_PROJECT_COLOR_TEXT_CODE_FILE_PATH";

            [ "$?" -ne 0 ] && {
                echo -e >&2; echo -e "The $(BU::Main::Checkings::CheckFilePathExists "$__BU_MAIN_PROJECT_COLOR_TEXT_CODE_FILE_PATH") (fgcolors.tmp) file doesn't exists" >&2; echo -e >&2;

                exit 1;
            }
        else
            echo -ne "\e[38;5;$1m"; return 0;
        fi
    else
        return 1;
    fi
}

# Writing the command substitution text for the text coloration.

# Don't call the "BU::DechoHighlightFunction()" function to color the function name, it must stay perfectly visible on every colors, and the default,
# and the "$__BU_MAIN_STAT_DECHO" function's value is still set as its default value (in order to avoid bugs during the main module's initialization) : forbid
function BU::Main::ModConfig::Colors::PrintColorTextVarsNameSubsCmd() { printf "This command substitution executes the $(BU::DechoHighlightFunction "BU::Main::ModConfig::Colors::SetTextColor") function in order to color the text with the defined « %s » color's code" "$1"; }

# Writing the command substitution text for the background coloration

# Don't call the "BU::DechoHighlightFunction()" function to color the function name, it must stay perfectly visible on every colors, and the default,
# and the "$__BU_MAIN_STAT_DECHO" function's value is still set as its default value (in order to avoid bugs during the main module's initialization) : forbid
function BU::Main::ModConfig::Colors::PrintColorBGVarsNameSubsCmd() { printf "This command substitution executes the « BU::Main::ModConfig::Colors::SetBGColor() » function in order to color the text's background with the defined « %s » color's code" "$1"; }


# -----------------------------------------------



# /////////////////////////////////////////////////////////////////////////////////////////////// #

#### COLOR ENCODING

## COLOR CODES FOR TEXT ENCODING (SYSTEM)

__BU_MAIN_COLOR_CODE_BLACK='0';
__BU_MAIN_COLOR_CODE_MAROON='1';
__BU_MAIN_COLOR_CODE_GREEN='2';
__BU_MAIN_COLOR_CODE_OLIVE='3';

__BU_MAIN_COLOR_CODE_NAVY='4';
__BU_MAIN_COLOR_CODE_PURPLE='5';
__BU_MAIN_COLOR_CODE_TEAL='6';
__BU_MAIN_COLOR_CODE_SILVER='7';

__BU_MAIN_COLOR_CODE_GRAY="8";
__BU_MAIN_COLOR_CODE_RED='9';
__BU_MAIN_COLOR_CODE_LIME='10';
__BU_MAIN_COLOR_CODE_YELLOW='11';

__BU_MAIN_COLOR_CODE_BLUE='12';
__BU_MAIN_COLOR_CODE_FUCHSIA='13';
__BU_MAIN_COLOR_CODE_AQUA='14';
__BU_MAIN_COLOR_CODE_WHITE='15';

BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_CODE_BLACK'		"$__BU_MAIN_COLOR_CODE_BLACK"	'Int'	"This variable stores the « black » color code"			"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-20 ))";
BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_CODE_MAROON'	"$__BU_MAIN_COLOR_CODE_MAROON"	'Int'	"This variable stores the « maroon » color code"		"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-20 ))";
BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_CODE_GREEN'		"$__BU_MAIN_COLOR_CODE_GREEN"	'Int'	"This variable stores the « light green » color code"	"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-20 ))";
BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_CODE_OLIVE'		"$__BU_MAIN_COLOR_CODE_OLIVE"	'Int'	"This variable stores the « olive green » color code"	"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-20 ))";

BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_CODE_NAVY'		"$__BU_MAIN_COLOR_CODE_NAVY"	'Int'	"This variable stores the « navy blue » color code"		"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-20 ))";
BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_CODE_PURPLE'	"$__BU_MAIN_COLOR_CODE_PURPLE"	'Int'	"This variable stores the « purple » color code"		"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-20 ))";
BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_CODE_TEAL'		"$__BU_MAIN_COLOR_CODE_TEAL"	'Int'	"This variable stores the « teal » color code"			"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-20 ))";
BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_CODE_SILVER'	"$__BU_MAIN_COLOR_CODE_SILVER"	'Int'	"This variable stores the « silver gray » color code"	"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-20 ))";

BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_CODE_GRAY'		"$__BU_MAIN_COLOR_CODE_GRAY"	'Int'	"This variable stores the « gray » color code"			"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-20 ))";
BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_CODE_RED'		"$__BU_MAIN_COLOR_CODE_RED"		'Int'	"This variable stores the « light red » color code"		"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-20 ))";
BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_CODE_LIME'		"$__BU_MAIN_COLOR_CODE_LIME"	'Int'	"This variable stores the « lime green » color code"	"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-20 ))";
BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_CODE_YELLOW'	"$__BU_MAIN_COLOR_CODE_YELLOW"	'Int'	"This variable stores the « light yellow » color code"	"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-20 ))";

BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_CODE_BLUE'		"$__BU_MAIN_COLOR_CODE_BLUE"	'Int'	"This variable stores the « blue » color code"			"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-20 ))";
BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_CODE_FUCHSIA'	"$__BU_MAIN_COLOR_CODE_FUCHSIA"	'Int'	"This variable stores the « fuchsia » color code"		"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-20 ))";
BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_CODE_AQUA'		"$__BU_MAIN_COLOR_CODE_AQUA"	'Int'	"This variable stores the « aqua blue » color code"		"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-20 ))";
BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_CODE_WHITE'		"$__BU_MAIN_COLOR_CODE_WHITE"	'Int'	"This variable stores the « white » color code"			"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-20 ))";

# -----------------------------------------------

## COLOR CODES FOR TEXT ENCODING (OTHERS)

__BU_MAIN_COLOR_CODE_CYAN='51';
__BU_MAIN_COLOR_CODE_ORANGE='166';
__BU_MAIN_COLOR_CODE_PINK='200';
__BU_MAIN_COLOR_CODE_SALMON='209';
__BU_MAIN_COLOR_CODE_TAN='180';
__BU_MAIN_COLOR_CODE_TURQUOISE='51';
__BU_MAIN_COLOR_CODE_VIOLET='177';

BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_CODE_CYAN'		"$__BU_MAIN_COLOR_CODE_CYAN"		'Int'	"This variable stores the « cyan » color code"			"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-8 ))";
BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_CODE_ORANGE'	"$__BU_MAIN_COLOR_CODE_ORANGE"		'Int'	"This variable stores the « orange  » color code"		"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-8 ))";
BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_CODE_PINK'		"$__BU_MAIN_COLOR_CODE_PINK"		'Int'	"This variable stores the « pink » color code"			"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-8 ))";
BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_CODE_SALMON'	"$__BU_MAIN_COLOR_CODE_SALMON"		'Int'	"This variable stores the « salmon » color code"		"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-8 ))";
BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_CODE_TAN'		"$__BU_MAIN_COLOR_CODE_TAN"			'Int'	"This variable stores the « brown tan » color code"		"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-8 ))";
BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_CODE_TURQUOISE'	"$__BU_MAIN_COLOR_CODE_TURQUOISE"	'Int'	"This variable stores the « turquoise » color code"		"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-8 ))";
BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_CODE_VIOLET'	"$__BU_MAIN_COLOR_CODE_VIOLET"		'Int'	"This variable stores the « violet » color code"		"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-8 ))";

# -----------------------------------------------

## COLOR CODES FOR SPECIFIC TEXT DISPLAY, PRINTED AND REDIRECTED WITH THE "BU::Main::ModConfig::Colors::SetTextColor" FUNCTIONS, THEN ENCODED WITH THE "tput" COMMAND

# Error text display color				| Default color : Red
__BU_MAIN_COLOR_CODE_ERROR="$__BU_MAIN_COLOR_CODE_RED";

BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_CODE_ERROR' "$__BU_MAIN_COLOR_CODE_ERROR"			'Int' "This variable stores the color code for the error messages" \
	"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-2 ))";

# Function name display color           | Default color : Purple
__BU_MAIN_COLOR_CODE_FUNCTION="$__BU_MAIN_COLOR_CODE_PURPLE";

BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_CODE_FUNCTION' "$__BU_MAIN_COLOR_CODE_FUNCTION"		'Int' "This variable stores the color code for the functions name's displaying" \
	"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-2 ))";

# Highlighted text display color		| Default color : Cyan
__BU_MAIN_COLOR_CODE_HIGHLIGHT="$__BU_MAIN_COLOR_CODE_CYAN";

BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_CODE_HIGHLIGHT' "$__BU_MAIN_COLOR_CODE_HIGHLIGHT"	'Int' "This variable stores the color code for the text highlighting" \
	"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-2 ))";

# Newstep text display color            | Default color : Orange
__BU_MAIN_COLOR_CODE_NEWSTEP="$__BU_MAIN_COLOR_CODE_ORANGE";

BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_CODE_NEWSTEP' "$__BU_MAIN_COLOR_CODE_NEWSTEP"	'Int' "This variable stores the color code for the new steps messages" \
	"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-2 ))";

# Directories and files paths display color     | Default color : Lime
__BU_MAIN_COLOR_CODE_PATH="$__BU_MAIN_COLOR_CODE_LIME";

BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_CODE_PATH' "$__BU_MAIN_COLOR_CODE_PATH"			'Int' "This variable stores the color code for the paths highlighting" \
	"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-2 ))";

# Reset color to terminal's default text color  | Always "tput sgr0"
__BU_MAIN_COLOR_CODE_RESET="$(tput sgr0)"; printf "%s" "$__BU_MAIN_COLOR_CODE_RESET";

BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_CODE_RESET' "$__BU_MAIN_COLOR_CODE_RESET"		'CMD' "This command substitution executes the « tput sgr0 » command to reset the text mode's text color" \
	"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-2 ))";

# Success text display color			| Default color : Green
__BU_MAIN_COLOR_CODE_SUCCESS="__BU_MAIN_COLOR_CODE_GREEN";

BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_CODE_SUCCESS' "$__BU_MAIN_COLOR_CODE_SUCCESS"	'Int' "This variable stores the color code for the succes messages" \
	"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-2 ))";

# Variable, parameter or argument name  | Default color : Orange
__BU_MAIN_COLOR_CODE_VAR="$__BU_MAIN_COLOR_CODE_ORANGE";

BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_CODE_VAR' "$__BU_MAIN_COLOR_CODE_VAR"			'Int' "This variable stores the color code for the variables names highlighting" \
	"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-2 ))";

# Warning text display color			| Default color : Yellow
__BU_MAIN_COLOR_CODE_WARNING="$__BU_MAIN_COLOR_CODE_YELLOW";

BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_CODE_WARNING' "$__BU_MAIN_COLOR_CODE_WARNING"	'Int' "This variable stores the color code for the warning messages" \
	"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-2 ))";

# -----------------------------------------------



# ///////////////////////////////////////////////////////////////////////////////////////////////

#### ENCODING WITH THE "tput" COMMAND AND PRINTED AND REDIRECTED WITH THE "BU::Main::ModConfig::Colors::SetTextColor" FUNCTIONS

## TEXT ENCODING

# Encodage des couleurs (codes de la commande "tput setaf") pour mieux lire les étapes de l'exécution du script.

# Aqua blue colored text.
__BU_MAIN_COLOR_TXT_AQUA="$(BU::Main::ModConfig::Colors::SetTextColor			"$__BU_MAIN_COLOR_CODE_AQUA")";
printf "%s" "$__BU_MAIN_COLOR_TXT_AQUA";	BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_TXT_AQUA' "$__BU_MAIN_COLOR_TXT_AQUA"	'CMD' "$(BU::Main::ModConfig::Colors::PrintColorTextVarsNameSubsCmd 'aqua blue')"	"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-1 ))";

# Black colored text.
__BU_MAIN_COLOR_TXT_BLACK="$(BU::Main::ModConfig::Colors::SetTextColor		"$__BU_MAIN_COLOR_CODE_BLACK")";
printf "%s" "$__BU_MAIN_COLOR_TXT_BLACK";	BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_TXT_BLACK' "$__BU_MAIN_COLOR_TXT_BLACK" 'CMD' "$(BU::Main::ModConfig::Colors::PrintColorTextVarsNameSubsCmd 'black')"		"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-1 ))";

# Deep blue colored text.
__BU_MAIN_COLOR_TXT_BLUE="$(BU::Main::ModConfig::Colors::SetTextColor 		"$__BU_MAIN_COLOR_CODE_BLUE")";
printf "%s" "$__BU_MAIN_COLOR_TXT_BLUE";	BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_TXT_BLUE' "$__BU_MAIN_COLOR_TXT_BLUE"	'CMD' "$(BU::Main::ModConfig::Colors::PrintColorTextVarsNameSubsCmd 'blue')"		"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-1 ))";

# -------

# Cyan blue colored text.
__BU_MAIN_COLOR_TXT_CYAN="$(BU::Main::ModConfig::Colors::SetTextColor 		"$__BU_MAIN_COLOR_CODE_CYAN")";
printf "%s" "$__BU_MAIN_COLOR_TXT_CYAN";	BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_TXT_CYAN' "$__BU_MAIN_COLOR_TXT_CYAN"		'CMD' "$(BU::Main::ModConfig::Colors::PrintColorTextVarsNameSubsCmd 'cyan')"		"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-1 ))";

# Fuchsia colored text.
__BU_MAIN_COLOR_TXT_FUCHSIA="$(BU::Main::ModConfig::Colors::SetTextColor		"$__BU_MAIN_COLOR_CODE_FUCHSIA")";
printf "%s" "$__BU_MAIN_COLOR_TXT_FUCHSIA";	BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_TXT_FUCHSIA' "$__BU_MAIN_COLOR_TXT_FUCHSIA"	'CMD' "$(BU::Main::ModConfig::Colors::PrintColorTextVarsNameSubsCmd 'fuchsia')"		"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-1 ))";

# Gray colored text.
__BU_MAIN_COLOR_TXT_GRAY="$(BU::Main::ModConfig::Colors::SetTextColor 		"$__BU_MAIN_COLOR_CODE_GRAY")";
printf "%s" "$__BU_MAIN_COLOR_TXT_GRAY";	BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_TXT_GRAY' "$__BU_MAIN_COLOR_TXT_GRAY"		'CMD' "$(BU::Main::ModConfig::Colors::PrintColorTextVarsNameSubsCmd 'gray')"		"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-1 ))";

# -------

# Light green colored text.
__BU_MAIN_COLOR_TXT_GREEN="$(BU::Main::ModConfig::Colors::SetTextColor 		"$__BU_MAIN_COLOR_CODE_GREEN")";
printf "%s" "$__BU_MAIN_COLOR_TXT_GREEN";	BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_TXT_GREEN' "$__BU_MAIN_COLOR_TXT_GREEN"		'CMD' "$(BU::Main::ModConfig::Colors::PrintColorTextVarsNameSubsCmd 'light green')"	"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-1 ))";

# Lime green colored text.
__BU_MAIN_COLOR_TXT_LIME="$(BU::Main::ModConfig::Colors::SetTextColor			"$__BU_MAIN_COLOR_CODE_LIME")";
printf "%s" "$__BU_MAIN_COLOR_TXT_LIME";	BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_TXT_LIME' "$__BU_MAIN_COLOR_TXT_LIME"		'CMD' "$(BU::Main::ModConfig::Colors::PrintColorTextVarsNameSubsCmd 'lime green')"	"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-1 ))";

# Maroon colored text.
__BU_MAIN_COLOR_TXT_MAROON="$(BU::Main::ModConfig::Colors::SetTextColor		"$__BU_MAIN_COLOR_CODE_MAROON")";
printf "%s" "$__BU_MAIN_COLOR_TXT_MAROON";	BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_TXT_MAROON' "$__BU_MAIN_COLOR_TXT_MAROON"	'CMD' "$(BU::Main::ModConfig::Colors::PrintColorTextVarsNameSubsCmd 'maroon')"		"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-1 ))";

# -------

# Navy blue colored text.
__BU_MAIN_COLOR_TXT_NAVY="$(BU::Main::ModConfig::Colors::SetTextColor			"$__BU_MAIN_COLOR_CODE_NAVY")";
printf "%s" "$__BU_MAIN_COLOR_TXT_NAVY";	BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_TXT_NAVY' "$__BU_MAIN_COLOR_TXT_NAVY"		'CMD' "$(BU::Main::ModConfig::Colors::PrintColorTextVarsNameSubsCmd 'navy blue')"	"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-2 ))";

# Green olive colored text.
__BU_MAIN_COLOR_TXT_OLIVE="$(BU::Main::ModConfig::Colors::SetTextColor		"$__BU_MAIN_COLOR_CODE_OLIVE")";
printf "%s" "$__BU_MAIN_COLOR_TXT_OLIVE";	BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_TXT_OLIVE' "$__BU_MAIN_COLOR_TXT_OLIVE"		'CMD' "$(BU::Main::ModConfig::Colors::PrintColorTextVarsNameSubsCmd 'olive green')"	"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-2 ))";

# Orange colored text.
__BU_MAIN_COLOR_TXT_ORANGE="$(BU::Main::ModConfig::Colors::SetTextColor 		"$__BU_MAIN_COLOR_CODE_ORANGE")";
printf "%s" "$__BU_MAIN_COLOR_TXT_ORANGE";	BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_TXT_ORANGE' "$__BU_MAIN_COLOR_TXT_ORANGE"	'CMD' "$(BU::Main::ModConfig::Colors::PrintColorTextVarsNameSubsCmd 'orange')"		"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-2 ))";

# -------

# Pink colored text.
__BU_MAIN_COLOR_TXT_PINK="$(BU::Main::ModConfig::Colors::SetTextColor 		"$__BU_MAIN_COLOR_CODE_PINK")";
printf "%s" "$__BU_MAIN_COLOR_TXT_PINK";	BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_TXT_PINK' "$__BU_MAIN_COLOR_TXT_PINK"		'CMD' "$(BU::Main::ModConfig::Colors::PrintColorTextVarsNameSubsCmd 'pink')"		"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-2 ))";

# Purple colored text.
__BU_MAIN_COLOR_TXT_PURPLE="$(BU::Main::ModConfig::Colors::SetTextColor 		"$__BU_MAIN_COLOR_CODE_PURPLE")";
printf "%s" "$__BU_MAIN_COLOR_TXT_PURPLE";	BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_TXT_PURPLE' "$__BU_MAIN_COLOR_TXT_PURPLE"	'CMD' "$(BU::Main::ModConfig::Colors::PrintColorTextVarsNameSubsCmd 'purple')"		"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-2 ))";

# Light red colored text.
__BU_MAIN_COLOR_TXT_RED="$(BU::Main::ModConfig::Colors::SetTextColor 			"$__BU_MAIN_COLOR_CODE_RED")";
printf "%s" "$__BU_MAIN_COLOR_TXT_RED";		BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_TXT_RED' "$__BU_MAIN_COLOR_TXT_RED"			'CMD' "$(BU::Main::ModConfig::Colors::PrintColorTextVarsNameSubsCmd 'light red')"			"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-2 ))";

# -------

# Salmon colored text.
__BU_MAIN_COLOR_TXT_SALMON="$(BU::Main::ModConfig::Colors::SetTextColor		"$__BU_MAIN_COLOR_CODE_SALMON")";
printf "%s" "$__BU_MAIN_COLOR_TXT_SALMON";	BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_TXT_SALMON' "$__BU_MAIN_COLOR_TXT_SALMON"	'CMD' "$(BU::Main::ModConfig::Colors::PrintColorTextVarsNameSubsCmd 'salmon')"		"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-2 ))";

# Silver gray colored text.
__BU_MAIN_COLOR_TXT_SILVER="$(BU::Main::ModConfig::Colors::SetTextColor		"$__BU_MAIN_COLOR_CODE_SILVER")";
printf "%s" "$__BU_MAIN_COLOR_TXT_SILVER";	BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_TXT_SILVER' "$__BU_MAIN_COLOR_TXT_SILVER"	'CMD' "$(BU::Main::ModConfig::Colors::PrintColorTextVarsNameSubsCmd 'silver gray')"	"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-2 ))";

# Brown tan colored text.
__BU_MAIN_COLOR_TXT_TAN="$(BU::Main::ModConfig::Colors::SetTextColor			"$__BU_MAIN_COLOR_CODE_TAN")";
printf "%s" "$__BU_MAIN_COLOR_TXT_TAN";		BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_TXT_TAN' "$__BU_MAIN_COLOR_TXT_TAN"			'CMD' "$(BU::Main::ModConfig::Colors::PrintColorTextVarsNameSubsCmd 'brown tan')"	"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-2 ))";

# -------

# Teal colored text.
__BU_MAIN_COLOR_TXT_TEAL="$(BU::Main::ModConfig::Colors::SetTextColor			"$__BU_MAIN_COLOR_CODE_TEAL")";
printf "%s" "$__BU_MAIN_COLOR_TXT_TEAL";		BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_TXT_TEAL' "$__BU_MAIN_COLOR_TXT_TEAL"			'CMD' "$(BU::Main::ModConfig::Colors::PrintColorTextVarsNameSubsCmd 'teal')"		"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-2 ))";

# Turquoise colored text.
__BU_MAIN_COLOR_TXT_TURQUOISE="$(BU::Main::ModConfig::Colors::SetTextColor	"$__BU_MAIN_COLOR_CODE_TURQUOISE")";
printf "%s" "$__BU_MAIN_COLOR_TXT_TURQUOISE";	BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_TXT_TURQUOISE' "$__BU_MAIN_COLOR_TXT_TURQUOISE"	'CMD' "$(BU::Main::ModConfig::Colors::PrintColorTextVarsNameSubsCmd 'turquoise')"	"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-2 ))";

# Violet colored text.
__BU_MAIN_COLOR_TXT_VIOLET="$(BU::Main::ModConfig::Colors::SetTextColor		"$__BU_MAIN_COLOR_CODE_VIOLET")";
printf "%s" "$__BU_MAIN_COLOR_TXT_VIOLET";		BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_TXT_VIOLET' "$__BU_MAIN_COLOR_TXT_VIOLET"		'CMD' "$(BU::Main::ModConfig::Colors::PrintColorTextVarsNameSubsCmd 'violet')"		"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-2 ))";

# -------

# White colored text.
__BU_MAIN_COLOR_TXT_WHITE="$(BU::Main::ModConfig::Colors::SetTextColor 		"$__BU_MAIN_COLOR_CODE_WHITE")"
printf "%s" "$__BU_MAIN_COLOR_TXT_WHITE";		BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_TXT_WHITE' "$__BU_MAIN_COLOR_TXT_WHITE"			'CMD' "$(BU::Main::ModConfig::Colors::PrintColorTextVarsNameSubsCmd 'white')"		"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-2 ))";

# Light yellow colored text.
__BU_MAIN_COLOR_TXT_YELLOW="$(BU::Main::ModConfig::Colors::SetTextColor 		"$__BU_MAIN_COLOR_CODE_YELLOW")";
printf "%s" "$__BU_MAIN_COLOR_TXT_YELLOW";		BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_TXT_YELLOW' "$__BU_MAIN_COLOR_TXT_YELLOW"		'CMD' "$(BU::Main::ModConfig::Colors::PrintColorTextVarsNameSubsCmd 'yellow')"		"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-2 ))";

# Resetting the text color, since the text generated by the "BU::ModuleInit::DisplayInitGlobalVarsInfos()" function is colored.
printf "%s" "$__BU_MAIN_COLOR_CODE_RESET";

# -----------------------------------------------

## SPECIFIC TEXT ENCODING

# Specific colors encoding.
__BU_MAIN_COLOR_TXT_ERROR="$(BU::Main::ModConfig::Colors::SetTextColor      "$__BU_MAIN_COLOR_CODE_ERROR")";        # Error text display color.
__BU_MAIN_COLOR_TXT_FUNCTION="$(BU::Main::ModConfig::Colors::SetTextColor   "$__BU_MAIN_COLOR_CODE_FUNCTION")";     # Function name display color
__BU_MAIN_COLOR_TXT_HIGHLIGHT="$(BU::Main::ModConfig::Colors::SetTextColor  "$__BU_MAIN_COLOR_CODE_HIGHLIGHT")";    # Highlighted text display color.
__BU_MAIN_COLOR_TXT_NEWSTEP="$(BU::Main::ModConfig::Colors::SetTextColor    "$__BU_MAIN_COLOR_CODE_NEWSTEP")";      # New setps text display color.
__BU_MAIN_COLOR_TXT_PATH="$(BU::Main::ModConfig::Colors::SetTextColor       "$__BU_MAIN_COLOR_CODE_PATH")";         # Directories and files paths display color.
__BU_MAIN_COLOR_TXT_SUCCESS="$(BU::Main::ModConfig::Colors::SetTextColor    "$__BU_MAIN_COLOR_CODE_SUCCESS")";		# Success text display color.
__BU_MAIN_COLOR_TXT_VAR="$(BU::Main::ModConfig::Colors::SetTextColor        "$__BU_MAIN_COLOR_CODE_VAR")";          # Variable, parameter or argument name.
__BU_MAIN_COLOR_TXT_WARNING="$(BU::Main::ModConfig::Colors::SetTextColor    "$__BU_MAIN_COLOR_CODE_WARNING")";		# Warning text display color.

__BU_MAIN_COLOR_TXT_RESET="$__BU_MAIN_COLOR_CODE_RESET"                         # Resetting the color to terminal's default text color.

printf "%s" "$__BU_MAIN_COLOR_TXT_ERROR";		BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_TXT_ERROR'		"$__BU_MAIN_COLOR_TXT_ERROR"		'CMD' "$(BU::Main::ModConfig::Colors::PrintColorTextVarsNameSubsCmd 'error messages')"		"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-11 ))";
printf "%s" "$__BU_MAIN_COLOR_TXT_FUNCTION";	BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_TXT_FUNCTION'	"$__BU_MAIN_COLOR_TXT_FUNCTION"		'CMD' "$(BU::Main::ModConfig::Colors::PrintColorTextVarsNameSubsCmd 'function names')"		"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-11 ))";
printf "%s" "$__BU_MAIN_COLOR_TXT_HIGHLIGHT";	BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_TXT_HIGHLIGHT'	"$__BU_MAIN_COLOR_TXT_HIGHLIGHT"	'CMD' "$(BU::Main::ModConfig::Colors::PrintColorTextVarsNameSubsCmd 'text highlighting')"	"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-11 ))";
printf "%s" "$__BU_MAIN_COLOR_TXT_NEWSTEP";		BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_TXT_NEWSTEP'	"$__BU_MAIN_COLOR_TXT_NEWSTEP"		'CMD' "$(BU::Main::ModConfig::Colors::PrintColorTextVarsNameSubsCmd 'new step messages')"	"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-11 ))";
printf "%s" "$__BU_MAIN_COLOR_TXT_PATH";		BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_TXT_PATH'		"$__BU_MAIN_COLOR_TXT_PATH"			'CMD' "$(BU::Main::ModConfig::Colors::PrintColorTextVarsNameSubsCmd 'paths highlighting')"	"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-11 ))";
printf "%s" "$__BU_MAIN_COLOR_TXT_RESET";		BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_TXT_RESET'		"$__BU_MAIN_COLOR_TXT_RESET"		'CMD' "$(BU::Main::ModConfig::Colors::PrintColorTextVarsNameSubsCmd 'success messages')"	"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-11 ))";
printf "%s" "$__BU_MAIN_COLOR_TXT_SUCCESS";		BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_TXT_SUCCESS'	"$__BU_MAIN_COLOR_TXT_SUCCESS"		'CMD' "$(BU::Main::ModConfig::Colors::PrintColorTextVarsNameSubsCmd 'success messages')"	"$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-11 ))";

printf "%s" "$__BU_MAIN_COLOR_TXT_VAR";         BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_TXT_VAR'        "$__BU_MAIN_COLOR_TXT_VAR"          'CMD' "$(BU::Main::ModConfig::Colors::PrintColorTextVarsNameSubsCmd 'variables names highlighting')"        "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-12 ))";
printf "%s" "$__BU_MAIN_COLOR_TXT_WARNING";     BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_TXT_WARNING'    "$__BU_MAIN_COLOR_TXT_WARNING"      'CMD' "$(BU::Main::ModConfig::Colors::PrintColorTextVarsNameSubsCmd 'warning messages')"                    "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-12 ))";

printf "%s" "$__BU_MAIN_COLOR_TXT_RESET";       BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_TXT_RESET'      "$__BU_MAIN_COLOR_TXT_RESET"        'CMD' "This command substitution executes the « tput sgr0 » command to reset the text mode's text color"    "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-13 ))";

# -----------------------------------------------

## BACKGROUND ENCODING

# Aqua blue colored background.
__BU_MAIN_COLOR_BG_AQUA="$(BU::Main::ModConfig::Colors::SetBGColor        "$__BU_MAIN_COLOR_CODE_AQUA")";
BU::ModuleInit::DisplayInitGlobalVarsInfos
printf "%s" "$__BU_MAIN_COLOR_BG_AQUA";printf "%s" "$__BU_MAIN_COLOR_TXT_BLACK";    BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_AQUA' "$__BU_MAIN_COLOR_BG_AQUA"     'CMD' "$(BU::Main::ModConfig::Colors::PrintColorBGVarsNameSubsCmd "$__BU_MAIN_COLOR_BG_AQUA")"  "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-1 ))";

# Black colored background.
__BU_MAIN_COLOR_BG_BLACK="$(BU::Main::ModConfig::Colors::SetBGColor       "$__BU_MAIN_COLOR_CODE_BLACK")";
printf "%s" "$__BU_MAIN_COLOR_BG_BLACK"; printf "%s" "$__BU_MAIN_COLOR_TXT_WHITE";  BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_BLACK' "$__BU_MAIN_COLOR_BG_BLACK"   'CMD' "$(BU::Main::ModConfig::Colors::PrintColorBGVarsNameSubsCmd "$__BU_MAIN_COLOR_BG_BLACK")" "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-1 ))";

# Deep blue colored background.
__BU_MAIN_COLOR_BG_BLUE="$(BU::Main::ModConfig::Colors::SetBGColor        "$__BU_MAIN_COLOR_CODE_BLUE")";
printf "%s" "$__BU_MAIN_COLOR_BG_BLUE"; BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_BLUE' "$__BU_MAIN_COLOR_BG_BLUE"             'CMD' "$(BU::Main::ModConfig::Colors::PrintColorBGVarsNameSubsCmd "$__BU_MAIN_COLOR_BG_BLUE")"      "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-1 ))";


# -------

# Cyan blue colored background.
__BU_MAIN_COLOR_BG_CYAN="$(BU::Main::ModConfig::Colors::SetBGColor        "$__BU_MAIN_COLOR_CODE_CYAN")";
printf "%s" "$__BU_MAIN_COLOR_BG_CYAN"; printf "%s" "$__BU_MAIN_COLOR_TXT_BLACK"; BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_CYAN' "$__BU_MAIN_COLOR_BG_CYAN"       'CMD' "$(BU::Main::ModConfig::Colors::PrintColorBGVarsNameSubsCmd "$__BU_MAIN_COLOR_BG_CYAN")"  "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-1 ))";

# Fuchsia colored background.
__BU_MAIN_COLOR_BG_FUCHSIA="$(BU::Main::ModConfig::Colors::SetBGColor     "$__BU_MAIN_COLOR_CODE_FUCHSIA")";
printf "%s" "$__BU_MAIN_COLOR_BG_FUCHSIA"; BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_FUCHSIA' "$__BU_MAIN_COLOR_BG_FUCHSIA"    'CMD' "$(BU::Main::ModConfig::Colors::PrintColorBGVarsNameSubsCmd "$__BU_MAIN_COLOR_BG_FUCHSIA")"   "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-1 ))";

# Gray colored background.
__BU_MAIN_COLOR_BG_GRAY="$(BU::Main::ModConfig::Colors::SetBGColor        "$__BU_MAIN_COLOR_CODE_GRAY")";
printf "%s" "$__BU_MAIN_COLOR_BG_GRAY"; printf "%s" "$__BU_MAIN_COLOR_TXT_WHITE"; BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_GRAY' "$__BU_MAIN_COLOR_BG_GRAY"       'CMD' "$(BU::Main::ModConfig::Colors::PrintColorBGVarsNameSubsCmd "$__BU_MAIN_COLOR_BG_GRAY")"  "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-1 ))";


# -------

# Light green colored background.
__BU_MAIN_COLOR_BG_GREEN="$(BU::Main::ModConfig::Colors::SetBGColor       "$__BU_MAIN_COLOR_CODE_GREEN")";
printf "%s" "$__BU_MAIN_COLOR_BG_GREEN"; BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_GREEN' "$__BU_MAIN_COLOR_BG_GREEN"          'CMD' "$(BU::Main::ModConfig::Colors::PrintColorBGVarsNameSubsCmd "light green")"                   "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-1 ))";

# Lime green colored background.
__BU_MAIN_COLOR_BG_LIME="$(BU::Main::ModConfig::Colors::SetBGColor        "$__BU_MAIN_COLOR_CODE_LIME")";
printf "%s" "$__BU_MAIN_COLOR_BG_LIME"; printf "%s" "$__BU_MAIN_COLOR_TXT_BLACK"; BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_LIME' "$__BU_MAIN_COLOR_BG_LIME"       'CMD' "$(BU::Main::ModConfig::Colors::PrintColorBGVarsNameSubsCmd "lime green")"    "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-1 ))";

# Marron colored background.
__BU_MAIN_COLOR_BG_MAROON="$(BU::Main::ModConfig::Colors::SetBGColor      "$__BU_MAIN_COLOR_CODE_MAROON")";
printf "%s" "$__BU_MAIN_COLOR_BG_MAROON"; printf "%s" "$__BU_MAIN_COLOR_TXT_WHITE"; BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_MAROON' "$__BU_MAIN_COLOR_BG_MAROON" 'CMD' "$(BU::Main::ModConfig::Colors::PrintColorBGVarsNameSubsCmd "maroon")"        "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-1 ))";


# -------

# Navy blue colored background.
__BU_MAIN_COLOR_BG_NAVY="$(BU::Main::ModConfig::Colors::SetBGColor        "$__BU_MAIN_COLOR_CODE_NAVY")";
printf "%s" "$__BU_MAIN_COLOR_BG_NAVY"; printf "%s" "$__BU_MAIN_COLOR_TXT_WHITE"; BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_NAVY' "$__BU_MAIN_COLOR_BG_NAVY"       'CMD' "$(BU::Main::ModConfig::Colors::PrintColorBGVarsNameSubsCmd "navy blue")"     "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-1 ))";

# Green olive colored background.
__BU_MAIN_COLOR_BG_OLIVE="$(BU::Main::ModConfig::Colors::SetBGColor       "$__BU_MAIN_COLOR_CODE_OLIVE")";
printf "%s" "$__BU_MAIN_COLOR_BG_OLIVE"; BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_OLIVE' "$__BU_MAIN_COLOR_BG_OLIVE"      'CMD' "$(BU::Main::ModConfig::Colors::PrintColorBGVarsNameSubsCmd "olive green")"   "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-1 ))";

# Orange colored background.
__BU_MAIN_COLOR_BG_ORANGE="$(BU::Main::ModConfig::Colors::SetBGColor      "$__BU_MAIN_COLOR_CODE_ORANGE")";
printf "%s" "$__BU_MAIN_COLOR_BG_ORANGE"; BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_ORANGE' "$__BU_MAIN_COLOR_BG_ORANGE"   'CMD' "$(BU::Main::ModConfig::Colors::PrintColorBGVarsNameSubsCmd "orange")"        "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-1 ))";


# -------

# Pink colored background.
__BU_MAIN_COLOR_BG_PINK="$(BU::Main::ModConfig::Colors::SetBGColor        "$__BU_MAIN_COLOR_CODE_PINK")";
printf "%s" "$__BU_MAIN_COLOR_BG_PINK"; printf "%s" "$__BU_MAIN_COLOR_TXT_BLACK"; BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_PINK' "$__BU_MAIN_COLOR_BG_PINK"       'CMD' "$(BU::Main::ModConfig::Colors::PrintColorBGVarsNameSubsCmd "pink")"          "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-1 ))";

# Purple colored background.
__BU_MAIN_COLOR_BG_PURPLE="$(BU::Main::ModConfig::Colors::SetBGColor      "$__BU_MAIN_COLOR_CODE_PURPLE")";
printf "%s" "$__BU_MAIN_COLOR_BG_PURPLE"; BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_PURPLE' "$__BU_MAIN_COLOR_BG_PURPLE"   'CMD' "$(BU::Main::ModConfig::Colors::PrintColorBGVarsNameSubsCmd "purple")"        "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-1 ))";

# Light red colored background.
__BU_MAIN_COLOR_BG_RED="$(BU::Main::ModConfig::Colors::SetBGColor         "$__BU_MAIN_COLOR_CODE_RED")";
printf "%s" "$__BU_MAIN_COLOR_BG_RED"; BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_RED' "$__BU_MAIN_COLOR_BG_RED"            'CMD' "$(BU::Main::ModConfig::Colors::PrintColorBGVarsNameSubsCmd "light red")"     "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-1 ))";


# -------

# Salmon colored background.
__BU_MAIN_COLOR_BG_SALMON="$(BU::Main::ModConfig::Colors::SetBGColor      "$__BU_MAIN_COLOR_CODE_SALMON")";
printf "%s" "$__BU_MAIN_COLOR_BG_SALMON"; BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_SALMON' "$__BU_MAIN_COLOR_BG_SALMON"   'CMD' "$(BU::Main::ModConfig::Colors::PrintColorBGVarsNameSubsCmd "salmon")"        "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-1 ))";

# Silver gray colored background.
__BU_MAIN_COLOR_BG_SILVER="$(BU::Main::ModConfig::Colors::SetBGColor      "$__BU_MAIN_COLOR_CODE_SILVER")";
printf "%s" "$__BU_MAIN_COLOR_BG_SILVER"; BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_SILVER' "$__BU_MAIN_COLOR_BG_SILVER"   'CMD' "$(BU::Main::ModConfig::Colors::PrintColorBGVarsNameSubsCmd "silver gray")"   "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-1 ))";

# Brown tan colored background.
__BU_MAIN_COLOR_BG_TAN="$(BU::Main::ModConfig::Colors::SetBGColor         "$__BU_MAIN_COLOR_CODE_TAN")";
printf "%s" "$__BU_MAIN_COLOR_BG_TAN"; BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_TAN' "$__BU_MAIN_COLOR_BG_TAN"            'CMD' "$(BU::Main::ModConfig::Colors::PrintColorBGVarsNameSubsCmd "brown tan")"     "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-1 ))";


# -------

# Teal colored background.
__BU_MAIN_COLOR_BG_TEAL="$(BU::Main::ModConfig::Colors::SetBGColor        "$__BU_MAIN_COLOR_CODE_TEAL")";
printf "%s" "$__BU_MAIN_COLOR_BG_TEAL"; BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_TEAL' "$__BU_MAIN_COLOR_BG_TEAL"         'CMD' "$(BU::Main::ModConfig::Colors::PrintColorBGVarsNameSubsCmd "teal")"          "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-1 ))";

# Turquoise colored background.
__BU_MAIN_COLOR_BG_TURQUOISE="$(BU::Main::ModConfig::Colors::SetBGColor   "$__BU_MAIN_COLOR_CODE_TURQUOISE")";
printf "%s" "$__BU_MAIN_COLOR_BG_TURQUOISE"; printf "%s" "$__BU_MAIN_COLOR_TXT_BLACK"; BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_TURQUOISE' "$__BU_MAIN_COLOR_BG_TURQUOISE" 'CMD' "$(BU::Main::ModConfig::Colors::PrintColorBGVarsNameSubsCmd "turquoise")" "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-1 ))";

# Violet colored background.
__BU_MAIN_COLOR_BG_VIOLET="$(BU::Main::ModConfig::Colors::SetBGColor      "$__BU_MAIN_COLOR_CODE_VIOLET")";
printf "%s" "$__BU_MAIN_COLOR_BG_VIOLET"; BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_VIOLET' "$__BU_MAIN_COLOR_BG_VIOLET"   'CMD' "$(BU::Main::ModConfig::Colors::PrintColorBGVarsNameSubsCmd "violet")"        "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-1 ))";


# -------

# White colored background.
__BU_MAIN_COLOR_BG_WHITE="$(BU::Main::ModConfig::Colors::SetBGColor       "$__BU_MAIN_COLOR_CODE_WHITE")";
printf "%s" "$__BU_MAIN_COLOR_BG_WHITE"; printf "%s" "$__BU_MAIN_COLOR_TXT_BLACK"; BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_WHITE' "$__BU_MAIN_COLOR_BG_WHITE"    'CMD' "$(BU::Main::ModConfig::Colors::PrintColorBGVarsNameSubsCmd "white")"                         "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-1 ))";

# Light yellow colored background.
__BU_MAIN_COLOR_BG_YELLOW="$(BU::Main::ModConfig::Colors::SetBGColor      "$__BU_MAIN_COLOR_CODE_YELLOW")";
printf "%s" "$__BU_MAIN_COLOR_BG_YELLOW"; BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_COLOR_BG_YELLOW' "$__BU_MAIN_COLOR_BG_YELLOW"   'CMD' "$(BU::Main::ModConfig::Colors::PrintColorBGVarsNameSubsCmd "yellow")"        "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-1 ))";

printf "%s" "$__BU_MAIN_COLOR_TXT_RESET"
