#!/usr/bin/env bash

# Disabling the SC2034 warning from Shellcheck (SC2034: <Variable name> appears unused. Verify use (or export if used externally)), because of the huge number of variables declared in the configuration files, but only used in the library files.
# shellcheck disable=SC2034

# /////////////////////////////////////////////////////////////////////////////////////////////// #

#### PROJECT'S VARIABLES

## PROJECT'S PATH VARIABLES

# Script file's informations
__BU_MAIN_PROJECT_FILE_NAME=$(basename "$0");                    # Project file's name.
__BU_MAIN_PROJECT_NAME=$(basename "$0" | cut -f 1 -d '.');       # Name of the project (project file's name without its file extension).

BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_PROJECT_FILE_NAME' "$__BU_MAIN_PROJECT_FILE_NAME"	'String' "This global variable stores the name of the main project's script (the one executed right now), with it's file extension" "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-3 ))"
BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_PROJECT_NAME' "$__BU_MAIN_PROJECT_NAME"			'String' "This global variable stores the name of the main project's script (the one executed right now), without it's file extension" "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-3 ))"

function GetProjectFilePath()
{
    local v_cut="${__BU_MAIN_PROJECT_FILE_NAME##*./}";
    local find_path;
        find_path="$(BU::ModuleInit::FindPath "$(cd "$(printf "%s" "$__BU_MAIN_PROJECT_FILE_PATH")" ||
        { 
            echo >&2; echo "IN « ${BASH_SOURCE[0]} », FUNCTION « ${FUNCNAME[0]} », LINE « $LINENO » --> ERROR : UNABLE TO GET THE " >&2; echo >&2; exit 1;
        }; pwd)" "$v_cut")";

    echo "$find_path";

	exit 1;
}

__BU_MAIN_PROJECT_TMP_DIR_PARENT_NAME="tmp";
__BU_MAIN_PROJECT_TMP_DIR_PARENT_PATH="$__BU_MAIN_ROOT_DIR_PATH/$__BU_MAIN_PROJECT_TMP_DIR_PARENT_NAME";

BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_PROJECT_TMP_DIR_PARENT_NAME' "$__BU_MAIN_PROJECT_TMP_DIR_PARENT_NAME" 'Dir'	"This global variable stores the name of the project's temporary folder's parent directory" "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-3 ))"
BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_PROJECT_TMP_DIR_PARENT_PATH' "$__BU_MAIN_PROJECT_TMP_DIR_PARENT_PATH" 'Path'	"This global variable stores the path to the project's temporary folder's parent directory" "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-3 ))"

if [ ! -d "$__BU_MAIN_PROJECT_TMP_DIR_PARENT_PATH" ]; then
    mkdir -p "$__BU_MAIN_PROJECT_TMP_DIR_PARENT_PATH" || { echo >&2; echo "UNABLE TO CREATE THE PROJECT'S TEMPORARY FOLDER'S PARENT DIRECTORY « $__BU_MAIN_PROJECT_TMP_DIR_PARENT_PATH » !" >&2; echo >&2; exit 1; };
fi

# Checking first if the effective user identifiant (EUID) is equal to super-user's EUID or not.
# The folders names have to be different according to the EUID, as files and folders created by the root user belong to this user,
# which means that a regular user won't have any write permission on these files, so nothing can be written on a log file, for example.

# To remove these folders, please run the "rm -rf $folder" command with sudo if you're not logged as super-user.
if [ "$EUID" -eq 0 ]; then
    __BU_MAIN_PROJECT_TMP_DIR_PATH="$__BU_MAIN_PROJECT_TMP_DIR_PARENT_PATH/$__BU_MAIN_PROJECT_NAME - ROOT" # Default --> "$__BU_MAIN_PROJECT_TMP_DIR_PARENT_PATH/$__BU_MAIN_PROJECT_NAME - ROOT"

    BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_PROJECT_TMP_DIR_PATH' "$__BU_MAIN_PROJECT_TMP_DIR_PATH" 'Path' "This global variable stores the path to the temporary folder" "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-2 ))"
else
    __BU_MAIN_PROJECT_TMP_DIR_PATH="$__BU_MAIN_PROJECT_TMP_DIR_PARENT_PATH/$__BU_MAIN_PROJECT_NAME"        # Default --> "$__BU_MAIN_PROJECT_TMP_DIR_PARENT_PATH/$__BU_MAIN_PROJECT_NAME"

    BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_PROJECT_TMP_DIR_PATH' "$__BU_MAIN_PROJECT_TMP_DIR_PATH" 'Path' "This global variable stores the path to the temporary folder (with super-user's privileges)" "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-2 ))"
fi

# Project's file path.
__BU_MAIN_PROJECT_FILE_PATH="$(GetProjectFilePath "$__BU_MAIN_PROJECT_FILE_NAME")"; echo "$__BU_MAIN_PROJECT_FILE_PATH"

# Defining the project's log file's parent directory path.
__BU_MAIN_PROJECT_LOG_DIR_PARENT="$__BU_MAIN_PROJECT_TMP_DIR_PATH"
__BU_MAIN_PROJECT_LOG_DIR_NAME="logs"												    # Default --> "logs"
__BU_MAIN_PROJECT_LOG_DIR_PATH="$__BU_MAIN_PROJECT_LOG_DIR_PARENT/$__BU_MAIN_PROJECT_LOG_DIR_NAME" # Default --> "$__BU_MAIN_PROJECT_TMP_DIR_PATH/$__BU_MAIN_PROJECT_LOG_DIR_NAME"

# Defining the project's log file's path.
__BU_MAIN_PROJECT_LOG_FILE_PARENT="$__BU_MAIN_PROJECT_LOG_DIR_PATH"
__BU_MAIN_PROJECT_LOG_FILE_NAME="$__BU_MAIN_PROJECT_NAME.log"                                     # Default --> "$__BU_MAIN_PROJECT_NAME.log"
__BU_MAIN_PROJECT_LOG_FILE_PATH="$__BU_MAIN_PROJECT_LOG_FILE_PARENT/$__BU_MAIN_PROJECT_LOG_FILE_NAME"  # Default --> "$__BU_MAIN_PROJECT_LOG_DIR_PATH/$__BU_MAIN_PROJECT_LOG_FILE_NAME"

# Defining the project's "BU::Echo<...>()" functions debug output (to have a better view during a "bash - x" debug).
__BU_MAIN_PROJECT_ECHO_OUTPUT_FILE_PARENT="$__BU_MAIN_PROJECT_LOG_DIR_PATH"
__BU_MAIN_PROJECT_ECHO_OUTPUT_FILE_NAME="echo_output.log"
__BU_MAIN_PROJECT_ECHO_OUTPUT_FILE_PATH="$__BU_MAIN_PROJECT_ECHO_OUTPUT_FILE_PARENT/$__BU_MAIN_PROJECT_ECHO_OUTPUT_FILE_NAME"

# Defining the project's color code storage file.
__BU_MAIN_PROJECT_COLOR_CODE_FILE_PARENT="$__BU_MAIN_PROJECT_TMP_DIR_PATH"
__BU_MAIN_PROJECT_COLOR_CODE_FILE_NAME="colors.tmp"
__BU_MAIN_PROJECT_COLOR_CODE_FILE_PATH="$__BU_MAIN_PROJECT_COLOR_CODE_FILE_PARENT/$__BU_MAIN_PROJECT_COLOR_CODE_FILE_NAME"

BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_PROJECT_LOG_DIR_PARENT' "$__BU_MAIN_PROJECT_LOG_DIR_PARENT"   'Path'      "This global variable stores the path to the parent directory of the project's log file's directory" "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-19 ))"
BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_PROJECT_LOG_DIR_NAME' "$__BU_MAIN_PROJECT_LOG_DIR_NAME"       'Dir'		"This global variable stores the name of the parent directory of the project's log file's directory" "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-19 ))"
BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_PROJECT_LOG_DIR_PATH' "$__BU_MAIN_PROJECT_LOG_DIR_PATH"       'Path'      "This global variable stores the path to the parent directory of the project's log file" "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-19 ))"

BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_PROJECT_LOG_FILE_PARENT' "$__BU_MAIN_PROJECT_LOG_FILE_PARENT" 'Path'      "This global variable stores the path to the project's log file's parent directory" "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-20 ))"
BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_PROJECT_LOG_FILE_NAME' "$__BU_MAIN_PROJECT_LOG_FILE_NAME"     'File'		"This global variable stores the name of the project's log file" "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-20 ))"
BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_PROJECT_LOG_FILE_PATH' "$__BU_MAIN_PROJECT_LOG_FILE_PATH"     'Path'      "This global variable stores the path to the project's log path" "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-20 ))"

BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_PROJECT_ECHO_OUTPUT_FILE_PARENT' "$__BU_MAIN_PROJECT_ECHO_OUTPUT_FILE_PARENT" 'Path'      "This global variable stores the path to the echo debugging file's parent directory" "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-21 ))"
BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_PROJECT_ECHO_OUTPUT_FILE_NAME' "$__BU_MAIN_PROJECT_ECHO_OUTPUT_FILE_NAME"     'File'		"This global variable stores the name of the echo debugging file" "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-21 ))"
BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_PROJECT_ECHO_OUTPUT_FILE_PATH' "$__BU_MAIN_PROJECT_ECHO_OUTPUT_FILE_PATH"     'Path'      "This global variable stores the path to the echo debugging file" "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-21 ))"

BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_PROJECT_COLOR_CODE_FILE_PARENT' "$__BU_MAIN_PROJECT_COLOR_CODE_FILE_PARENT"   'Path'      "This global variable stores the path to the Decho color code file's parent directory" "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-22 ))"
BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_PROJECT_COLOR_CODE_FILE_NAME' "$__BU_MAIN_PROJECT_COLOR_CODE_FILE_NAME"       'File'		"This global variable stores the name of the Decho color code file" "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-22 ))"
BU::ModuleInit::DisplayInitGlobalVarsInfos '__BU_MAIN_PROJECT_COLOR_CODE_FILE_PATH' "$__BU_MAIN_PROJECT_COLOR_CODE_FILE_PATH"       'Path'      "This global variable stores the path to the Decho color code file" "$(basename "${BASH_SOURCE[0]}")" "${FUNCNAME[0]}" "$(( LINENO-22 ))"

# -----------------------------------------------
