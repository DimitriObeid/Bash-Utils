#!/usr/bin/env bash

# Disabling the SC2034 warning from Shellcheck (SC2034: <Variable name> appears unused. Verify use (or export if used externally)), because of the huge number of global variables declared in the configuration files, but only used in the library files.
# shellcheck disable=SC2016,SC2034,2059

# This configuration file stores the global variables related to the "Hardware" module initialization process.

# ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; #

######################################## DEFINING VARIABLES #######################################

#### DEFINING THE NEEDED RESOURCES

##

# Feel free to define any needed resources (functions, etc...) here.



## ----------------------------------------------



# /////////////////////////////////////////////////////////////////////////////////////////////// #

#### BASH UTILS HARDWARE MODULE'S LIBRARY DIRECTORIES PATHS

## BASH UTIILS SUB-FOLDERS PATHS

__BU_HARDWARE_MODULE_CONF_DIR_PATH="$(BU.ModuleInit.FindPath "${__BU_MODULE_INIT__CONFIG_MODULES_DIR_PATH}" "$(BU.ModuleInit.GetModuleName "${BASH_SOURCE[0]}")" 'd')";

## ----------------------------------------------

## "lib" FOLDER'S CONTENT.

# Bash Utils "Hardware" module's library directory                                                  |   Default parent folder --> "${__BU_MAIN_MODULE_LIB_FUNCTS_DIR_PATH}/" (Bash-utils/lib/functions).
__BU_HARDWARE_MODULE_LIB_MOD_DIR_PATH="$(BU.ModuleInit.FindPath "${__BU_MAIN_MODULE_LIB_FUNCTS_DIR_PATH}" "$(BU.ModuleInit.GetModuleName "${BASH_SOURCE[0]}")" 'd')"  || { printf "IN « %s », LINE « %s » --> BASH-UTILS ERROR : Unable to define the path to store in the « %s » global variable\n"  "${BASH_SOURCE[0]}" "${LINENO}" '$__BU_HARDWARE_MODULE_LIB_MOD_DIR_PATH'; BU.ModuleInit.MsgAbort; BU.ModuleInit.AskPrintLog; BU.ModuleInit.IsInScript && exit 1; return 1; };
BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_HARDWARE_MODULE_LIB_MOD_DIR_PATH' "${__BU_HARDWARE_MODULE_LIB_MOD_DIR_PATH}"                                       'Dirpath' "This global variable stores the path of the « Hardware » module's functions folder"                                  "${BASH_SOURCE[0]}" "${FUNCNAME[0]}" "$(( LINENO - 1 ))";

## ----------------------------------------------



# /////////////////////////////////////////////////////////////////////////////////////////////// #

#### BASH UTILS HARDWARE'S MODULE LIBRARY FILES PATHS

## HARDWARE MODULE'S "config" FOLDER'S CONTENT

__BU_HARDWARE_MODULE_CONF_FILE_AUDIO_PATH="$(BU.ModuleInit.FindPath "${__BU_HARDWARE_MODULE_CONF_DIR_PATH}" "Audio.conf" 'f')";
__BU_HARDWARE_MODULE_CONF_FILE_BATTERY_PATH="$(BU.ModuleInit.FindPath "${__BU_HARDWARE_MODULE_CONF_DIR_PATH}" "Battery.conf" 'f')";
__BU_HARDWARE_MODULE_CONF_FILE_CPU_PATH="$(BU.ModuleInit.FindPath "${__BU_HARDWARE_MODULE_CONF_DIR_PATH}" "CPU.conf" 'f')";

__BU_HARDWARE_MODULE_CONF_FILE_DRIVE_PATH="$(BU.ModuleInit.FindPath "${__BU_HARDWARE_MODULE_CONF_DIR_PATH}" "Drive.conf" 'f')";
__BU_HARDWARE_MODULE_CONF_FILE_KEYBOARD_PATH="$(BU.ModuleInit.FindPath "${__BU_HARDWARE_MODULE_CONF_DIR_PATH}" "Keyboard.conf" 'f')";
__BU_HARDWARE_MODULE_CONF_FILE_MEMORY_PATH="$(BU.ModuleInit.FindPath "${__BU_HARDWARE_MODULE_CONF_DIR_PATH}" "Memory.conf" 'f')";

__BU_HARDWARE_MODULE_CONF_FILE_MOTHERBOARD_PATH="$(BU.ModuleInit.FindPath "${__BU_HARDWARE_MODULE_CONF_DIR_PATH}" "Motherboard.conf" 'f')";
__BU_HARDWARE_MODULE_CONF_FILE_MOUSE_PATH="$(BU.ModuleInit.FindPath "${__BU_HARDWARE_MODULE_CONF_DIR_PATH}" "Mouse.conf" 'f')";
__BU_HARDWARE_MODULE_CONF_FILE_PORTS_PATH="$(BU.ModuleInit.FindPath "${__BU_HARDWARE_MODULE_CONF_DIR_PATH}" "Ports.conf" 'f')";

__BU_HARDWARE_MODULE_CONF_FILE_TOUCHPAD_PATH="$(BU.ModuleInit.FindPath "${__BU_HARDWARE_MODULE_CONF_DIR_PATH}" "Touchpad.conf" 'f')";

## ----------------------------------------------

## HARDWARE MODULE'S INITIALIZER PATH

# Hardware module's initializer file.
__BU_HARDWARE_MODULE_LIB_FILE_INITIALIZER_FILE_PATH="$(BU.ModuleInit.FindPath "${__BU_MODULE_INIT_CURRENT_MODULE_INIT_PATH}" "Initializer.sh" 'f')" || { printf "IN « %s », LINE « %s » --> BASH-UTILS ERROR : Unable to define the path to store in the « %s » global variable\n"                    "${BASH_SOURCE[0]}" "${LINENO}" '$__BU_HARDWARE_MODULE_LIB_FILE_INITIALIZER_FILE_PATH'; BU.ModuleInit.MsgAbort; BU.ModuleInit.AskPrintLog; BU.ModuleInit.IsInScript && exit 1; return 1; };

## ----------------------------------------------

## HARDWARE MODULE'S "functions" FOLDER'S SUB-FOLDERS CONTENT

# Path to the function files of the Hardware module's library, according to the current operating system.
if BU.Main.OS.IsBSD; then
    if      BU.Main.OS.IsFreeBSD;   then v_hardware_modinit_bsd_sys="FreeBSD";
    elif    BU.Main.OS.IsNetBSD;    then v_hardware_modinit_bsd_sys="NetBSD";
    elif    BU.Main.OS.IsOpenBSD;   then v_hardware_modinit_bsd_sys="OpenBSD"; fi

    BU.ModuleInit.Msg "Operating system : $[v_hardware_modinit_bsd_sys]"; BU.ModuleInit.Msg;

    __BU_HARDWARE_MODULE_LIB_MOD_DIR_PATH_INFO="$(BU.ModuleInit.FindPath "${__BU_HARDWARE_MODULE_LIB_MOD_DIR_PATH}" "BSD" 'd')";
    BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_HARDWARE_MODULE_LIB_MOD_DIR_PATH_INFO' "${__BU_HARDWARE_MODULE_LIB_MOD_DIR_PATH_INFO}" 'Dirpath' "This variable stores the path to the folder containing the library files needed for the $(BU.Main.Decho.Decho.Path "Hardware") module and designed for the current operating system."                                "${BASH_SOURCE[0]}" "${FUNCNAME[0]}" "$(( LINENO - 1 ))";

    __BU_HARDWARE_MODULE_FUNCTIONS_FILES_PATH_ARRAY=("${__BU_HARDWARE_MODULE_LIB_MOD_DIR_PATH_INFO}/"*.lib);
    BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_HARDWARE_MODULE_FUNCTIONS_FILES_PATH_ARRAY' "" 'Array' "This array stores the path of each « .lib » library file in the functions folder of the $(BU.Main.Decho.Decho.Path "Hardware") module according to the current operating system (Current OS : ${v_hardware_modinit_bsd_sys}) TO SOURCE (NOT SOURCED YET)"      "${BASH_SOURCE[0]}" "${FUNCNAME[0]}" "$(( LINENO - 1 ))" "${__BU_HARDWARE_MODULE_FUNCTIONS_FILES_PATH_ARRAY[@]}";

    unset v_hardware_modinit_bsd_sys;
fi

BU.Main.OS.IsHaiku && {
    BU.ModuleInit.Msg "Operating system : Haiku"; BU.ModuleInit.Msg;

    __BU_HARDWARE_MODULE_LIB_MOD_DIR_PATH_INFO="$(BU.ModuleInit.FindPath "${__BU_HARDWARE_MODULE_LIB_MOD_DIR_PATH}" "Haiku" 'd')";
    BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_HARDWARE_MODULE_LIB_MOD_DIR_PATH_INFO' "${__BU_HARDWARE_MODULE_LIB_MOD_DIR_PATH_INFO}" 'Dirpath' "This variable stores the path to the folder containing the library files needed for the $(BU.Main.Decho.Decho.Path "Hardware") module and designed for the current operating system."                                "${BASH_SOURCE[0]}" "${FUNCNAME[0]}" "$(( LINENO - 1 ))";

    __BU_HARDWARE_MODULE_FUNCTIONS_FILES_PATH_ARRAY=("${__BU_HARDWARE_MODULE_LIB_MOD_DIR_PATH_INFO}/"*.lib);
    BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_HARDWARE_MODULE_FUNCTIONS_FILES_PATH_ARRAY' "" 'Array' "This array stores the path of each « .lib » library file in the functions folder of the $(BU.Main.Decho.Decho.Path "Hardware") module according to the current operating system (Current OS : Linux) TO SOURCE (NOT SOURCED YET)"                            "${BASH_SOURCE[0]}" "${FUNCNAME[0]}" "$(( LINENO - 1 ))" "${__BU_HARDWARE_MODULE_FUNCTIONS_FILES_PATH_ARRAY[@]}";
}

BU.Main.OS.IsLinux && {
    BU.ModuleInit.Msg "Operating system : Linux"; BU.ModuleInit.Msg;

    __BU_HARDWARE_MODULE_LIB_MOD_DIR_PATH_INFO="$(BU.ModuleInit.FindPath "${__BU_HARDWARE_MODULE_LIB_MOD_DIR_PATH}" "Linux" 'd')";
    BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_HARDWARE_MODULE_LIB_MOD_DIR_PATH_INFO' "${__BU_HARDWARE_MODULE_LIB_MOD_DIR_PATH_INFO}" 'Dirpath' "This variable stores the path to the folder containing the library files needed for the $(BU.Main.Decho.Decho.Path "Hardware") module and designed for the current operating system."                                "${BASH_SOURCE[0]}" "${FUNCNAME[0]}" "$(( LINENO - 1 ))";

    __BU_HARDWARE_MODULE_FUNCTIONS_FILES_PATH_ARRAY=("${__BU_HARDWARE_MODULE_LIB_MOD_DIR_PATH_INFO}/"*.lib);
    BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_HARDWARE_MODULE_FUNCTIONS_FILES_PATH_ARRAY' "" 'Array' "This array stores the path of each « .lib » library file in the functions folder of the $(BU.Main.Decho.Decho.Path "Hardware") module according to the current operating system (Current OS : Linux) TO SOURCE (NOT SOURCED YET)"                            "${BASH_SOURCE[0]}" "${FUNCNAME[0]}" "$(( LINENO - 1 ))" "${__BU_HARDWARE_MODULE_FUNCTIONS_FILES_PATH_ARRAY[@]}";
}

BU.Main.OS.IsOSX && {
    BU.ModuleInit.Msg "Operating system : Mac OSX"; BU.ModuleInit.Msg;

    __BU_HARDWARE_MODULE_LIB_MOD_DIR_PATH_INFO="$(BU.ModuleInit.FindPath "${__BU_HARDWARE_MODULE_LIB_MOD_DIR_PATH}" "OSX" 'd')";
    BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_HARDWARE_MODULE_LIB_MOD_DIR_PATH_INFO' "${__BU_HARDWARE_MODULE_LIB_MOD_DIR_PATH_INFO}" 'Dirpath' "This variable stores the path to the folder containing the library files needed for the $(BU.Main.Decho.Decho.Path "Hardware") module and designed for the current operating system."                                "${BASH_SOURCE[0]}" "${FUNCNAME[0]}" "$(( LINENO - 1 ))";

    __BU_HARDWARE_MODULE_FUNCTIONS_FILES_PATH_ARRAY=("${__BU_HARDWARE_MODULE_LIB_MOD_DIR_PATH_INFO}/"*.lib);
    BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_HARDWARE_MODULE_FUNCTIONS_FILES_PATH_ARRAY' "" 'Array' "This array stores the path of each « .lib » library file in the functions folder of the $(BU.Main.Decho.Decho.Path "Hardware") module according to the current operating system (Current OS : Linux) TO SOURCE (NOT SOURCED YET)"                            "${BASH_SOURCE[0]}" "${FUNCNAME[0]}" "$(( LINENO - 1 ))" "${__BU_HARDWARE_MODULE_FUNCTIONS_FILES_PATH_ARRAY[@]}";
}

# If the module is loaded on an unsupported OS. <-- TODO
if [ -z "${__BU_HARDWARE_MODULE_LIB_MOD_DIR_PATH_INFO}" ] || [ -z "${__BU_HARDWARE_MODULE_FUNCTIONS_FILES_PATH_ARRAY[*]}" ]; then return 1; fi

## ----------------------------------------------



# /////////////////////////////////////////////////////////////////////////////////////////////// #

#### INITALIZATION VARIABLES

## INITIALIZATION VARIABLES DECLARATIONS

# Note : if a variable is an array, please leave empty the second argument of the "BU.ModuleInit.DisplayInitGlobalVarsInfos()" function.

# Defining an array of parameters in order to store the modified global status variables values,
# in order to check which status variables values have to be changed to their new default value,
# after the Hardware module's initialization.

# It MUST NOT store any value now, it will be processed in the Hardware module's initializer file.
__BU_HARDWARE_MODULE_MODIFIED_STATUS_VARS_ARRAY=();
BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_HARDWARE_MODULE_MODIFIED_STATUS_VARS_ARRAY' "" 'Array' "This array (MUST BE EMPTY BY DEFAULT) stores the global status variables values modified as the « Hardware » module's by the user" "${BASH_SOURCE[0]}" "${FUNCNAME[0]}" "$(( LINENO - 1 ))";

## ----------------------------------------------

## LIBRARY INITALIZATION VARIABLES DECLARATIONS

# Defining an associative array to store each sourced library file's path.
__BU_HARDWARE_MODULE_LIB_FILES_PATH_ARRAY=();
BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_HARDWARE_MODULE_LIB_FILES_PATH_ARRAY' "" 'Array' "This array (MUST BE EMPTY BY DEFAULT) stores the path of each SOURCED « Hardware » module's library files" "${BASH_SOURCE[0]}" "${FUNCNAME[0]}" "$(( LINENO - 1 ))";

## ----------------------------------------------

## CONFIGURATION FILES INITALIZATION VARIABLES DECLARATIONS

# Defining an associative array to store each sourced configuration file's path.
__BU_HARDWARE_MODULE_CONFIG_FILES_PATH_ARRAY=();
BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_HARDWARE_MODULE_CONFIG_FILES_PATH_ARRAY' "" 'Array' "This array (MUST BE EMPTY BY DEFAULT) stores the path of each SOURCED « main » module's configuration files" "${BASH_SOURCE[0]}" "${FUNCNAME[0]}" "$(( LINENO - 1 ))";

# Storing the configuration files path variable values into an array to source, print and add easier into the "${__BU_HARDWARE_MODULE_LIST_CONFIG_FILES_PATH_ARRAY}" associative array.
__BU_HARDWARE_MODULE_LIST_CONFIG_FILES_PATH_ARRAY=();

__BU_HARDWARE_MODULE_LIST_CONFIG_FILES_PATH_ARRAY+=("${__BU_HARDWARE_MODULE_CONF_FILE_AUDIO_PATH}" \
    "${__BU_HARDWARE_MODULE_CONF_FILE_BATTERY_PATH}" \
    "${__BU_HARDWARE_MODULE_CONF_FILE_CPU_PATH}" \
    "${__BU_HARDWARE_MODULE_CONF_FILE_DRIVE_PATH}" \
    "${__BU_HARDWARE_MODULE_CONF_FILE_KEYBOARD_PATH}" \
    "${__BU_HARDWARE_MODULE_CONF_FILE_MEMORY_PATH}" \
    "${__BU_HARDWARE_MODULE_CONF_FILE_MOTHERBOARD_PATH}" \
    "${__BU_HARDWARE_MODULE_CONF_FILE_MOUSE_PATH}" \
    "${__BU_HARDWARE_MODULE_CONF_FILE_PORTS_PATH}" \
    "${__BU_HARDWARE_MODULE_CONF_FILE_TOUCHPAD_PATH}");

BU.ModuleInit.DisplayInitGlobalVarsInfos '__BU_HARDWARE_MODULE_LIST_CONFIG_FILES_PATH_ARRAY' "" 'Array' "This array stores the path of each « main » module's configuration files TO SOURCE (NOT SOURCED YET)" "${BASH_SOURCE[0]}" "${FUNCNAME[0]}" "$(( LINENO - 4 ))" "${__BU_HARDWARE_MODULE_LIST_CONFIG_FILES_PATH_ARRAY[@]}";

## ----------------------------------------------

## END OF THE DEFINITION OF THE GLOBAL VARIABLES OF THE "HARDWARE" MODULE.
