<?xml version = "1.0" encoding="UTF-8" standalone="yes" ?>

<!DOCTYPE ArchData [
    <!ELEMENT ArchData (Vendor*, Module*, Library*, OS*)>

    <!ELEMENT Vendor (Names, Companies, Email)>

    <!ELEMENT Module (Version, LatestChangelogs)>

    <!ELEMENT Library (Version, LatestChangelogs)>

    <!-- If some operating systems are not supported by the current module, their tags must be declared -->
    <!ELEMENT Supported (
        Android,
        Chrome,
        FreeBSD,
        Haiku,
        Linux,
        NetBSD,
        OpenBSD,
        OSX,
        Windows)*>
    <!ELEMENT OS (AllSupported, Supported?)>
    <!ELEMENT AllSupported (#PCDATA)>
    <!ELEMENT Android (#PCDATA)>
    <!ELEMENT Chrome (#PCDATA)>
    <!ELEMENT FreeBSD (#PCDATA)>
    <!ELEMENT Haiku (#PCDATA)>
    <!ELEMENT Linux (#PCDATA)>
    <!ELEMENT NetBSD (#PCDATA)>
    <!ELEMENT OpenBSD (#PCDATA)>
    <!ELEMENT OSX (#PCDATA)>
    <!ELEMENT Windows (#PCDATA)>
]>

<ArchData>
    <Vendor>
        <Names></Names>
    </Vendor>

    <Module>
        <Version>1.0</Version>
        <LatestChangelogs></LatestChangelogs>
    </Module>

    <Library>
        <Version>1.0</Version>
        <LatestChangelogs></LatestChangelogs>
    </Library>

    <OS>
        <!-- If the value contained in the "AllSupported" tag is "false", you have to precise which operating systems are supported or not -->

        <!--\
            Here is how you can implement this functionnality with modules which support these operating systems -> FreeBSD, Haiku, Linux, OpenBSD and OSX :

            <AllSupported>False</AllSupported>
            <Supported>
                <Android>False</Android>
                <Chrome>False</Chrome>
                <FreeBSD>True</FreeBSD>
                <Haiku>True</Haiku>
                <Linux>True</Linux>
                <NetBSD>False</NetBSD>
                <OpenBSD>True</OpenBSD>
                <OSX>True</OSX>
                <Windows>False</Windows>
            </Supported>
        /-->
        <AllSupported>True</AllSupported>
    </OS>
</ArchData>

<!-- Ce DTD décrit la structure d'un document XML appelé "ArchData". Le document peut contenir des éléments "Module", "Library" et "OS" qui peuvent apparaître dans n'importe quel ordre.

La balise "ArchData" est définie comme ayant des balises enfant "Module", "Library" et "OS" qui peuvent apparaître zéro, une ou plusieurs fois. Cela signifie que le document XML peut contenir plusieurs éléments "Module", "Library" et "OS" dans n'importe quel ordre.

Les balises "Module" et "Library" sont définies comme ayant des balises enfant "Version" et "LatestChangelogs".

La balise "OS" est définie comme ayant une balise enfant "AllSupported" obligatoire, suivie d'un groupe optionnel "Supported". La balise "AllSupported" contient une valeur textuelle, tandis que les balises "Supported", "Android", "Chrome", "FreeBSD", "Haiku", "Linux", "NetBSD", "OpenBSD", "OSX" et "Windows" sont définies comme contenant également une valeur textuelle.

La balise "Supported" est un groupe de balises optionnelles qui peuvent être utilisées pour déclarer les systèmes d'exploitation non pris en charge par le module en cours.

En résumé, ce DTD définit la structure d'un document XML qui peut contenir des éléments "Module", "Library" et "OS", où les balises "Module" et "Library" doivent avoir des balises enfant "Version" et "LatestChangelogs", et la balise "OS" doit avoir une balise enfant "AllSupported" obligatoire et un groupe optionnel de balises "Supported" pour déclarer les systèmes d'exploitation non pris en charge.









Ce sont des types de données et des attributs de définition de contenu utilisés dans les DTD (Document Type Definition) pour décrire la structure des documents XML.

    #PCDATA : signifie "Parsed Character Data" (données de caractères analysées). C'est un type de données qui peut contenir du texte avec des balises HTML ou XML imbriquées. Les données PCDATA sont analysées par le parseur XML et sont généralement utilisées pour stocker des données textuelles simples dans un élément XML.

    CDATA : signifie "Character Data" (données de caractères). C'est un type de données qui peut également contenir du texte, mais sans balises HTML ou XML imbriquées. Les données CDATA sont souvent utilisées pour stocker des données qui contiennent des caractères spéciaux qui seraient autrement interprétés comme des balises XML.

    #REQUIRED : signifie que l'attribut doit être présent dans l'élément XML correspondant. C'est une indication que l'attribut est obligatoire pour que l'élément soit valide.

En résumé, #PCDATA et CDATA sont des types de données qui peuvent être utilisés pour stocker du texte dans un élément XML, tandis que #REQUIRED est un attribut qui indique qu'un attribut spécifique est obligatoire pour que l'élément soit valide.-->